{"version":3,"sources":["webpack:///bundle.db5efb9869dd78b12c92.js","webpack:///webpack/bootstrap 6f0f3c97d792a0c6dbcd","webpack:///./index.js","webpack:///../tooling/~/core-js/library/modules/$.core.js","webpack:///./store.js","webpack:///../tooling/~/babel-runtime/core-js/json/stringify.js","webpack:///./~/random-string/lib/random-string.js","webpack:///./~/vue-router/dist/vue-router.js","webpack:///./modules/file-saver.js","webpack:///./routes.js","webpack:///app.vue","webpack:///add.vue","webpack:///home.vue","webpack:///../tooling/~/babel-runtime/core-js/object/assign.js","webpack:///../tooling/~/babel-runtime/helpers/extends.js","webpack:///../tooling/~/core-js/library/fn/json/stringify.js","webpack:///../tooling/~/core-js/library/fn/object/assign.js","webpack:///../tooling/~/core-js/library/modules/$.a-function.js","webpack:///../tooling/~/core-js/library/modules/$.cof.js","webpack:///../tooling/~/core-js/library/modules/$.ctx.js","webpack:///../tooling/~/core-js/library/modules/$.defined.js","webpack:///../tooling/~/core-js/library/modules/$.export.js","webpack:///../tooling/~/core-js/library/modules/$.fails.js","webpack:///../tooling/~/core-js/library/modules/$.global.js","webpack:///../tooling/~/core-js/library/modules/$.iobject.js","webpack:///../tooling/~/core-js/library/modules/$.js","webpack:///../tooling/~/core-js/library/modules/$.object-assign.js","webpack:///../tooling/~/core-js/library/modules/$.to-object.js","webpack:///../tooling/~/core-js/library/modules/es6.object.assign.js","webpack:///./app.vue?107e","webpack:///./components/github.vue?954d","webpack:///./views/add.vue?1ec6","webpack:///./views/home.vue?4ebc","webpack:///./app.vue","webpack:///./components/github.vue","webpack:///./views/add.vue","webpack:///./views/home.vue","webpack:///../tooling/~/vue/dist/vue.common.js","webpack:///../tooling/~/webpack/buildin/amd-define.js","webpack:///../tooling/~/webpack/buildin/amd-options.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_vue","_vue2","_vueRouter","_vueRouter2","_app","_app2","_routes","_routes2","use","router","map","start","core","version","__e","addItem","item","items","getAll","push","localStorage","setItem","_stringify2","JSON","parse","getItem","override","Object","defineProperty","value","_stringify","_defaults","opts","length","numeric","letters","special","_buildChars","chars","numbers","specials","i","rn","rnd","len","randomChars","substring","Math","floor","random","global","factory","this","Target","path","matcher","delegate","Matcher","target","routes","children","generateMatch","startingPath","nestedCallback","fullPath","addRoute","routeArray","handler","l","substr","route","eachRoute","baseRoute","callback","binding","hasOwnProperty","slice","addRouteCallback","add","warn","msg","noWarning","console","error","tryDecode","uri","asComponent","decodeURIComponent","decodeURI","e","isArray","test","prototype","toString","StaticSegment","string","DynamicSegment","name","StarSegment","EpsilonSegment","names","specificity","charAt","segments","split","results","val","match","segment","State","charSpec","nextStates","sortSolutions","states","sort","a","b","recognizeChar","ch","state","concat","RecognizeResults","queryParams","findHandler","handlers","regex","captures","currentCapture","result","params","j","isDynamic","addSegment","currentState","eachChar","put","decodeQueryParamPart","part","replace","warn$1","resolvePath","base","relative","append","query","stack","pop","unshift","join","isPromise","then","getRouteConfig","component","options","$options","resolveAsyncComponent","cb","resolver","components","_","resolve","exports$1","Vue","_resolveComponent","Component","mapParams","undefined","key","stringify","genQuery","canReuse","view","transition","childVM","canReuseFn","to","from","canDeactivate","next","fromComponent","hook","callHook","expectBoolean","canActivate","aborted","deactivate","callHooks","activate","depth","reuse","activateQueue","saveChildView","_bound","setComponent","activateHook","dataHook","waitForData","activated","loading","constructor","$loadingRouteData","unbuild","build","_meta","created","_routerView","keepAlive","cachedChildView","_keepAliveRouterView","childView","cleanup","$destroy","insert","_rendered","_transitionOnLoad","setCurrent","$before","anchor","afterData","afterActivate","loadData","postActivate","$emit","processData","data","promises","isPlainObject","keys","forEach","resolvedVal","$set","all","isPlainOjbect","toArray","Array","applyOverride","_Vue$util","util","extend","defineReactive","init","_init","root","_parent","parent","$router","$route","_children","_defineMeta","destroy","_destroy","_isBeingDestroyed","$remove","apply","arguments","strats","config","optionMergeStrategies","hooksToMergeRE","parentVal","childVal","ret","View","componentDef","directive","internalDirectives","viewDef","_isRouterView","bind","vm","_isDynamicLiteral","parentView","$parent","_rootView","_currentTransition","done","unbind","elementDirective","Link","sameOrigin","link","protocol","location","hostname","port","toggleClasses","el","fn","trim","indexOf","_bind","isObject","addClass","removeClass","onPriority","priority","LINK_UPDATE","activeId","_this","String","childLinks","querySelectorAll","existingId","getAttribute","setAttribute","$on","activeIds","updateClasses","$off","unwatch","$watch","onRouteUpdate","removeAttribute","tagName","onClick","addEventListener","update","exact","prevActiveClass","activeClass","metaKey","ctrlKey","shiftKey","defaultPrevented","button","preventDefault","go","parentNode","pathname","history","rootRE","newPath","stringifyPath","updateActiveMatch","updateHref","activeRE","RegExp","queryStringRE","regexEscapeRE","isAbsolute","href","mode","formatPath","_linkActiveClass","dest","trailingSlashRE","removeEventListener","guardComponent","comp","babelHelpers","classCallCheck","instance","Constructor","TypeError","willAddRoute","Error","addChild","contextEntered","escapeRegex","validChars","generate","invalidChars","repeat","get","child","isEqual","returned","oCreate","create","proto","F","splice","RouteRecognizer","rootState","allSegments","isEmpty","as","handlersFor","hasRoute","output","generateQueryString","pairs","pair","encodeURIComponent","arrayPair","parseQueryString","queryString","keyLength","recognize","silent","pathLen","queryStart","isSlashDropped","solutions","source","hashRE","HTML5History","_ref","onChange","baseEl","document","querySelector","listener","url","search","hash","window","stop","replaceState","pos","x","pageXOffset","y","pageYOffset","pushState","hashMatch","HashHistory","hashbang","self","raw","formattedPath","isAbsoloute","prefix","AbstractHistory","currentPath","RouteTransition","abort","abortingOnLoad","redirect","deactivateQueue","reverseDeactivateQueue","reverse","matched","reuseQueue","runQueue","_onTransitionValidated","_view","queue","step","index","context","_ref$expectBoolean","_ref$postActivate","nextCalled","onError","err","_suppress","onPromiseError","setTimeout","nextWithBoolean","res","ok","nextWithData","exposed","hooks","internalKeysRE","Route","_recognizer","reduce","prev","cur","_notFoundHandler","enumerable","freeze","historyBackends","abstract","html5","Router","_ref$hashbang","_ref$abstract","_ref$history","_ref$saveScrollPosition","saveScrollPosition","_ref$transitionOnLoad","transitionOnLoad","_ref$suppressTransitionError","suppressTransitionError","_ref$root","_ref$linkActiveClass","linkActiveClass","installed","app","_guardRecognizer","_started","_startCb","_currentRoute","_previousTransition","_notFoundRedirect","_beforeEachHooks","_afterEachHooks","_root","_abstract","_hashbang","hasPushState","_history","_historyFallback","inBrowser","History","_match","_saveScrollPosition","_map","on","rootPath","_notFound","_addRoute","_addRedirect","alias","_addAlias","beforeEach","afterEach","App","container","_appContainer","Ctor","_appConstructor","_location","assign","generatedPath","currentParams","targetParams","encodeURI","subRoutes","subPath","redirectPath","_addGuard","aliasPath","mappedPath","_handler","_this2","realPath","_checkGuard","_this3","currentRoute","currentTransition","_prevTransition","beforeHooks","startTransition","_postTransition","nextTick","scrollTo","getElementById","scrollX","offsetTop","install","externalVue","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","saveAs","navigator","userAgent","doc","get_URL","URL","webkitURL","save_link","createElementNS","can_use_save_link","click","node","event","MouseEvent","dispatchEvent","is_safari","webkit_req_fs","webkitRequestFileSystem","req_fs","requestFileSystem","mozRequestFileSystem","throw_outside","ex","setImmediate","force_saveable_type","fs_min_size","arbitrary_revoke_timeout","revoke","file","revoker","revokeObjectURL","remove","dispatch","filesaver","event_types","auto_bom","blob","type","Blob","FileSaver","no_auto_bom","object_url","target_view","blob_changed","dispatch_all","fs_error","FileReader","reader","onloadend","base64Data","readyState","DONE","readAsDataURL","INIT","createObjectURL","new_tab","open","abortable","func","create_if_not_found","exclusive","download","chrome","webkitSlice","size","TEMPORARY","fs","getDirectory","dir","save","getFile","createWriter","writer","onwriteend","toURL","onerror","code","ABORT_ERR","write","WRITING","NOT_FOUND_ERR","FS_proto","msSaveOrOpenBlob","onwritestart","onprogress","onwrite","onabort","content","/","/add","_github","_github2","year","Date","getFullYear","github","hasEmptyField","_extends2","_extends3","_randomString","_randomString2","_store","title","description","date","time","methods","handleSubmit","_fileSaver","list","removeItem","filter","exportAsJSON","filters","timer","getTime","now","duration","_Object$assign","it","aFunction","that","ctx","PROTOTYPE","$export","own","out","IS_FORCED","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","P","IS_BIND","B","IS_WRAP","W","C","param","Function","exec","__g","cof","propertyIsEnumerable","$Object","getProto","getPrototypeOf","isEnum","getDesc","getOwnPropertyDescriptor","setDesc","setDescs","defineProperties","getKeys","getNames","getOwnPropertyNames","getSymbols","getOwnPropertySymbols","each","$","toObject","IObject","A","Symbol","K","k","T","$$","$$len","defined","__vue_script__","__vue_template__","template","set","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","_proxy","_digest","del","_unproxy","isLiteral","exp","literalValueRE","isReserved","str","charCodeAt","_toString","toNumber","parsed","Number","isNaN","toBoolean","stripQuotes","camelize","camelizeRE","toUpper","toUpperCase","hyphenate","hyphenateRE","toLowerCase","classify","classifyRE","OBJECT_STRING","def","writable","configurable","_debounce","wait","timeout","args","timestamp","later","last","arr","cancellable","cancelled","cancel","looseEqual","Cache","limit","head","tail","_keymap","pushFilter","lastFilterIndex","tokens","filterTokenRE","processFilterArg","arg","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","inSingle","inDouble","curly","square","paren","expression","compileRegex","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","htmlRE","cache","parseText","text","html","first","oneTime","lastIndex","tag","tokensToExp","token","formatToken","single","$eval","inlineFilters","filterRE","appendWithTransition","applyTransition","appendChild","beforeWithTransition","before","removeWithTransition","direction","op","__v_trans","transitionEndEvent","_isCompiled","action","inDoc","documentElement","nodeType","contains","getAttr","_attr","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","removeChild","prepend","firstChild","replaceChild","useCapture","off","setClass","cls","isIE9","namespaceURI","className","classList","tar","extractContent","asFragment","rawContent","isTemplate","isFragment","hasChildNodes","trimNode","createDocumentFragment","createElement","isTrimmable","lastChild","createAnchor","persist","debug","createComment","createTextNode","__v_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","removeNodeRange","frag","onRemoved","removed","nodes","getOuterHTML","outerHTML","cloneNode","innerHTML","Dep","uid$1","subs","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","src","__proto__","observe","isExtensible","addVm","doNotObserve","property","getter","setter","childOb","depend","newVal","checkComponentAttr","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","initProp","prop","coerceProp","getPropDefaultValue","assertProp","Boolean","required","expectedType","valid","validator","coerce","mergeData","toVal","fromVal","mergeAssets","guardArrayAssets","guardComponents","ids","guardProps","props","assets","asset","mergeOptions","mergeField","strat","defaultStrat","mixins","camelizedId","assertAsset","initMixin","$el","$root","$children","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_vForRemoving","_unlinkFn","_context","_scope","_frag","_updateRef","_runtimeData","_callHook","_initState","_initEvents","$mount","getPathCharType","formatSubPath","trimmed","maybeUnescapeQuote","nextChar","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","actions","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","parsePath","pathCache","getPath","parseExpression","setPath","original","isString","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","body","saveRE","wsRE","identRE","makeGetterFn","compileSetter","scope","needSet","expressionCache","isSimplePath","pathTestRE","booleanLiteralRE","resetBatcherState","userQueue","has","circular","waiting","internalQueueDepleted","flushBatcherQueue","runBatcherQueue","devtools","emit","queueIndex","watcher","run","pushWatcher","user","q","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","depIds","newDepIds","prevError","twoWay","queued","shallow","traverse","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","wrap","efault","suffix","nodeToFragment","textContent","clonedNode","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","shouldClone","idSelectorCache","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","method","attach","shouldCallRemove","beforeRemove","detach","FragmentFactory","cid","cacheId","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","n","getValue","multi","selected","_value","indexOf$1","keyFilter","codes","charCode","parseInt","keyCodes","keyCode","stopFilter","stopPropagation","preventFilter","selfFilter","currentTarget","normalize","propCache","camel","upper","testEl","prefixed","prefixes","camelPrefixes","style","stringToObject","callActivateHooks","called","total","pushJob","job","queue$1","flush","f","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","isHidden","rect","getBoundingClientRect","width","height","offsetWidth","getClientRects","compileProps","propOptions","attr","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","parentPath","makePropsLinkFn","_props","$get","_bindDir","propDef","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","directiveComparator","descriptor","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","selfDirs","compileElement","compileTextNode","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","ref","modifiers","literal","componentLinkFn","skip","previousElementSibling","dirName","terminalDirectives","pushDir","interpTokens","hasOneTimeToken","hasOneTime","rawName","rawValue","interp","dirDef","parseModifiers","modifierRE","transitionRE","bindRE","onRE","dirAttrRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","noop","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","runtimeData","oldData","removeVm","computed","userDef","metas","eventsMixin","registerComponentEvents","eventRE","_fromParent","registerCallbacks","register","onAttached","callAttach","onDetached","callDetach","events","watch","_initDOMHooks","Directive","_locked","_listeners","_host","lifecycleMixin","refs","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","teardown","miscMixin","_applyFilters","oldValue","offset","read","resolved","requested","pendingCallbacks","cbs","reason","dataAPI","clean","asStatement","$arguments","$delete","deep","sync","immediate","filterRE$1","$interpolate","$log","log","domAPI","op1","op2","targetIsDetached","shouldCallHook","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$after","inDocument","realCb","eventsAPI","modifyListenerCount","count","hookRE","$once","isSource","shouldPropagate","hasParentCbs","some","$broadcast","$dispatch","lifecycleAPI","ready","$compile","limitBy","filterBy","delimiter","convertArray","$value","contains$1","$key","orderBy","sortKey","order","installGlobalAPI","createClass","elementDirectives","transitions","partials","compiler","parsers","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","plugin","mixin","definition","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","isAndroid","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","counter","observer","textNode","characterData","shift","entry","newer","older","returnEntry","async","warnExpressionErrors","_delimitersChanged","_propBindingModes","_maxUpdateCount","addSub","sub","removeSub","addDep","arrayProto","instanceData","defaultData","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","paramAttributes","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","_withLock","$index","tmp","current","text$1","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","t","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","FOR","IF","SLOT","uid$3","vFor","inMatch","itMatch","iterator","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackByKey","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","model","__v_model","forceUpdate","staggerAmount","getStagger","trans","stagger","_preProcess","_postProcess","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","show","toggle","display","text$2","isRange","composing","focused","rawListener","hasjQuery","jQuery","afterBind","radio","checked","select","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","delete","up","right","down","on$1","acceptStatement","iframeBind","contentWindow","capture","prevent","reset","importantRE","cssText","handleObject","handleSingle","isImportant","setProperty","removeProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","modelProp","setAttributeNS","cloak","for","if","vClass","handleArray","prevKeys","inlineTemplate","pendingComponentCb","pendingRemovals","pendingRemovalCb","invalidatePending","resolveComponent","mountComponent","ComponentName","activateHooks","cached","getCached","newComponent","waitingFor","extraOptions","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","parentWatcher","childWatcher","TYPE_TRANSITION","TYPE_ANIMATION","transDurationProp","animDurationProp","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","parseFloat","isFinite","stringified","abs","toFixed","_int","_float","sign","pluralize","delay","__webpack_amd_options__"],"mappings":"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","file":"bundle.db5efb9869dd78b12c92.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"./\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _vue = __webpack_require__(40);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _vueRouter = __webpack_require__(5);\n\t\n\tvar _vueRouter2 = _interopRequireDefault(_vueRouter);\n\t\n\tvar _app = __webpack_require__(36);\n\t\n\tvar _app2 = _interopRequireDefault(_app);\n\t\n\tvar _routes = __webpack_require__(7);\n\t\n\tvar _routes2 = _interopRequireDefault(_routes);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_vue2.default.use(_vueRouter2.default);\n\t\n\tvar router = new _vueRouter2.default();\n\trouter.map(_routes2.default);\n\t\n\trouter.start(_app2.default, 'app');\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tvar core = module.exports = {version: '1.2.6'};\n\tif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _stringify = __webpack_require__(3);\n\t\n\tvar _stringify2 = _interopRequireDefault(_stringify);\n\t\n\texports.addItem = addItem;\n\texports.getAll = getAll;\n\texports.override = override;\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction addItem(item) {\n\t\tvar items = getAll();\n\t\titems.push(item);\n\t\tlocalStorage.setItem('tiktoks', (0, _stringify2.default)(items));\n\t}\n\t\n\tfunction getAll() {\n\t\treturn JSON.parse(localStorage.getItem('tiktoks')) || [];\n\t}\n\t\n\tfunction override(items) {\n\t\tlocalStorage.setItem('tiktoks', (0, _stringify2.default)(items));\n\t}\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(13), __esModule: true };\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t/*\n\t * random-string\n\t * https://github.com/valiton/node-random-string\n\t *\n\t * Copyright (c) 2013 Valiton GmbH, Bastian 'hereandnow' Behrens\n\t * Licensed under the MIT license.\n\t */\n\t\n\t'use strict';\n\t\n\tvar numbers = '0123456789',\n\t    letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz',\n\t    specials = '!$%^&*()_+|~-=`{}[]:;<>?,./';\n\t\n\t\n\tfunction _defaults (opts) {\n\t  opts || (opts = {});\n\t  return {\n\t    length: opts.length || 8,\n\t    numeric: typeof opts.numeric === 'boolean' ? opts.numeric : true,\n\t    letters: typeof opts.letters === 'boolean' ? opts.letters : true,\n\t    special: typeof opts.special === 'boolean' ? opts.special : false\n\t  };\n\t}\n\t\n\tfunction _buildChars (opts) {\n\t  var chars = '';\n\t  if (opts.numeric) { chars += numbers; }\n\t  if (opts.letters) { chars += letters; }\n\t  if (opts.special) { chars += specials; }\n\t  return chars;\n\t}\n\t\n\tmodule.exports = function randomString(opts) {\n\t  opts = _defaults(opts);\n\t  var i, rn,\n\t      rnd = '',\n\t      len = opts.length,\n\t      randomChars = _buildChars(opts);\n\t  for (i = 1; i <= len; i++) {\n\t    rnd += randomChars.substring(rn = Math.floor(Math.random() * randomChars.length), rn + 1);\n\t  }\n\t  return rnd;\n\t};\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * vue-router v0.7.13\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  global.VueRouter = factory();\n\t}(this, function () { 'use strict';\n\t\n\t  var babelHelpers = {};\n\t\n\t  babelHelpers.classCallCheck = function (instance, Constructor) {\n\t    if (!(instance instanceof Constructor)) {\n\t      throw new TypeError(\"Cannot call a class as a function\");\n\t    }\n\t  };\n\t  function Target(path, matcher, delegate) {\n\t    this.path = path;\n\t    this.matcher = matcher;\n\t    this.delegate = delegate;\n\t  }\n\t\n\t  Target.prototype = {\n\t    to: function to(target, callback) {\n\t      var delegate = this.delegate;\n\t\n\t      if (delegate && delegate.willAddRoute) {\n\t        target = delegate.willAddRoute(this.matcher.target, target);\n\t      }\n\t\n\t      this.matcher.add(this.path, target);\n\t\n\t      if (callback) {\n\t        if (callback.length === 0) {\n\t          throw new Error(\"You must have an argument in the function passed to `to`\");\n\t        }\n\t        this.matcher.addChild(this.path, target, callback, this.delegate);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t\n\t  function Matcher(target) {\n\t    this.routes = {};\n\t    this.children = {};\n\t    this.target = target;\n\t  }\n\t\n\t  Matcher.prototype = {\n\t    add: function add(path, handler) {\n\t      this.routes[path] = handler;\n\t    },\n\t\n\t    addChild: function addChild(path, target, callback, delegate) {\n\t      var matcher = new Matcher(target);\n\t      this.children[path] = matcher;\n\t\n\t      var match = generateMatch(path, matcher, delegate);\n\t\n\t      if (delegate && delegate.contextEntered) {\n\t        delegate.contextEntered(target, match);\n\t      }\n\t\n\t      callback(match);\n\t    }\n\t  };\n\t\n\t  function generateMatch(startingPath, matcher, delegate) {\n\t    return function (path, nestedCallback) {\n\t      var fullPath = startingPath + path;\n\t\n\t      if (nestedCallback) {\n\t        nestedCallback(generateMatch(fullPath, matcher, delegate));\n\t      } else {\n\t        return new Target(startingPath + path, matcher, delegate);\n\t      }\n\t    };\n\t  }\n\t\n\t  function addRoute(routeArray, path, handler) {\n\t    var len = 0;\n\t    for (var i = 0, l = routeArray.length; i < l; i++) {\n\t      len += routeArray[i].path.length;\n\t    }\n\t\n\t    path = path.substr(len);\n\t    var route = { path: path, handler: handler };\n\t    routeArray.push(route);\n\t  }\n\t\n\t  function eachRoute(baseRoute, matcher, callback, binding) {\n\t    var routes = matcher.routes;\n\t\n\t    for (var path in routes) {\n\t      if (routes.hasOwnProperty(path)) {\n\t        var routeArray = baseRoute.slice();\n\t        addRoute(routeArray, path, routes[path]);\n\t\n\t        if (matcher.children[path]) {\n\t          eachRoute(routeArray, matcher.children[path], callback, binding);\n\t        } else {\n\t          callback.call(binding, routeArray);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function map (callback, addRouteCallback) {\n\t    var matcher = new Matcher();\n\t\n\t    callback(generateMatch(\"\", matcher, this.delegate));\n\t\n\t    eachRoute([], matcher, function (route) {\n\t      if (addRouteCallback) {\n\t        addRouteCallback(this, route);\n\t      } else {\n\t        this.add(route);\n\t      }\n\t    }, this);\n\t  }\n\t\n\t  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\t\n\t  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\t\n\t  var noWarning = false;\n\t  function warn(msg) {\n\t    if (!noWarning && typeof console !== 'undefined') {\n\t      console.error('[vue-router] ' + msg);\n\t    }\n\t  }\n\t\n\t  function tryDecode(uri, asComponent) {\n\t    try {\n\t      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);\n\t    } catch (e) {\n\t      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);\n\t    }\n\t  }\n\t\n\t  function isArray(test) {\n\t    return Object.prototype.toString.call(test) === \"[object Array]\";\n\t  }\n\t\n\t  // A Segment represents a segment in the original route description.\n\t  // Each Segment type provides an `eachChar` and `regex` method.\n\t  //\n\t  // The `eachChar` method invokes the callback with one or more character\n\t  // specifications. A character specification consumes one or more input\n\t  // characters.\n\t  //\n\t  // The `regex` method returns a regex fragment for the segment. If the\n\t  // segment is a dynamic of star segment, the regex fragment also includes\n\t  // a capture.\n\t  //\n\t  // A character specification contains:\n\t  //\n\t  // * `validChars`: a String with a list of all valid characters, or\n\t  // * `invalidChars`: a String with a list of all invalid characters\n\t  // * `repeat`: true if the character specification can repeat\n\t\n\t  function StaticSegment(string) {\n\t    this.string = string;\n\t  }\n\t  StaticSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      var string = this.string,\n\t          ch;\n\t\n\t      for (var i = 0, l = string.length; i < l; i++) {\n\t        ch = string.charAt(i);\n\t        callback({ validChars: ch });\n\t      }\n\t    },\n\t\n\t    regex: function regex() {\n\t      return this.string.replace(escapeRegex, '\\\\$1');\n\t    },\n\t\n\t    generate: function generate() {\n\t      return this.string;\n\t    }\n\t  };\n\t\n\t  function DynamicSegment(name) {\n\t    this.name = name;\n\t  }\n\t  DynamicSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"/\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"([^/]+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function StarSegment(name) {\n\t    this.name = name;\n\t  }\n\t  StarSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"(.+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function EpsilonSegment() {}\n\t  EpsilonSegment.prototype = {\n\t    eachChar: function eachChar() {},\n\t    regex: function regex() {\n\t      return \"\";\n\t    },\n\t    generate: function generate() {\n\t      return \"\";\n\t    }\n\t  };\n\t\n\t  function parse(route, names, specificity) {\n\t    // normalize route as not starting with a \"/\". Recognition will\n\t    // also normalize.\n\t    if (route.charAt(0) === \"/\") {\n\t      route = route.substr(1);\n\t    }\n\t\n\t    var segments = route.split(\"/\"),\n\t        results = [];\n\t\n\t    // A routes has specificity determined by the order that its different segments\n\t    // appear in. This system mirrors how the magnitude of numbers written as strings\n\t    // works.\n\t    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n\t    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n\t    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n\t    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n\t    // leading symbol, \"1\".\n\t    // The rule is that symbols to the left carry more weight than symbols to the right\n\t    // when a number is written out as a string. In the above strings, the leading digit\n\t    // represents how many 100's are in the number, and it carries more weight than the middle\n\t    // number which represents how many 10's are in the number.\n\t    // This system of number magnitude works well for route specificity, too. A route written as\n\t    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n\t    // `x`, irrespective of the other parts.\n\t    // Because of this similarity, we assign each type of segment a number value written as a\n\t    // string. We can find the specificity of compound routes by concatenating these strings\n\t    // together, from left to right. After we have looped through all of the segments,\n\t    // we convert the string to a number.\n\t    specificity.val = '';\n\t\n\t    for (var i = 0, l = segments.length; i < l; i++) {\n\t      var segment = segments[i],\n\t          match;\n\t\n\t      if (match = segment.match(/^:([^\\/]+)$/)) {\n\t        results.push(new DynamicSegment(match[1]));\n\t        names.push(match[1]);\n\t        specificity.val += '3';\n\t      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n\t        results.push(new StarSegment(match[1]));\n\t        specificity.val += '2';\n\t        names.push(match[1]);\n\t      } else if (segment === \"\") {\n\t        results.push(new EpsilonSegment());\n\t        specificity.val += '1';\n\t      } else {\n\t        results.push(new StaticSegment(segment));\n\t        specificity.val += '4';\n\t      }\n\t    }\n\t\n\t    specificity.val = +specificity.val;\n\t\n\t    return results;\n\t  }\n\t\n\t  // A State has a character specification and (`charSpec`) and a list of possible\n\t  // subsequent states (`nextStates`).\n\t  //\n\t  // If a State is an accepting state, it will also have several additional\n\t  // properties:\n\t  //\n\t  // * `regex`: A regular expression that is used to extract parameters from paths\n\t  //   that reached this accepting state.\n\t  // * `handlers`: Information on how to convert the list of captures into calls\n\t  //   to registered handlers with the specified parameters\n\t  // * `types`: How many static, dynamic or star segments in this route. Used to\n\t  //   decide which route to use if multiple registered routes match a path.\n\t  //\n\t  // Currently, State is implemented naively by looping over `nextStates` and\n\t  // comparing a character specification against a character. A more efficient\n\t  // implementation would use a hash of keys pointing at one or more next states.\n\t\n\t  function State(charSpec) {\n\t    this.charSpec = charSpec;\n\t    this.nextStates = [];\n\t  }\n\t\n\t  State.prototype = {\n\t    get: function get(charSpec) {\n\t      var nextStates = this.nextStates;\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        var child = nextStates[i];\n\t\n\t        var isEqual = child.charSpec.validChars === charSpec.validChars;\n\t        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\t\n\t        if (isEqual) {\n\t          return child;\n\t        }\n\t      }\n\t    },\n\t\n\t    put: function put(charSpec) {\n\t      var state;\n\t\n\t      // If the character specification already exists in a child of the current\n\t      // state, just return that state.\n\t      if (state = this.get(charSpec)) {\n\t        return state;\n\t      }\n\t\n\t      // Make a new state for the character spec\n\t      state = new State(charSpec);\n\t\n\t      // Insert the new state as a child of the current state\n\t      this.nextStates.push(state);\n\t\n\t      // If this character specification repeats, insert the new state as a child\n\t      // of itself. Note that this will not trigger an infinite loop because each\n\t      // transition during recognition consumes a character.\n\t      if (charSpec.repeat) {\n\t        state.nextStates.push(state);\n\t      }\n\t\n\t      // Return the new state\n\t      return state;\n\t    },\n\t\n\t    // Find a list of child states matching the next character\n\t    match: function match(ch) {\n\t      // DEBUG \"Processing `\" + ch + \"`:\"\n\t      var nextStates = this.nextStates,\n\t          child,\n\t          charSpec,\n\t          chars;\n\t\n\t      // DEBUG \"  \" + debugState(this)\n\t      var returned = [];\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        child = nextStates[i];\n\t\n\t        charSpec = child.charSpec;\n\t\n\t        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) !== -1) {\n\t            returned.push(child);\n\t          }\n\t        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) === -1) {\n\t            returned.push(child);\n\t          }\n\t        }\n\t      }\n\t\n\t      return returned;\n\t    }\n\t\n\t    /** IF DEBUG\n\t    , debug: function() {\n\t      var charSpec = this.charSpec,\n\t          debug = \"[\",\n\t          chars = charSpec.validChars || charSpec.invalidChars;\n\t       if (charSpec.invalidChars) { debug += \"^\"; }\n\t      debug += chars;\n\t      debug += \"]\";\n\t       if (charSpec.repeat) { debug += \"+\"; }\n\t       return debug;\n\t    }\n\t    END IF **/\n\t  };\n\t\n\t  /** IF DEBUG\n\t  function debug(log) {\n\t    console.log(log);\n\t  }\n\t\n\t  function debugState(state) {\n\t    return state.nextStates.map(function(n) {\n\t      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n\t      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n\t    }).join(\", \")\n\t  }\n\t  END IF **/\n\t\n\t  // Sort the routes by specificity\n\t  function sortSolutions(states) {\n\t    return states.sort(function (a, b) {\n\t      return b.specificity.val - a.specificity.val;\n\t    });\n\t  }\n\t\n\t  function recognizeChar(states, ch) {\n\t    var nextStates = [];\n\t\n\t    for (var i = 0, l = states.length; i < l; i++) {\n\t      var state = states[i];\n\t\n\t      nextStates = nextStates.concat(state.match(ch));\n\t    }\n\t\n\t    return nextStates;\n\t  }\n\t\n\t  var oCreate = Object.create || function (proto) {\n\t    function F() {}\n\t    F.prototype = proto;\n\t    return new F();\n\t  };\n\t\n\t  function RecognizeResults(queryParams) {\n\t    this.queryParams = queryParams || {};\n\t  }\n\t  RecognizeResults.prototype = oCreate({\n\t    splice: Array.prototype.splice,\n\t    slice: Array.prototype.slice,\n\t    push: Array.prototype.push,\n\t    length: 0,\n\t    queryParams: null\n\t  });\n\t\n\t  function findHandler(state, path, queryParams) {\n\t    var handlers = state.handlers,\n\t        regex = state.regex;\n\t    var captures = path.match(regex),\n\t        currentCapture = 1;\n\t    var result = new RecognizeResults(queryParams);\n\t\n\t    for (var i = 0, l = handlers.length; i < l; i++) {\n\t      var handler = handlers[i],\n\t          names = handler.names,\n\t          params = {};\n\t\n\t      for (var j = 0, m = names.length; j < m; j++) {\n\t        params[names[j]] = captures[currentCapture++];\n\t      }\n\t\n\t      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n\t    }\n\t\n\t    return result;\n\t  }\n\t\n\t  function addSegment(currentState, segment) {\n\t    segment.eachChar(function (ch) {\n\t      var state;\n\t\n\t      currentState = currentState.put(ch);\n\t    });\n\t\n\t    return currentState;\n\t  }\n\t\n\t  function decodeQueryParamPart(part) {\n\t    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n\t    part = part.replace(/\\+/gm, '%20');\n\t    return tryDecode(part, true);\n\t  }\n\t\n\t  // The main interface\n\t\n\t  var RouteRecognizer = function RouteRecognizer() {\n\t    this.rootState = new State();\n\t    this.names = {};\n\t  };\n\t\n\t  RouteRecognizer.prototype = {\n\t    add: function add(routes, options) {\n\t      var currentState = this.rootState,\n\t          regex = \"^\",\n\t          specificity = {},\n\t          handlers = [],\n\t          allSegments = [],\n\t          name;\n\t\n\t      var isEmpty = true;\n\t\n\t      for (var i = 0, l = routes.length; i < l; i++) {\n\t        var route = routes[i],\n\t            names = [];\n\t\n\t        var segments = parse(route.path, names, specificity);\n\t\n\t        allSegments = allSegments.concat(segments);\n\t\n\t        for (var j = 0, m = segments.length; j < m; j++) {\n\t          var segment = segments[j];\n\t\n\t          if (segment instanceof EpsilonSegment) {\n\t            continue;\n\t          }\n\t\n\t          isEmpty = false;\n\t\n\t          // Add a \"/\" for the new segment\n\t          currentState = currentState.put({ validChars: \"/\" });\n\t          regex += \"/\";\n\t\n\t          // Add a representation of the segment to the NFA and regex\n\t          currentState = addSegment(currentState, segment);\n\t          regex += segment.regex();\n\t        }\n\t\n\t        var handler = { handler: route.handler, names: names };\n\t        handlers.push(handler);\n\t      }\n\t\n\t      if (isEmpty) {\n\t        currentState = currentState.put({ validChars: \"/\" });\n\t        regex += \"/\";\n\t      }\n\t\n\t      currentState.handlers = handlers;\n\t      currentState.regex = new RegExp(regex + \"$\");\n\t      currentState.specificity = specificity;\n\t\n\t      if (name = options && options.as) {\n\t        this.names[name] = {\n\t          segments: allSegments,\n\t          handlers: handlers\n\t        };\n\t      }\n\t    },\n\t\n\t    handlersFor: function handlersFor(name) {\n\t      var route = this.names[name],\n\t          result = [];\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      for (var i = 0, l = route.handlers.length; i < l; i++) {\n\t        result.push(route.handlers[i]);\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    hasRoute: function hasRoute(name) {\n\t      return !!this.names[name];\n\t    },\n\t\n\t    generate: function generate(name, params) {\n\t      var route = this.names[name],\n\t          output = \"\";\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      var segments = route.segments;\n\t\n\t      for (var i = 0, l = segments.length; i < l; i++) {\n\t        var segment = segments[i];\n\t\n\t        if (segment instanceof EpsilonSegment) {\n\t          continue;\n\t        }\n\t\n\t        output += \"/\";\n\t        output += segment.generate(params);\n\t      }\n\t\n\t      if (output.charAt(0) !== '/') {\n\t        output = '/' + output;\n\t      }\n\t\n\t      if (params && params.queryParams) {\n\t        output += this.generateQueryString(params.queryParams);\n\t      }\n\t\n\t      return output;\n\t    },\n\t\n\t    generateQueryString: function generateQueryString(params) {\n\t      var pairs = [];\n\t      var keys = [];\n\t      for (var key in params) {\n\t        if (params.hasOwnProperty(key)) {\n\t          keys.push(key);\n\t        }\n\t      }\n\t      keys.sort();\n\t      for (var i = 0, len = keys.length; i < len; i++) {\n\t        key = keys[i];\n\t        var value = params[key];\n\t        if (value == null) {\n\t          continue;\n\t        }\n\t        var pair = encodeURIComponent(key);\n\t        if (isArray(value)) {\n\t          for (var j = 0, l = value.length; j < l; j++) {\n\t            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n\t            pairs.push(arrayPair);\n\t          }\n\t        } else {\n\t          pair += \"=\" + encodeURIComponent(value);\n\t          pairs.push(pair);\n\t        }\n\t      }\n\t\n\t      if (pairs.length === 0) {\n\t        return '';\n\t      }\n\t\n\t      return \"?\" + pairs.join(\"&\");\n\t    },\n\t\n\t    parseQueryString: function parseQueryString(queryString) {\n\t      var pairs = queryString.split(\"&\"),\n\t          queryParams = {};\n\t      for (var i = 0; i < pairs.length; i++) {\n\t        var pair = pairs[i].split('='),\n\t            key = decodeQueryParamPart(pair[0]),\n\t            keyLength = key.length,\n\t            isArray = false,\n\t            value;\n\t        if (pair.length === 1) {\n\t          value = 'true';\n\t        } else {\n\t          //Handle arrays\n\t          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n\t            isArray = true;\n\t            key = key.slice(0, keyLength - 2);\n\t            if (!queryParams[key]) {\n\t              queryParams[key] = [];\n\t            }\n\t          }\n\t          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n\t        }\n\t        if (isArray) {\n\t          queryParams[key].push(value);\n\t        } else {\n\t          queryParams[key] = value;\n\t        }\n\t      }\n\t      return queryParams;\n\t    },\n\t\n\t    recognize: function recognize(path, silent) {\n\t      noWarning = silent;\n\t      var states = [this.rootState],\n\t          pathLen,\n\t          i,\n\t          l,\n\t          queryStart,\n\t          queryParams = {},\n\t          isSlashDropped = false;\n\t\n\t      queryStart = path.indexOf('?');\n\t      if (queryStart !== -1) {\n\t        var queryString = path.substr(queryStart + 1, path.length);\n\t        path = path.substr(0, queryStart);\n\t        if (queryString) {\n\t          queryParams = this.parseQueryString(queryString);\n\t        }\n\t      }\n\t\n\t      path = tryDecode(path);\n\t      if (!path) return;\n\t\n\t      // DEBUG GROUP path\n\t\n\t      if (path.charAt(0) !== \"/\") {\n\t        path = \"/\" + path;\n\t      }\n\t\n\t      pathLen = path.length;\n\t      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n\t        path = path.substr(0, pathLen - 1);\n\t        isSlashDropped = true;\n\t      }\n\t\n\t      for (i = 0, l = path.length; i < l; i++) {\n\t        states = recognizeChar(states, path.charAt(i));\n\t        if (!states.length) {\n\t          break;\n\t        }\n\t      }\n\t\n\t      // END DEBUG GROUP\n\t\n\t      var solutions = [];\n\t      for (i = 0, l = states.length; i < l; i++) {\n\t        if (states[i].handlers) {\n\t          solutions.push(states[i]);\n\t        }\n\t      }\n\t\n\t      states = sortSolutions(solutions);\n\t\n\t      var state = solutions[0];\n\t\n\t      if (state && state.handlers) {\n\t        // if a trailing slash was dropped and a star segment is the last segment\n\t        // specified, put the trailing slash back\n\t        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n\t          path = path + \"/\";\n\t        }\n\t        return findHandler(state, path, queryParams);\n\t      }\n\t    }\n\t  };\n\t\n\t  RouteRecognizer.prototype.map = map;\n\t\n\t  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\t\n\t  // export default for holding the Vue reference\n\t  var exports$1 = {};\n\t  /**\n\t   * Warn stuff.\n\t   *\n\t   * @param {String} msg\n\t   */\n\t\n\t  function warn$1(msg) {\n\t    /* istanbul ignore next */\n\t    if (typeof console !== 'undefined') {\n\t      console.error('[vue-router] ' + msg);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Resolve a relative path.\n\t   *\n\t   * @param {String} base\n\t   * @param {String} relative\n\t   * @param {Boolean} append\n\t   * @return {String}\n\t   */\n\t\n\t  function resolvePath(base, relative, append) {\n\t    var query = base.match(/(\\?.*)$/);\n\t    if (query) {\n\t      query = query[1];\n\t      base = base.slice(0, -query.length);\n\t    }\n\t    // a query!\n\t    if (relative.charAt(0) === '?') {\n\t      return base + relative;\n\t    }\n\t    var stack = base.split('/');\n\t    // remove trailing segment if:\n\t    // - not appending\n\t    // - appending to trailing slash (last segment is empty)\n\t    if (!append || !stack[stack.length - 1]) {\n\t      stack.pop();\n\t    }\n\t    // resolve relative path\n\t    var segments = relative.replace(/^\\//, '').split('/');\n\t    for (var i = 0; i < segments.length; i++) {\n\t      var segment = segments[i];\n\t      if (segment === '.') {\n\t        continue;\n\t      } else if (segment === '..') {\n\t        stack.pop();\n\t      } else {\n\t        stack.push(segment);\n\t      }\n\t    }\n\t    // ensure leading slash\n\t    if (stack[0] !== '') {\n\t      stack.unshift('');\n\t    }\n\t    return stack.join('/');\n\t  }\n\t\n\t  /**\n\t   * Forgiving check for a promise\n\t   *\n\t   * @param {Object} p\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function isPromise(p) {\n\t    return p && typeof p.then === 'function';\n\t  }\n\t\n\t  /**\n\t   * Retrive a route config field from a component instance\n\t   * OR a component contructor.\n\t   *\n\t   * @param {Function|Vue} component\n\t   * @param {String} name\n\t   * @return {*}\n\t   */\n\t\n\t  function getRouteConfig(component, name) {\n\t    var options = component && (component.$options || component.options);\n\t    return options && options.route && options.route[name];\n\t  }\n\t\n\t  /**\n\t   * Resolve an async component factory. Have to do a dirty\n\t   * mock here because of Vue core's internal API depends on\n\t   * an ID check.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Function} cb\n\t   */\n\t\n\t  var resolver = undefined;\n\t\n\t  function resolveAsyncComponent(handler, cb) {\n\t    if (!resolver) {\n\t      resolver = {\n\t        resolve: exports$1.Vue.prototype._resolveComponent,\n\t        $options: {\n\t          components: {\n\t            _: handler.component\n\t          }\n\t        }\n\t      };\n\t    } else {\n\t      resolver.$options.components._ = handler.component;\n\t    }\n\t    resolver.resolve('_', function (Component) {\n\t      handler.component = Component;\n\t      cb(Component);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Map the dynamic segments in a path to params.\n\t   *\n\t   * @param {String} path\n\t   * @param {Object} params\n\t   * @param {Object} query\n\t   */\n\t\n\t  function mapParams(path, params, query) {\n\t    if (params === undefined) params = {};\n\t\n\t    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n\t      var val = params[key];\n\t      /* istanbul ignore if */\n\t      if (!val) {\n\t        warn$1('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n\t      }\n\t      return val || '';\n\t    });\n\t    if (query) {\n\t      path += genQuery(query);\n\t    }\n\t    return path;\n\t  }\n\t\n\t  var hashRE = /#.*$/;\n\t\n\t  var HTML5History = (function () {\n\t    function HTML5History(_ref) {\n\t      var root = _ref.root;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HTML5History);\n\t\n\t      if (root && root !== '/') {\n\t        // make sure there's the starting slash\n\t        if (root.charAt(0) !== '/') {\n\t          root = '/' + root;\n\t        }\n\t        // remove trailing slash\n\t        this.root = root.replace(/\\/$/, '');\n\t        this.rootRE = new RegExp('^\\\\' + this.root);\n\t      } else {\n\t        this.root = null;\n\t      }\n\t      this.onChange = onChange;\n\t      // check base tag\n\t      var baseEl = document.querySelector('base');\n\t      this.base = baseEl && baseEl.getAttribute('href');\n\t    }\n\t\n\t    HTML5History.prototype.start = function start() {\n\t      var _this = this;\n\t\n\t      this.listener = function (e) {\n\t        var url = location.pathname + location.search;\n\t        if (_this.root) {\n\t          url = url.replace(_this.rootRE, '');\n\t        }\n\t        _this.onChange(url, e && e.state, location.hash);\n\t      };\n\t      window.addEventListener('popstate', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HTML5History.prototype.stop = function stop() {\n\t      window.removeEventListener('popstate', this.listener);\n\t    };\n\t\n\t    HTML5History.prototype.go = function go(path, replace, append) {\n\t      var url = this.formatPath(path, append);\n\t      if (replace) {\n\t        history.replaceState({}, '', url);\n\t      } else {\n\t        // record scroll position by replacing current state\n\t        history.replaceState({\n\t          pos: {\n\t            x: window.pageXOffset,\n\t            y: window.pageYOffset\n\t          }\n\t        }, '', location.href);\n\t        // then push new state\n\t        history.pushState({}, '', url);\n\t      }\n\t      var hashMatch = path.match(hashRE);\n\t      var hash = hashMatch && hashMatch[0];\n\t      path = url\n\t      // strip hash so it doesn't mess up params\n\t      .replace(hashRE, '')\n\t      // remove root before matching\n\t      .replace(this.rootRE, '');\n\t      this.onChange(path, null, hash);\n\t    };\n\t\n\t    HTML5History.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/'\n\t      // absolute path\n\t      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n\t    };\n\t\n\t    return HTML5History;\n\t  })();\n\t\n\t  var HashHistory = (function () {\n\t    function HashHistory(_ref) {\n\t      var hashbang = _ref.hashbang;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HashHistory);\n\t\n\t      this.hashbang = hashbang;\n\t      this.onChange = onChange;\n\t    }\n\t\n\t    HashHistory.prototype.start = function start() {\n\t      var self = this;\n\t      this.listener = function () {\n\t        var path = location.hash;\n\t        var raw = path.replace(/^#!?/, '');\n\t        // always\n\t        if (raw.charAt(0) !== '/') {\n\t          raw = '/' + raw;\n\t        }\n\t        var formattedPath = self.formatPath(raw);\n\t        if (formattedPath !== path) {\n\t          location.replace(formattedPath);\n\t          return;\n\t        }\n\t        // determine query\n\t        // note it's possible to have queries in both the actual URL\n\t        // and the hash fragment itself.\n\t        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n\t        self.onChange(path.replace(/^#!?/, '') + query);\n\t      };\n\t      window.addEventListener('hashchange', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HashHistory.prototype.stop = function stop() {\n\t      window.removeEventListener('hashchange', this.listener);\n\t    };\n\t\n\t    HashHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.formatPath(path, append);\n\t      if (replace) {\n\t        location.replace(path);\n\t      } else {\n\t        location.hash = path;\n\t      }\n\t    };\n\t\n\t    HashHistory.prototype.formatPath = function formatPath(path, append) {\n\t      var isAbsoloute = path.charAt(0) === '/';\n\t      var prefix = '#' + (this.hashbang ? '!' : '');\n\t      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n\t    };\n\t\n\t    return HashHistory;\n\t  })();\n\t\n\t  var AbstractHistory = (function () {\n\t    function AbstractHistory(_ref) {\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, AbstractHistory);\n\t\n\t      this.onChange = onChange;\n\t      this.currentPath = '/';\n\t    }\n\t\n\t    AbstractHistory.prototype.start = function start() {\n\t      this.onChange('/');\n\t    };\n\t\n\t    AbstractHistory.prototype.stop = function stop() {\n\t      // noop\n\t    };\n\t\n\t    AbstractHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.currentPath = this.formatPath(path, append);\n\t      this.onChange(path);\n\t    };\n\t\n\t    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n\t    };\n\t\n\t    return AbstractHistory;\n\t  })();\n\t\n\t  /**\n\t   * Determine the reusability of an existing router view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function canReuse(view, handler, transition) {\n\t    var component = view.childVM;\n\t    if (!component || !handler) {\n\t      return false;\n\t    }\n\t    // important: check view.Component here because it may\n\t    // have been changed in activate hook\n\t    if (view.Component !== handler.component) {\n\t      return false;\n\t    }\n\t    var canReuseFn = getRouteConfig(component, 'canReuse');\n\t    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n\t      to: transition.to,\n\t      from: transition.from\n\t    }) : true; // defaults to true\n\t  }\n\t\n\t  /**\n\t   * Check if a component can deactivate.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canDeactivate(view, transition, next) {\n\t    var fromComponent = view.childVM;\n\t    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHook(hook, fromComponent, next, {\n\t        expectBoolean: true\n\t      });\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Check if a component can activate.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canActivate(handler, transition, next) {\n\t    resolveAsyncComponent(handler, function (Component) {\n\t      // have to check due to async-ness\n\t      if (transition.aborted) {\n\t        return;\n\t      }\n\t      // determine if this component can be activated\n\t      var hook = getRouteConfig(Component, 'canActivate');\n\t      if (!hook) {\n\t        next();\n\t      } else {\n\t        transition.callHook(hook, null, next, {\n\t          expectBoolean: true\n\t        });\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Call deactivate hooks for existing router-views.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function deactivate(view, transition, next) {\n\t    var component = view.childVM;\n\t    var hook = getRouteConfig(component, 'deactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHooks(hook, component, next);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Activate / switch component for a router-view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Number} depth\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function activate(view, transition, depth, cb, reuse) {\n\t    var handler = transition.activateQueue[depth];\n\t    if (!handler) {\n\t      saveChildView(view);\n\t      if (view._bound) {\n\t        view.setComponent(null);\n\t      }\n\t      cb && cb();\n\t      return;\n\t    }\n\t\n\t    var Component = view.Component = handler.component;\n\t    var activateHook = getRouteConfig(Component, 'activate');\n\t    var dataHook = getRouteConfig(Component, 'data');\n\t    var waitForData = getRouteConfig(Component, 'waitForData');\n\t\n\t    view.depth = depth;\n\t    view.activated = false;\n\t\n\t    var component = undefined;\n\t    var loading = !!(dataHook && !waitForData);\n\t\n\t    // \"reuse\" is a flag passed down when the parent view is\n\t    // either reused via keep-alive or as a child of a kept-alive view.\n\t    // of course we can only reuse if the current kept-alive instance\n\t    // is of the correct type.\n\t    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\t\n\t    if (reuse) {\n\t      // just reuse\n\t      component = view.childVM;\n\t      component.$loadingRouteData = loading;\n\t    } else {\n\t      saveChildView(view);\n\t\n\t      // unbuild current component. this step also destroys\n\t      // and removes all nested child views.\n\t      view.unbuild(true);\n\t\n\t      // build the new component. this will also create the\n\t      // direct child view of the current one. it will register\n\t      // itself as view.childView.\n\t      component = view.build({\n\t        _meta: {\n\t          $loadingRouteData: loading\n\t        },\n\t        created: function created() {\n\t          this._routerView = view;\n\t        }\n\t      });\n\t\n\t      // handle keep-alive.\n\t      // when a kept-alive child vm is restored, we need to\n\t      // add its cached child views into the router's view list,\n\t      // and also properly update current view's child view.\n\t      if (view.keepAlive) {\n\t        component.$loadingRouteData = loading;\n\t        var cachedChildView = component._keepAliveRouterView;\n\t        if (cachedChildView) {\n\t          view.childView = cachedChildView;\n\t          component._keepAliveRouterView = null;\n\t        }\n\t      }\n\t    }\n\t\n\t    // cleanup the component in case the transition is aborted\n\t    // before the component is ever inserted.\n\t    var cleanup = function cleanup() {\n\t      component.$destroy();\n\t    };\n\t\n\t    // actually insert the component and trigger transition\n\t    var insert = function insert() {\n\t      if (reuse) {\n\t        cb && cb();\n\t        return;\n\t      }\n\t      var router = transition.router;\n\t      if (router._rendered || router._transitionOnLoad) {\n\t        view.transition(component);\n\t      } else {\n\t        // no transition on first render, manual transition\n\t        /* istanbul ignore if */\n\t        if (view.setCurrent) {\n\t          // 0.12 compat\n\t          view.setCurrent(component);\n\t        } else {\n\t          // 1.0\n\t          view.childVM = component;\n\t        }\n\t        component.$before(view.anchor, null, false);\n\t      }\n\t      cb && cb();\n\t    };\n\t\n\t    var afterData = function afterData() {\n\t      // activate the child view\n\t      if (view.childView) {\n\t        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n\t      }\n\t      insert();\n\t    };\n\t\n\t    // called after activation hook is resolved\n\t    var afterActivate = function afterActivate() {\n\t      view.activated = true;\n\t      if (dataHook && waitForData) {\n\t        // wait until data loaded to insert\n\t        loadData(component, transition, dataHook, afterData, cleanup);\n\t      } else {\n\t        // load data and insert at the same time\n\t        if (dataHook) {\n\t          loadData(component, transition, dataHook);\n\t        }\n\t        afterData();\n\t      }\n\t    };\n\t\n\t    if (activateHook) {\n\t      transition.callHooks(activateHook, component, afterActivate, {\n\t        cleanup: cleanup,\n\t        postActivate: true\n\t      });\n\t    } else {\n\t      afterActivate();\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Reuse a view, just reload data if necessary.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function reuse(view, transition) {\n\t    var component = view.childVM;\n\t    var dataHook = getRouteConfig(component, 'data');\n\t    if (dataHook) {\n\t      loadData(component, transition, dataHook);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Asynchronously load and apply data to component.\n\t   *\n\t   * @param {Vue} component\n\t   * @param {Transition} transition\n\t   * @param {Function} hook\n\t   * @param {Function} cb\n\t   * @param {Function} cleanup\n\t   */\n\t\n\t  function loadData(component, transition, hook, cb, cleanup) {\n\t    component.$loadingRouteData = true;\n\t    transition.callHooks(hook, component, function () {\n\t      component.$loadingRouteData = false;\n\t      component.$emit('route-data-loaded', component);\n\t      cb && cb();\n\t    }, {\n\t      cleanup: cleanup,\n\t      postActivate: true,\n\t      processData: function processData(data) {\n\t        // handle promise sugar syntax\n\t        var promises = [];\n\t        if (isPlainObject(data)) {\n\t          Object.keys(data).forEach(function (key) {\n\t            var val = data[key];\n\t            if (isPromise(val)) {\n\t              promises.push(val.then(function (resolvedVal) {\n\t                component.$set(key, resolvedVal);\n\t              }));\n\t            } else {\n\t              component.$set(key, val);\n\t            }\n\t          });\n\t        }\n\t        if (promises.length) {\n\t          return promises[0].constructor.all(promises);\n\t        }\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Save the child view for a kept-alive view so that\n\t   * we can restore it when it is switched back to.\n\t   *\n\t   * @param {Directive} view\n\t   */\n\t\n\t  function saveChildView(view) {\n\t    if (view.keepAlive && view.childVM && view.childView) {\n\t      view.childVM._keepAliveRouterView = view.childView;\n\t    }\n\t    view.childView = null;\n\t  }\n\t\n\t  /**\n\t   * Check plain object.\n\t   *\n\t   * @param {*} val\n\t   */\n\t\n\t  function isPlainObject(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  /**\n\t   * A RouteTransition object manages the pipeline of a\n\t   * router-view switching process. This is also the object\n\t   * passed into user route hooks.\n\t   *\n\t   * @param {Router} router\n\t   * @param {Route} to\n\t   * @param {Route} from\n\t   */\n\t\n\t  var RouteTransition = (function () {\n\t    function RouteTransition(router, to, from) {\n\t      babelHelpers.classCallCheck(this, RouteTransition);\n\t\n\t      this.router = router;\n\t      this.to = to;\n\t      this.from = from;\n\t      this.next = null;\n\t      this.aborted = false;\n\t      this.done = false;\n\t    }\n\t\n\t    /**\n\t     * Abort current transition and return to previous location.\n\t     */\n\t\n\t    RouteTransition.prototype.abort = function abort() {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        // if the root path throws an error during validation\n\t        // on initial load, it gets caught in an infinite loop.\n\t        var abortingOnLoad = !this.from.path && this.to.path === '/';\n\t        if (!abortingOnLoad) {\n\t          this.router.replace(this.from.path || '/');\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Abort current transition and redirect to a new location.\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    RouteTransition.prototype.redirect = function redirect(path) {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        if (typeof path === 'string') {\n\t          path = mapParams(path, this.to.params, this.to.query);\n\t        } else {\n\t          path.params = path.params || this.to.params;\n\t          path.query = path.query || this.to.query;\n\t        }\n\t        this.router.replace(path);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * A router view transition's pipeline can be described as\n\t     * follows, assuming we are transitioning from an existing\n\t     * <router-view> chain [Component A, Component B] to a new\n\t     * chain [Component A, Component C]:\n\t     *\n\t     *  A    A\n\t     *  | => |\n\t     *  B    C\n\t     *\n\t     * 1. Reusablity phase:\n\t     *   -> canReuse(A, A)\n\t     *   -> canReuse(B, C)\n\t     *   -> determine new queues:\n\t     *      - deactivation: [B]\n\t     *      - activation: [C]\n\t     *\n\t     * 2. Validation phase:\n\t     *   -> canDeactivate(B)\n\t     *   -> canActivate(C)\n\t     *\n\t     * 3. Activation phase:\n\t     *   -> deactivate(B)\n\t     *   -> activate(C)\n\t     *\n\t     * Each of these steps can be asynchronous, and any\n\t     * step can potentially abort the transition.\n\t     *\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.start = function start(cb) {\n\t      var transition = this;\n\t\n\t      // determine the queue of views to deactivate\n\t      var deactivateQueue = [];\n\t      var view = this.router._rootView;\n\t      while (view) {\n\t        deactivateQueue.unshift(view);\n\t        view = view.childView;\n\t      }\n\t      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\t\n\t      // determine the queue of route handlers to activate\n\t      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n\t        return match.handler;\n\t      });\n\t\n\t      // 1. Reusability phase\n\t      var i = undefined,\n\t          reuseQueue = undefined;\n\t      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n\t        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n\t          break;\n\t        }\n\t      }\n\t      if (i > 0) {\n\t        reuseQueue = reverseDeactivateQueue.slice(0, i);\n\t        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n\t        activateQueue = activateQueue.slice(i);\n\t      }\n\t\n\t      // 2. Validation phase\n\t      transition.runQueue(deactivateQueue, canDeactivate, function () {\n\t        transition.runQueue(activateQueue, canActivate, function () {\n\t          transition.runQueue(deactivateQueue, deactivate, function () {\n\t            // 3. Activation phase\n\t\n\t            // Update router current route\n\t            transition.router._onTransitionValidated(transition);\n\t\n\t            // trigger reuse for all reused views\n\t            reuseQueue && reuseQueue.forEach(function (view) {\n\t              return reuse(view, transition);\n\t            });\n\t\n\t            // the root of the chain that needs to be replaced\n\t            // is the top-most non-reusable view.\n\t            if (deactivateQueue.length) {\n\t              var _view = deactivateQueue[deactivateQueue.length - 1];\n\t              var depth = reuseQueue ? reuseQueue.length : 0;\n\t              activate(_view, transition, depth, cb);\n\t            } else {\n\t              cb();\n\t            }\n\t          });\n\t        });\n\t      });\n\t    };\n\t\n\t    /**\n\t     * Asynchronously and sequentially apply a function to a\n\t     * queue.\n\t     *\n\t     * @param {Array} queue\n\t     * @param {Function} fn\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n\t      var transition = this;\n\t      step(0);\n\t      function step(index) {\n\t        if (index >= queue.length) {\n\t          cb();\n\t        } else {\n\t          fn(queue[index], transition, function () {\n\t            step(index + 1);\n\t          });\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a user provided route transition hook and handle\n\t     * the response (e.g. if the user returns a promise).\n\t     *\n\t     * If the user neither expects an argument nor returns a\n\t     * promise, the hook is assumed to be synchronous.\n\t     *\n\t     * @param {Function} hook\n\t     * @param {*} [context]\n\t     * @param {Function} [cb]\n\t     * @param {Object} [options]\n\t     *                 - {Boolean} expectBoolean\n\t     *                 - {Boolean} postActive\n\t     *                 - {Function} processData\n\t     *                 - {Function} cleanup\n\t     */\n\t\n\t    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n\t      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\t\n\t      var _ref$expectBoolean = _ref.expectBoolean;\n\t      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n\t      var _ref$postActivate = _ref.postActivate;\n\t      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n\t      var processData = _ref.processData;\n\t      var cleanup = _ref.cleanup;\n\t\n\t      var transition = this;\n\t      var nextCalled = false;\n\t\n\t      // abort the transition\n\t      var abort = function abort() {\n\t        cleanup && cleanup();\n\t        transition.abort();\n\t      };\n\t\n\t      // handle errors\n\t      var onError = function onError(err) {\n\t        postActivate ? next() : abort();\n\t        if (err && !transition.router._suppress) {\n\t          warn$1('Uncaught error during transition: ');\n\t          throw err instanceof Error ? err : new Error(err);\n\t        }\n\t      };\n\t\n\t      // since promise swallows errors, we have to\n\t      // throw it in the next tick...\n\t      var onPromiseError = function onPromiseError(err) {\n\t        try {\n\t          onError(err);\n\t        } catch (e) {\n\t          setTimeout(function () {\n\t            throw e;\n\t          }, 0);\n\t        }\n\t      };\n\t\n\t      // advance the transition to the next step\n\t      var next = function next() {\n\t        if (nextCalled) {\n\t          warn$1('transition.next() should be called only once.');\n\t          return;\n\t        }\n\t        nextCalled = true;\n\t        if (transition.aborted) {\n\t          cleanup && cleanup();\n\t          return;\n\t        }\n\t        cb && cb();\n\t      };\n\t\n\t      var nextWithBoolean = function nextWithBoolean(res) {\n\t        if (typeof res === 'boolean') {\n\t          res ? next() : abort();\n\t        } else if (isPromise(res)) {\n\t          res.then(function (ok) {\n\t            ok ? next() : abort();\n\t          }, onPromiseError);\n\t        } else if (!hook.length) {\n\t          next();\n\t        }\n\t      };\n\t\n\t      var nextWithData = function nextWithData(data) {\n\t        var res = undefined;\n\t        try {\n\t          res = processData(data);\n\t        } catch (err) {\n\t          return onError(err);\n\t        }\n\t        if (isPromise(res)) {\n\t          res.then(next, onPromiseError);\n\t        } else {\n\t          next();\n\t        }\n\t      };\n\t\n\t      // expose a clone of the transition object, so that each\n\t      // hook gets a clean copy and prevent the user from\n\t      // messing with the internals.\n\t      var exposed = {\n\t        to: transition.to,\n\t        from: transition.from,\n\t        abort: abort,\n\t        next: processData ? nextWithData : next,\n\t        redirect: function redirect() {\n\t          transition.redirect.apply(transition, arguments);\n\t        }\n\t      };\n\t\n\t      // actually call the hook\n\t      var res = undefined;\n\t      try {\n\t        res = hook.call(context, exposed);\n\t      } catch (err) {\n\t        return onError(err);\n\t      }\n\t\n\t      if (expectBoolean) {\n\t        // boolean hooks\n\t        nextWithBoolean(res);\n\t      } else if (isPromise(res)) {\n\t        // promise\n\t        if (processData) {\n\t          res.then(nextWithData, onPromiseError);\n\t        } else {\n\t          res.then(next, onPromiseError);\n\t        }\n\t      } else if (processData && isPlainOjbect(res)) {\n\t        // data promise sugar\n\t        nextWithData(res);\n\t      } else if (!hook.length) {\n\t        next();\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a single hook or an array of async hooks in series.\n\t     *\n\t     * @param {Array} hooks\n\t     * @param {*} context\n\t     * @param {Function} cb\n\t     * @param {Object} [options]\n\t     */\n\t\n\t    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n\t      var _this = this;\n\t\n\t      if (Array.isArray(hooks)) {\n\t        this.runQueue(hooks, function (hook, _, next) {\n\t          if (!_this.aborted) {\n\t            _this.callHook(hook, context, next, options);\n\t          }\n\t        }, cb);\n\t      } else {\n\t        this.callHook(hooks, context, cb, options);\n\t      }\n\t    };\n\t\n\t    return RouteTransition;\n\t  })();\n\t\n\t  function isPlainOjbect(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  function toArray(val) {\n\t    return val ? Array.prototype.slice.call(val) : [];\n\t  }\n\t\n\t  var internalKeysRE = /^(component|subRoutes|fullPath)$/;\n\t\n\t  /**\n\t   * Route Context Object\n\t   *\n\t   * @param {String} path\n\t   * @param {Router} router\n\t   */\n\t\n\t  var Route = function Route(path, router) {\n\t    var _this = this;\n\t\n\t    babelHelpers.classCallCheck(this, Route);\n\t\n\t    var matched = router._recognizer.recognize(path);\n\t    if (matched) {\n\t      // copy all custom fields from route configs\n\t      [].forEach.call(matched, function (match) {\n\t        for (var key in match.handler) {\n\t          if (!internalKeysRE.test(key)) {\n\t            _this[key] = match.handler[key];\n\t          }\n\t        }\n\t      });\n\t      // set query and params\n\t      this.query = matched.queryParams;\n\t      this.params = [].reduce.call(matched, function (prev, cur) {\n\t        if (cur.params) {\n\t          for (var key in cur.params) {\n\t            prev[key] = cur.params[key];\n\t          }\n\t        }\n\t        return prev;\n\t      }, {});\n\t    }\n\t    // expose path and router\n\t    this.path = path;\n\t    // for internal use\n\t    this.matched = matched || router._notFoundHandler;\n\t    // internal reference to router\n\t    Object.defineProperty(this, 'router', {\n\t      enumerable: false,\n\t      value: router\n\t    });\n\t    // Important: freeze self to prevent observation\n\t    Object.freeze(this);\n\t  };\n\t\n\t  function applyOverride (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var extend = _Vue$util.extend;\n\t    var isArray = _Vue$util.isArray;\n\t    var defineReactive = _Vue$util.defineReactive;\n\t\n\t    // override Vue's init and destroy process to keep track of router instances\n\t    var init = Vue.prototype._init;\n\t    Vue.prototype._init = function (options) {\n\t      options = options || {};\n\t      var root = options._parent || options.parent || this;\n\t      var router = root.$router;\n\t      var route = root.$route;\n\t      if (router) {\n\t        // expose router\n\t        this.$router = router;\n\t        router._children.push(this);\n\t        /* istanbul ignore if */\n\t        if (this._defineMeta) {\n\t          // 0.12\n\t          this._defineMeta('$route', route);\n\t        } else {\n\t          // 1.0\n\t          defineReactive(this, '$route', route);\n\t        }\n\t      }\n\t      init.call(this, options);\n\t    };\n\t\n\t    var destroy = Vue.prototype._destroy;\n\t    Vue.prototype._destroy = function () {\n\t      if (!this._isBeingDestroyed && this.$router) {\n\t        this.$router._children.$remove(this);\n\t      }\n\t      destroy.apply(this, arguments);\n\t    };\n\t\n\t    // 1.0 only: enable route mixins\n\t    var strats = Vue.config.optionMergeStrategies;\n\t    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\t\n\t    if (strats) {\n\t      strats.route = function (parentVal, childVal) {\n\t        if (!childVal) return parentVal;\n\t        if (!parentVal) return childVal;\n\t        var ret = {};\n\t        extend(ret, parentVal);\n\t        for (var key in childVal) {\n\t          var a = ret[key];\n\t          var b = childVal[key];\n\t          // for data, activate and deactivate, we need to merge them into\n\t          // arrays similar to lifecycle hooks.\n\t          if (a && hooksToMergeRE.test(key)) {\n\t            ret[key] = (isArray(a) ? a : [a]).concat(b);\n\t          } else {\n\t            ret[key] = b;\n\t          }\n\t        }\n\t        return ret;\n\t      };\n\t    }\n\t  }\n\t\n\t  function View (Vue) {\n\t\n\t    var _ = Vue.util;\n\t    var componentDef =\n\t    // 0.12\n\t    Vue.directive('_component') ||\n\t    // 1.0\n\t    Vue.internalDirectives.component;\n\t    // <router-view> extends the internal component directive\n\t    var viewDef = _.extend({}, componentDef);\n\t\n\t    // with some overrides\n\t    _.extend(viewDef, {\n\t\n\t      _isRouterView: true,\n\t\n\t      bind: function bind() {\n\t        var route = this.vm.$route;\n\t        /* istanbul ignore if */\n\t        if (!route) {\n\t          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');\n\t          return;\n\t        }\n\t        // force dynamic directive so v-component doesn't\n\t        // attempt to build right now\n\t        this._isDynamicLiteral = true;\n\t        // finally, init by delegating to v-component\n\t        componentDef.bind.call(this);\n\t\n\t        // locate the parent view\n\t        var parentView = undefined;\n\t        var parent = this.vm;\n\t        while (parent) {\n\t          if (parent._routerView) {\n\t            parentView = parent._routerView;\n\t            break;\n\t          }\n\t          parent = parent.$parent;\n\t        }\n\t        if (parentView) {\n\t          // register self as a child of the parent view,\n\t          // instead of activating now. This is so that the\n\t          // child's activate hook is called after the\n\t          // parent's has resolved.\n\t          this.parentView = parentView;\n\t          parentView.childView = this;\n\t        } else {\n\t          // this is the root view!\n\t          var router = route.router;\n\t          router._rootView = this;\n\t        }\n\t\n\t        // handle late-rendered view\n\t        // two possibilities:\n\t        // 1. root view rendered after transition has been\n\t        //    validated;\n\t        // 2. child view rendered after parent view has been\n\t        //    activated.\n\t        var transition = route.router._currentTransition;\n\t        if (!parentView && transition.done || parentView && parentView.activated) {\n\t          var depth = parentView ? parentView.depth + 1 : 0;\n\t          activate(this, transition, depth);\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        if (this.parentView) {\n\t          this.parentView.childView = null;\n\t        }\n\t        componentDef.unbind.call(this);\n\t      }\n\t    });\n\t\n\t    Vue.elementDirective('router-view', viewDef);\n\t  }\n\t\n\t  var trailingSlashRE = /\\/$/;\n\t  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\t  var queryStringRE = /\\?.*$/;\n\t\n\t  // install v-link, which provides navigation support for\n\t  // HTML5 history mode\n\t  function Link (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var _bind = _Vue$util.bind;\n\t    var isObject = _Vue$util.isObject;\n\t    var addClass = _Vue$util.addClass;\n\t    var removeClass = _Vue$util.removeClass;\n\t\n\t    var onPriority = Vue.directive('on').priority;\n\t    var LINK_UPDATE = '__vue-router-link-update__';\n\t\n\t    var activeId = 0;\n\t\n\t    Vue.directive('link-active', {\n\t      priority: 9999,\n\t      bind: function bind() {\n\t        var _this = this;\n\t\n\t        var id = String(activeId++);\n\t        // collect v-links contained within this element.\n\t        // we need do this here before the parent-child relationship\n\t        // gets messed up by terminal directives (if, for, components)\n\t        var childLinks = this.el.querySelectorAll('[v-link]');\n\t        for (var i = 0, l = childLinks.length; i < l; i++) {\n\t          var link = childLinks[i];\n\t          var existingId = link.getAttribute(LINK_UPDATE);\n\t          var value = existingId ? existingId + ',' + id : id;\n\t          // leave a mark on the link element which can be persisted\n\t          // through fragment clones.\n\t          link.setAttribute(LINK_UPDATE, value);\n\t        }\n\t        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {\n\t          if (link.activeIds.indexOf(id) > -1) {\n\t            link.updateClasses(path, _this.el);\n\t          }\n\t        });\n\t      },\n\t      unbind: function unbind() {\n\t        this.vm.$off(LINK_UPDATE, this.cb);\n\t      }\n\t    });\n\t\n\t    Vue.directive('link', {\n\t      priority: onPriority - 2,\n\t\n\t      bind: function bind() {\n\t        var vm = this.vm;\n\t        /* istanbul ignore if */\n\t        if (!vm.$route) {\n\t          warn$1('v-link can only be used inside a router-enabled app.');\n\t          return;\n\t        }\n\t        this.router = vm.$route.router;\n\t        // update things when the route changes\n\t        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n\t        // check v-link-active ids\n\t        var activeIds = this.el.getAttribute(LINK_UPDATE);\n\t        if (activeIds) {\n\t          this.el.removeAttribute(LINK_UPDATE);\n\t          this.activeIds = activeIds.split(',');\n\t        }\n\t        // no need to handle click if link expects to be opened\n\t        // in a new window/tab.\n\t        /* istanbul ignore if */\n\t        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n\t          return;\n\t        }\n\t        // handle click\n\t        this.handler = _bind(this.onClick, this);\n\t        this.el.addEventListener('click', this.handler);\n\t      },\n\t\n\t      update: function update(target) {\n\t        this.target = target;\n\t        if (isObject(target)) {\n\t          this.append = target.append;\n\t          this.exact = target.exact;\n\t          this.prevActiveClass = this.activeClass;\n\t          this.activeClass = target.activeClass;\n\t        }\n\t        this.onRouteUpdate(this.vm.$route);\n\t      },\n\t\n\t      onClick: function onClick(e) {\n\t        // don't redirect with control keys\n\t        /* istanbul ignore if */\n\t        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n\t        // don't redirect when preventDefault called\n\t        /* istanbul ignore if */\n\t        if (e.defaultPrevented) return;\n\t        // don't redirect on right click\n\t        /* istanbul ignore if */\n\t        if (e.button !== 0) return;\n\t\n\t        var target = this.target;\n\t        if (target) {\n\t          // v-link with expression, just go\n\t          e.preventDefault();\n\t          this.router.go(target);\n\t        } else {\n\t          // no expression, delegate for an <a> inside\n\t          var el = e.target;\n\t          while (el.tagName !== 'A' && el !== this.el) {\n\t            el = el.parentNode;\n\t          }\n\t          if (el.tagName === 'A' && sameOrigin(el)) {\n\t            e.preventDefault();\n\t            var path = el.pathname;\n\t            if (this.router.history.root) {\n\t              path = path.replace(this.router.history.rootRE, '');\n\t            }\n\t            this.router.go({\n\t              path: path,\n\t              replace: target && target.replace,\n\t              append: target && target.append\n\t            });\n\t          }\n\t        }\n\t      },\n\t\n\t      onRouteUpdate: function onRouteUpdate(route) {\n\t        // router.stringifyPath is dependent on current route\n\t        // and needs to be called again whenver route changes.\n\t        var newPath = this.router.stringifyPath(this.target);\n\t        if (this.path !== newPath) {\n\t          this.path = newPath;\n\t          this.updateActiveMatch();\n\t          this.updateHref();\n\t        }\n\t        if (this.activeIds) {\n\t          this.vm.$emit(LINK_UPDATE, this, route.path);\n\t        } else {\n\t          this.updateClasses(route.path, this.el);\n\t        }\n\t      },\n\t\n\t      updateActiveMatch: function updateActiveMatch() {\n\t        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n\t      },\n\t\n\t      updateHref: function updateHref() {\n\t        if (this.el.tagName !== 'A') {\n\t          return;\n\t        }\n\t        var path = this.path;\n\t        var router = this.router;\n\t        var isAbsolute = path.charAt(0) === '/';\n\t        // do not format non-hash relative paths\n\t        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n\t        if (href) {\n\t          this.el.href = href;\n\t        } else {\n\t          this.el.removeAttribute('href');\n\t        }\n\t      },\n\t\n\t      updateClasses: function updateClasses(path, el) {\n\t        var activeClass = this.activeClass || this.router._linkActiveClass;\n\t        // clear old class\n\t        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {\n\t          toggleClasses(el, this.prevActiveClass, removeClass);\n\t        }\n\t        // remove query string before matching\n\t        var dest = this.path.replace(queryStringRE, '');\n\t        path = path.replace(queryStringRE, '');\n\t        // add new class\n\t        if (this.exact) {\n\t          if (dest === path ||\n\t          // also allow additional trailing slash\n\t          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n\t            toggleClasses(el, activeClass, addClass);\n\t          } else {\n\t            toggleClasses(el, activeClass, removeClass);\n\t          }\n\t        } else {\n\t          if (this.activeRE && this.activeRE.test(path)) {\n\t            toggleClasses(el, activeClass, addClass);\n\t          } else {\n\t            toggleClasses(el, activeClass, removeClass);\n\t          }\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        this.el.removeEventListener('click', this.handler);\n\t        this.unwatch && this.unwatch();\n\t      }\n\t    });\n\t\n\t    function sameOrigin(link) {\n\t      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n\t    }\n\t\n\t    // this function is copied from v-bind:class implementation until\n\t    // we properly expose it...\n\t    function toggleClasses(el, key, fn) {\n\t      key = key.trim();\n\t      if (key.indexOf(' ') === -1) {\n\t        fn(el, key);\n\t        return;\n\t      }\n\t      var keys = key.split(/\\s+/);\n\t      for (var i = 0, l = keys.length; i < l; i++) {\n\t        fn(el, keys[i]);\n\t      }\n\t    }\n\t  }\n\t\n\t  var historyBackends = {\n\t    abstract: AbstractHistory,\n\t    hash: HashHistory,\n\t    html5: HTML5History\n\t  };\n\t\n\t  // late bind during install\n\t  var Vue = undefined;\n\t\n\t  /**\n\t   * Router constructor\n\t   *\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  var Router = (function () {\n\t    function Router() {\n\t      var _this = this;\n\t\n\t      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var _ref$hashbang = _ref.hashbang;\n\t      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n\t      var _ref$abstract = _ref.abstract;\n\t      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n\t      var _ref$history = _ref.history;\n\t      var history = _ref$history === undefined ? false : _ref$history;\n\t      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n\t      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n\t      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n\t      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n\t      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n\t      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n\t      var _ref$root = _ref.root;\n\t      var root = _ref$root === undefined ? null : _ref$root;\n\t      var _ref$linkActiveClass = _ref.linkActiveClass;\n\t      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n\t      babelHelpers.classCallCheck(this, Router);\n\t\n\t      /* istanbul ignore if */\n\t      if (!Router.installed) {\n\t        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n\t      }\n\t\n\t      // Vue instances\n\t      this.app = null;\n\t      this._children = [];\n\t\n\t      // route recognizer\n\t      this._recognizer = new RouteRecognizer();\n\t      this._guardRecognizer = new RouteRecognizer();\n\t\n\t      // state\n\t      this._started = false;\n\t      this._startCb = null;\n\t      this._currentRoute = {};\n\t      this._currentTransition = null;\n\t      this._previousTransition = null;\n\t      this._notFoundHandler = null;\n\t      this._notFoundRedirect = null;\n\t      this._beforeEachHooks = [];\n\t      this._afterEachHooks = [];\n\t\n\t      // trigger transition on initial render?\n\t      this._rendered = false;\n\t      this._transitionOnLoad = transitionOnLoad;\n\t\n\t      // history mode\n\t      this._root = root;\n\t      this._abstract = abstract;\n\t      this._hashbang = hashbang;\n\t\n\t      // check if HTML5 history is available\n\t      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n\t      this._history = history && hasPushState;\n\t      this._historyFallback = history && !hasPushState;\n\t\n\t      // create history object\n\t      var inBrowser = Vue.util.inBrowser;\n\t      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\t\n\t      var History = historyBackends[this.mode];\n\t      this.history = new History({\n\t        root: root,\n\t        hashbang: this._hashbang,\n\t        onChange: function onChange(path, state, anchor) {\n\t          _this._match(path, state, anchor);\n\t        }\n\t      });\n\t\n\t      // other options\n\t      this._saveScrollPosition = saveScrollPosition;\n\t      this._linkActiveClass = linkActiveClass;\n\t      this._suppress = suppressTransitionError;\n\t    }\n\t\n\t    /**\n\t     * Allow directly passing components to a route\n\t     * definition.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} handler\n\t     */\n\t\n\t    // API ===================================================\n\t\n\t    /**\n\t    * Register a map of top-level paths.\n\t    *\n\t    * @param {Object} map\n\t    */\n\t\n\t    Router.prototype.map = function map(_map) {\n\t      for (var route in _map) {\n\t        this.on(route, _map[route]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Register a single root-level path\n\t     *\n\t     * @param {String} rootPath\n\t     * @param {Object} handler\n\t     *                 - {String} component\n\t     *                 - {Object} [subRoutes]\n\t     *                 - {Boolean} [forceRefresh]\n\t     *                 - {Function} [before]\n\t     *                 - {Function} [after]\n\t     */\n\t\n\t    Router.prototype.on = function on(rootPath, handler) {\n\t      if (rootPath === '*') {\n\t        this._notFound(handler);\n\t      } else {\n\t        this._addRoute(rootPath, handler, []);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set redirects.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.redirect = function redirect(map) {\n\t      for (var path in map) {\n\t        this._addRedirect(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set aliases.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.alias = function alias(map) {\n\t      for (var path in map) {\n\t        this._addAlias(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global before hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.beforeEach = function beforeEach(fn) {\n\t      this._beforeEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global after hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.afterEach = function afterEach(fn) {\n\t      this._afterEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Navigate to a given path.\n\t     * The path can be an object describing a named path in\n\t     * the format of { name: '...', params: {}, query: {}}\n\t     * The path is assumed to be already decoded, and will\n\t     * be resolved against root (if provided)\n\t     *\n\t     * @param {String|Object} path\n\t     * @param {Boolean} [replace]\n\t     */\n\t\n\t    Router.prototype.go = function go(path) {\n\t      var replace = false;\n\t      var append = false;\n\t      if (Vue.util.isObject(path)) {\n\t        replace = path.replace;\n\t        append = path.append;\n\t      }\n\t      path = this.stringifyPath(path);\n\t      if (path) {\n\t        this.history.go(path, replace, append);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Short hand for replacing current path\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    Router.prototype.replace = function replace(path) {\n\t      if (typeof path === 'string') {\n\t        path = { path: path };\n\t      }\n\t      path.replace = true;\n\t      this.go(path);\n\t    };\n\t\n\t    /**\n\t     * Start the router.\n\t     *\n\t     * @param {VueConstructor} App\n\t     * @param {String|Element} container\n\t     * @param {Function} [cb]\n\t     */\n\t\n\t    Router.prototype.start = function start(App, container, cb) {\n\t      /* istanbul ignore if */\n\t      if (this._started) {\n\t        warn$1('already started.');\n\t        return;\n\t      }\n\t      this._started = true;\n\t      this._startCb = cb;\n\t      if (!this.app) {\n\t        /* istanbul ignore if */\n\t        if (!App || !container) {\n\t          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n\t        }\n\t        /* istanbul ignore if */\n\t        if (App instanceof Vue) {\n\t          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n\t        }\n\t        this._appContainer = container;\n\t        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n\t        // give it a name for better debugging\n\t        Ctor.options.name = Ctor.options.name || 'RouterApp';\n\t      }\n\t\n\t      // handle history fallback in browsers that do not\n\t      // support HTML5 history API\n\t      if (this._historyFallback) {\n\t        var _location = window.location;\n\t        var _history = new HTML5History({ root: this._root });\n\t        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n\t        if (path && path !== '/') {\n\t          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n\t          return;\n\t        }\n\t      }\n\t\n\t      this.history.start();\n\t    };\n\t\n\t    /**\n\t     * Stop listening to route changes.\n\t     */\n\t\n\t    Router.prototype.stop = function stop() {\n\t      this.history.stop();\n\t      this._started = false;\n\t    };\n\t\n\t    /**\n\t     * Normalize named route object / string paths into\n\t     * a string.\n\t     *\n\t     * @param {Object|String|Number} path\n\t     * @return {String}\n\t     */\n\t\n\t    Router.prototype.stringifyPath = function stringifyPath(path) {\n\t      var generatedPath = '';\n\t      if (path && typeof path === 'object') {\n\t        if (path.name) {\n\t          var extend = Vue.util.extend;\n\t          var currentParams = this._currentTransition && this._currentTransition.to.params;\n\t          var targetParams = path.params || {};\n\t          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n\t          generatedPath = encodeURI(this._recognizer.generate(path.name, params));\n\t        } else if (path.path) {\n\t          generatedPath = encodeURI(path.path);\n\t        }\n\t        if (path.query) {\n\t          // note: the generated query string is pre-URL-encoded by the recognizer\n\t          var query = this._recognizer.generateQueryString(path.query);\n\t          if (generatedPath.indexOf('?') > -1) {\n\t            generatedPath += '&' + query.slice(1);\n\t          } else {\n\t            generatedPath += query;\n\t          }\n\t        }\n\t      } else {\n\t        generatedPath = encodeURI(path ? path + '' : '');\n\t      }\n\t      return generatedPath;\n\t    };\n\t\n\t    // Internal methods ======================================\n\t\n\t    /**\n\t    * Add a route containing a list of segments to the internal\n\t    * route recognizer. Will be called recursively to add all\n\t    * possible sub-routes.\n\t    *\n\t    * @param {String} path\n\t    * @param {Object} handler\n\t    * @param {Array} segments\n\t    */\n\t\n\t    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n\t      guardComponent(path, handler);\n\t      handler.path = path;\n\t      handler.fullPath = (segments.reduce(function (path, segment) {\n\t        return path + segment.path;\n\t      }, '') + path).replace('//', '/');\n\t      segments.push({\n\t        path: path,\n\t        handler: handler\n\t      });\n\t      this._recognizer.add(segments, {\n\t        as: handler.name\n\t      });\n\t      // add sub routes\n\t      if (handler.subRoutes) {\n\t        for (var subPath in handler.subRoutes) {\n\t          // recursively walk all sub routes\n\t          this._addRoute(subPath, handler.subRoutes[subPath],\n\t          // pass a copy in recursion to avoid mutating\n\t          // across branches\n\t          segments.slice());\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Set the notFound route handler.\n\t     *\n\t     * @param {Object} handler\n\t     */\n\t\n\t    Router.prototype._notFound = function _notFound(handler) {\n\t      guardComponent('*', handler);\n\t      this._notFoundHandler = [{ handler: handler }];\n\t    };\n\t\n\t    /**\n\t     * Add a redirect record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} redirectPath\n\t     */\n\t\n\t    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n\t      if (path === '*') {\n\t        this._notFoundRedirect = redirectPath;\n\t      } else {\n\t        this._addGuard(path, redirectPath, this.replace);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Add an alias record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} aliasPath\n\t     */\n\t\n\t    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n\t      this._addGuard(path, aliasPath, this._match);\n\t    };\n\t\n\t    /**\n\t     * Add a path guard.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} mappedPath\n\t     * @param {Function} handler\n\t     */\n\t\n\t    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n\t      var _this2 = this;\n\t\n\t      this._guardRecognizer.add([{\n\t        path: path,\n\t        handler: function handler(match, query) {\n\t          var realPath = mapParams(mappedPath, match.params, query);\n\t          _handler.call(_this2, realPath);\n\t        }\n\t      }]);\n\t    };\n\t\n\t    /**\n\t     * Check if a path matches any redirect records.\n\t     *\n\t     * @param {String} path\n\t     * @return {Boolean} - if true, will skip normal match.\n\t     */\n\t\n\t    Router.prototype._checkGuard = function _checkGuard(path) {\n\t      var matched = this._guardRecognizer.recognize(path, true);\n\t      if (matched) {\n\t        matched[0].handler(matched[0], matched.queryParams);\n\t        return true;\n\t      } else if (this._notFoundRedirect) {\n\t        matched = this._recognizer.recognize(path);\n\t        if (!matched) {\n\t          this.replace(this._notFoundRedirect);\n\t          return true;\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Match a URL path and set the route context on vm,\n\t     * triggering view updates.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._match = function _match(path, state, anchor) {\n\t      var _this3 = this;\n\t\n\t      if (this._checkGuard(path)) {\n\t        return;\n\t      }\n\t\n\t      var currentRoute = this._currentRoute;\n\t      var currentTransition = this._currentTransition;\n\t\n\t      if (currentTransition) {\n\t        if (currentTransition.to.path === path) {\n\t          // do nothing if we have an active transition going to the same path\n\t          return;\n\t        } else if (currentRoute.path === path) {\n\t          // We are going to the same path, but we also have an ongoing but\n\t          // not-yet-validated transition. Abort that transition and reset to\n\t          // prev transition.\n\t          currentTransition.aborted = true;\n\t          this._currentTransition = this._prevTransition;\n\t          return;\n\t        } else {\n\t          // going to a totally different path. abort ongoing transition.\n\t          currentTransition.aborted = true;\n\t        }\n\t      }\n\t\n\t      // construct new route and transition context\n\t      var route = new Route(path, this);\n\t      var transition = new RouteTransition(this, route, currentRoute);\n\t\n\t      // current transition is updated right now.\n\t      // however, current route will only be updated after the transition has\n\t      // been validated.\n\t      this._prevTransition = currentTransition;\n\t      this._currentTransition = transition;\n\t\n\t      if (!this.app) {\n\t        (function () {\n\t          // initial render\n\t          var router = _this3;\n\t          _this3.app = new _this3._appConstructor({\n\t            el: _this3._appContainer,\n\t            created: function created() {\n\t              this.$router = router;\n\t            },\n\t            _meta: {\n\t              $route: route\n\t            }\n\t          });\n\t        })();\n\t      }\n\t\n\t      // check global before hook\n\t      var beforeHooks = this._beforeEachHooks;\n\t      var startTransition = function startTransition() {\n\t        transition.start(function () {\n\t          _this3._postTransition(route, state, anchor);\n\t        });\n\t      };\n\t\n\t      if (beforeHooks.length) {\n\t        transition.runQueue(beforeHooks, function (hook, _, next) {\n\t          if (transition === _this3._currentTransition) {\n\t            transition.callHook(hook, null, next, {\n\t              expectBoolean: true\n\t            });\n\t          }\n\t        }, startTransition);\n\t      } else {\n\t        startTransition();\n\t      }\n\t\n\t      if (!this._rendered && this._startCb) {\n\t        this._startCb.call(null);\n\t      }\n\t\n\t      // HACK:\n\t      // set rendered to true after the transition start, so\n\t      // that components that are acitvated synchronously know\n\t      // whether it is the initial render.\n\t      this._rendered = true;\n\t    };\n\t\n\t    /**\n\t     * Set current to the new transition.\n\t     * This is called by the transition object when the\n\t     * validation of a route has succeeded.\n\t     *\n\t     * @param {Transition} transition\n\t     */\n\t\n\t    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n\t      // set current route\n\t      var route = this._currentRoute = transition.to;\n\t      // update route context for all children\n\t      if (this.app.$route !== route) {\n\t        this.app.$route = route;\n\t        this._children.forEach(function (child) {\n\t          child.$route = route;\n\t        });\n\t      }\n\t      // call global after hook\n\t      if (this._afterEachHooks.length) {\n\t        this._afterEachHooks.forEach(function (hook) {\n\t          return hook.call(null, {\n\t            to: transition.to,\n\t            from: transition.from\n\t          });\n\t        });\n\t      }\n\t      this._currentTransition.done = true;\n\t    };\n\t\n\t    /**\n\t     * Handle stuff after the transition.\n\t     *\n\t     * @param {Route} route\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n\t      // handle scroll positions\n\t      // saved scroll positions take priority\n\t      // then we check if the path has an anchor\n\t      var pos = state && state.pos;\n\t      if (pos && this._saveScrollPosition) {\n\t        Vue.nextTick(function () {\n\t          window.scrollTo(pos.x, pos.y);\n\t        });\n\t      } else if (anchor) {\n\t        Vue.nextTick(function () {\n\t          var el = document.getElementById(anchor.slice(1));\n\t          if (el) {\n\t            window.scrollTo(window.scrollX, el.offsetTop);\n\t          }\n\t        });\n\t      }\n\t    };\n\t\n\t    return Router;\n\t  })();\n\t\n\t  function guardComponent(path, handler) {\n\t    var comp = handler.component;\n\t    if (Vue.util.isPlainObject(comp)) {\n\t      comp = handler.component = Vue.extend(comp);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (typeof comp !== 'function') {\n\t      handler.component = null;\n\t      warn$1('invalid component for route \"' + path + '\".');\n\t    }\n\t  }\n\t\n\t  /* Installation */\n\t\n\t  Router.installed = false;\n\t\n\t  /**\n\t   * Installation interface.\n\t   * Install the necessary directives.\n\t   */\n\t\n\t  Router.install = function (externalVue) {\n\t    /* istanbul ignore if */\n\t    if (Router.installed) {\n\t      warn$1('already installed.');\n\t      return;\n\t    }\n\t    Vue = externalVue;\n\t    applyOverride(Vue);\n\t    View(Vue);\n\t    Link(Vue);\n\t    exports$1.Vue = Vue;\n\t    Router.installed = true;\n\t  };\n\t\n\t  // auto install\n\t  /* istanbul ignore if */\n\t  if (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(Router);\n\t  }\n\t\n\t  return Router;\n\t\n\t}));\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\t\n\t/* FileSaver.js\n\t * A saveAs() FileSaver implementation.\n\t * 1.1.20160328\n\t *\n\t * By Eli Grey, http://eligrey.com\n\t * License: MIT\n\t *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n\t */\n\t\n\t/*global self */\n\t/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\t\n\t/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\t\n\tvar saveAs = saveAs || function (view) {\n\t\t\"use strict\";\n\t\t// IE <10 is explicitly unsupported\n\t\n\t\tif (typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\t\treturn;\n\t\t}\n\t\tvar doc = view.document\n\t\t// only get URL when necessary in case Blob.js hasn't overridden it yet\n\t\t,\n\t\t    get_URL = function get_URL() {\n\t\t\treturn view.URL || view.webkitURL || view;\n\t\t},\n\t\t    save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\"),\n\t\t    can_use_save_link = \"download\" in save_link,\n\t\t    click = function click(node) {\n\t\t\tvar event = new MouseEvent(\"click\");\n\t\t\tnode.dispatchEvent(event);\n\t\t},\n\t\t    is_safari = /Version\\/[\\d\\.]+.*Safari/.test(navigator.userAgent),\n\t\t    webkit_req_fs = view.webkitRequestFileSystem,\n\t\t    req_fs = view.requestFileSystem || webkit_req_fs || view.mozRequestFileSystem,\n\t\t    throw_outside = function throw_outside(ex) {\n\t\t\t(view.setImmediate || view.setTimeout)(function () {\n\t\t\t\tthrow ex;\n\t\t\t}, 0);\n\t\t},\n\t\t    force_saveable_type = \"application/octet-stream\",\n\t\t    fs_min_size = 0\n\t\t// the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\n\t\t,\n\t\t    arbitrary_revoke_timeout = 1000 * 40 // in ms\n\t\t,\n\t\t    revoke = function revoke(file) {\n\t\t\tvar revoker = function revoker() {\n\t\t\t\tif (typeof file === \"string\") {\n\t\t\t\t\t// file is an object URL\n\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t} else {\n\t\t\t\t\t// file is a File\n\t\t\t\t\tfile.remove();\n\t\t\t\t}\n\t\t\t};\n\t\t\t/* // Take note W3C:\n\t  var\n\t    uri = typeof file === \"string\" ? file : file.toURL()\n\t  , revoker = function(evt) {\n\t  \t// idealy DownloadFinishedEvent.data would be the URL requested\n\t  \tif (evt.data === uri) {\n\t  \t\tif (typeof file === \"string\") { // file is an object URL\n\t  \t\t\tget_URL().revokeObjectURL(file);\n\t  \t\t} else { // file is a File\n\t  \t\t\tfile.remove();\n\t  \t\t}\n\t  \t}\n\t  }\n\t  ;\n\t  view.addEventListener(\"downloadfinished\", revoker);\n\t  */\n\t\t\tsetTimeout(revoker, arbitrary_revoke_timeout);\n\t\t},\n\t\t    dispatch = function dispatch(filesaver, event_types, event) {\n\t\t\tevent_types = [].concat(event_types);\n\t\t\tvar i = event_types.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t    auto_bom = function auto_bom(blob) {\n\t\t\t// prepend BOM for UTF-8 XML and text/* types (including HTML)\n\t\t\tif (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n\t\t\t\treturn new Blob([\"﻿\", blob], { type: blob.type });\n\t\t\t}\n\t\t\treturn blob;\n\t\t},\n\t\t    FileSaver = function FileSaver(blob, name, no_auto_bom) {\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\tvar filesaver = this,\n\t\t\t    type = blob.type,\n\t\t\t    blob_changed = false,\n\t\t\t    object_url,\n\t\t\t    target_view,\n\t\t\t    dispatch_all = function dispatch_all() {\n\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t\t}\n\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t,\n\t\t\t    fs_error = function fs_error() {\n\t\t\t\tif (target_view && is_safari && typeof FileReader !== \"undefined\") {\n\t\t\t\t\t// Safari doesn't allow downloading of blob urls\n\t\t\t\t\tvar reader = new FileReader();\n\t\t\t\t\treader.onloadend = function () {\n\t\t\t\t\t\tvar base64Data = reader.result;\n\t\t\t\t\t\ttarget_view.location.href = \"data:attachment/file\" + base64Data.slice(base64Data.search(/[,;]/));\n\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\tdispatch_all();\n\t\t\t\t\t};\n\t\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// don't create more object URLs than needed\n\t\t\t\tif (blob_changed || !object_url) {\n\t\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\t}\n\t\t\t\tif (target_view) {\n\t\t\t\t\ttarget_view.location.href = object_url;\n\t\t\t\t} else {\n\t\t\t\t\tvar new_tab = view.open(object_url, \"_blank\");\n\t\t\t\t\tif (new_tab === undefined && is_safari) {\n\t\t\t\t\t\t//Apple do not allow window.open, see http://bit.ly/1kZffRI\n\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\tdispatch_all();\n\t\t\t\trevoke(object_url);\n\t\t\t},\n\t\t\t    abortable = function abortable(func) {\n\t\t\t\treturn function () {\n\t\t\t\t\tif (filesaver.readyState !== filesaver.DONE) {\n\t\t\t\t\t\treturn func.apply(this, arguments);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\t\t\t    create_if_not_found = { create: true, exclusive: false },\n\t\t\t    slice;\n\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\tif (!name) {\n\t\t\t\tname = \"download\";\n\t\t\t}\n\t\t\tif (can_use_save_link) {\n\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tsave_link.href = object_url;\n\t\t\t\t\tsave_link.download = name;\n\t\t\t\t\tclick(save_link);\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Object and web filesystem URLs have a problem saving in Google Chrome when\n\t\t\t// viewed in a tab, so I force save with application/octet-stream\n\t\t\t// http://code.google.com/p/chromium/issues/detail?id=91158\n\t\t\t// Update: Google errantly closed 91158, I submitted it again:\n\t\t\t// https://code.google.com/p/chromium/issues/detail?id=389642\n\t\t\tif (view.chrome && type && type !== force_saveable_type) {\n\t\t\t\tslice = blob.slice || blob.webkitSlice;\n\t\t\t\tblob = slice.call(blob, 0, blob.size, force_saveable_type);\n\t\t\t\tblob_changed = true;\n\t\t\t}\n\t\t\t// Since I can't be sure that the guessed media type will trigger a download\n\t\t\t// in WebKit, I append .download to the filename.\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=65440\n\t\t\tif (webkit_req_fs && name !== \"download\") {\n\t\t\t\tname += \".download\";\n\t\t\t}\n\t\t\tif (type === force_saveable_type || webkit_req_fs) {\n\t\t\t\ttarget_view = view;\n\t\t\t}\n\t\t\tif (!req_fs) {\n\t\t\t\tfs_error();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfs_min_size += blob.size;\n\t\t\treq_fs(view.TEMPORARY, fs_min_size, abortable(function (fs) {\n\t\t\t\tfs.root.getDirectory(\"saved\", create_if_not_found, abortable(function (dir) {\n\t\t\t\t\tvar save = function save() {\n\t\t\t\t\t\tdir.getFile(name, create_if_not_found, abortable(function (file) {\n\t\t\t\t\t\t\tfile.createWriter(abortable(function (writer) {\n\t\t\t\t\t\t\t\twriter.onwriteend = function (event) {\n\t\t\t\t\t\t\t\t\ttarget_view.location.href = file.toURL();\n\t\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\t\t\tdispatch(filesaver, \"writeend\", event);\n\t\t\t\t\t\t\t\t\trevoke(file);\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\twriter.onerror = function () {\n\t\t\t\t\t\t\t\t\tvar error = writer.error;\n\t\t\t\t\t\t\t\t\tif (error.code !== error.ABORT_ERR) {\n\t\t\t\t\t\t\t\t\t\tfs_error();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\"writestart progress write abort\".split(\" \").forEach(function (event) {\n\t\t\t\t\t\t\t\t\twriter[\"on\" + event] = filesaver[\"on\" + event];\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\twriter.write(blob);\n\t\t\t\t\t\t\t\tfilesaver.abort = function () {\n\t\t\t\t\t\t\t\t\twriter.abort();\n\t\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.WRITING;\n\t\t\t\t\t\t\t}), fs_error);\n\t\t\t\t\t\t}), fs_error);\n\t\t\t\t\t};\n\t\t\t\t\tdir.getFile(name, { create: false }, abortable(function (file) {\n\t\t\t\t\t\t// delete file if it already exists\n\t\t\t\t\t\tfile.remove();\n\t\t\t\t\t\tsave();\n\t\t\t\t\t}), abortable(function (ex) {\n\t\t\t\t\t\tif (ex.code === ex.NOT_FOUND_ERR) {\n\t\t\t\t\t\t\tsave();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfs_error();\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t}), fs_error);\n\t\t\t}), fs_error);\n\t\t},\n\t\t    FS_proto = FileSaver.prototype,\n\t\t    saveAs = function saveAs(blob, name, no_auto_bom) {\n\t\t\treturn new FileSaver(blob, name, no_auto_bom);\n\t\t};\n\t\t// IE 10+ (native saveAs)\n\t\tif (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n\t\t\treturn function (blob, name, no_auto_bom) {\n\t\t\t\tif (!no_auto_bom) {\n\t\t\t\t\tblob = auto_bom(blob);\n\t\t\t\t}\n\t\t\t\treturn navigator.msSaveOrOpenBlob(blob, name || \"download\");\n\t\t\t};\n\t\t}\n\t\n\t\tFS_proto.abort = function () {\n\t\t\tvar filesaver = this;\n\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\tdispatch(filesaver, \"abort\");\n\t\t};\n\t\tFS_proto.readyState = FS_proto.INIT = 0;\n\t\tFS_proto.WRITING = 1;\n\t\tFS_proto.DONE = 2;\n\t\n\t\tFS_proto.error = FS_proto.onwritestart = FS_proto.onprogress = FS_proto.onwrite = FS_proto.onabort = FS_proto.onerror = FS_proto.onwriteend = null;\n\t\n\t\treturn saveAs;\n\t}(typeof self !== \"undefined\" && self || typeof window !== \"undefined\" && window || undefined.content);\n\t// `self` is undefined in Firefox for Android content script context\n\t// while `this` is nsIContentFrameMessageManager\n\t// with an attribute `content` that corresponds to the window\n\t\n\tif (typeof module !== \"undefined\" && module.exports) {\n\t\tmodule.exports.saveAs = saveAs;\n\t} else if (\"function\" !== \"undefined\" && __webpack_require__(41) !== null && __webpack_require__(42) !== null) {\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t\t\treturn saveAs;\n\t\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t}\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\texports.default = {\n\t\t'/': {\n\t\t\tcomponent: __webpack_require__(39)\n\t\t},\n\t\t'/add': {\n\t\t\tcomponent: __webpack_require__(38)\n\t\t}\n\t};\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _github = __webpack_require__(37);\n\t\n\tvar _github2 = _interopRequireDefault(_github);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t\tdata: function data() {\n\t\t\treturn {\n\t\t\t\tyear: new Date().getFullYear()\n\t\t\t};\n\t\t},\n\t\n\t\tcomponents: { github: _github2.default }\n\t};\n\t// </script>\n\n\t/* generated by vue-loader */\n\t// <style src=\"purecss/build/pure.css\"></style>\n\t// <style>\n\t// \tbody {\n\t// \t\tfont: 16px/1.7 \"lucida grande\",\"lucida sans unicode\",lucida,\"Helvetica Neue\",helvetica,\"Hiragino Sans GB\",\"Microsoft YaHei\",\"WenQuanYi Micro Hei\",sans-serif;\n\t// \t}\n\t// \t.container {\n\t// \t\tmax-width: 600px;\n\t// \t\tmargin: 0 auto;\n\t// \t\tpadding: 20px 10px;\n\t// \t}\n\t// \th1, h2, h3, h4, h5 {\n\t// \t\tmargin: 0;\n\t// \t}\n\t// \ta {\n\t// \t\tcolor: #333;\n\t// \t\ttext-decoration: none;\n\t// \t}\n\t// \t.footer {\n\t// \t\tpadding: 20px 0;\n\t// \t\tborder-top: 1px solid #e2e2e2;\n\t// \t\tmargin-top: 20px;\n\t// \t}\n\t// \t.error {\n\t// \t\tpadding: 5px 0;\n\t// \t\tcolor: #BF3F3F;\n\t// \t}\n\t// \thr {\n\t// \t\tborder: none;\n\t// \t\tbackground-color: #ccc;\n\t// \t\theight: 1px;\n\t// \t\tmargin: 10px 0;\n\t// \t}\n\t// \tcode {\n\t// \t\tbackground-color: #f0f0f0;\n\t// \t\tpadding: 5px;\n\t// \t\tborder-radius: 2px;\n\t// \t}\n\t// \t.about {\n\t// \t\tbackground-color: #f9f9f9;\n\t// \t\tpadding: 10px 20px;\n\t// \t\tmargin-top: 10px;\n\t// \t\tfont-size: 13px;\n\t// \t\t& .title {\n\t// \t\t\tfont-weight: 400;\n\t// \t\t\tfont-size: 22px;\n\t// \t\t\tmargin-bottom: 10px;\n\t// \t\t}\n\t// \t}\n\t// </style>\n\t// <style src=\"./css/button\"></style>\n\t//\n\t// <template>\n\t// \t<github></github>\n\t// \t<div class=\"container\">\n\t// \t\t<h2 class=\"site-name\">\n\t// \t\t\t<a v-link=\"{path: '/'}\">Tik Tok</a>\n\t// \t\t</h2>\n\t// \t\t<router-view></router-view>\n\t// \t\t<div class=\"footer\">\n\t// \t\t\t&copy; {{ year }} Tik Tok ❤️ By <a href=\"https://github.com/egoist\">EGOIST</a>.\n\t// \t\t</div>\n\t// \t</div>\n\t// </template>\n\t//\n\t//\n\t// <script>\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _extends2 = __webpack_require__(12);\n\t\n\tvar _extends3 = _interopRequireDefault(_extends2);\n\t\n\tvar _randomString = __webpack_require__(4);\n\t\n\tvar _randomString2 = _interopRequireDefault(_randomString);\n\t\n\tvar _store = __webpack_require__(2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// <style>\n\t// \t.pure-controls {\n\t// \t\tmargin-top: 10px;\n\t// \t}\n\t// </style>\n\t//\n\t// <template>\n\t// \t<div class=\"page-add\">\n\t// \t\t<form class=\"pure-form pure-form-stacked\" @submit.prevent=\"handleSubmit\">\n\t// \t\t\t<fieldset>\n\t// \t\t\t\t<label for=\"title\">Title</label>\n\t// \t\t\t\t<input id=\"title\" type=\"text\" class=\"pure-input-1\" v-model=\"item.title\">\n\t//\n\t// \t\t\t\t<label for=\"description\">Description</label>\n\t// \t\t\t\t<textarea id=\"description\" rows=\"3\" class=\"pure-input-1\" v-model=\"item.description\"></textarea>\n\t//\n\t// \t\t\t\t<div class=\"pure-g\">\n\t// \t\t\t\t\t<div class=\"pure-u-1-2\">\n\t// \t\t\t\t\t\t<label for=\"date\">Date</label>\n\t// \t\t\t\t\t\t<input id=\"date\" type=\"date\" class=\"pure-u-23-24\" v-model=\"item.date\">\n\t// \t\t\t\t\t</div>\n\t// \t\t\t\t\t<div class=\"pure-u-1-2\">\n\t// \t\t\t\t\t\t<label for=\"time\">Time</label>\n\t// \t\t\t\t\t\t<input id=\"time\" type=\"time\" class=\"pure-u-23-24\" v-model=\"item.time\">\n\t// \t\t\t\t\t</div>\n\t// \t\t\t\t</div>\n\t//\n\t// \t\t\t\t<div class=\"error\" v-if=\"error\">{{ error }}</div>\n\t//\n\t// \t\t\t\t<div class=\"pure-controls\">\n\t// \t\t\t\t\t<button type=\"submit\" class=\"pure-u-1-3 pure-button pure-button-primary button-large\">Add</button>\n\t// \t\t\t\t</div>\n\t//\n\t// \t\t\t</fieldset>\n\t// \t\t</form>\n\t// \t\t<div class=\"about\">\n\t// \t\t\t<h2 class=\"title\">What is a <code>Tik Tok</code>?</h2>\n\t// \t\t\t<div class=\"content\">\n\t// \t\t\t\tA <code>Tik Tok</code> is the time since you last did something.\n\t// \t\t\t\t<hr>\n\t// \t\t\t\t一个 <code>Tik Tok</code> 是距离你上次做一件事经历的时间。\n\t// \t\t\t</div>\n\t// \t\t</div>\n\t// \t</div>\n\t// </template>\n\t//\n\t// <script>\n\t\n\t\n\tfunction hasEmptyField(obj) {\n\t\tfor (var key in obj) {\n\t\t\tif (!obj[key]) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\n\texports.default = {\n\t\tdata: function data() {\n\t\t\treturn {\n\t\t\t\terror: '',\n\t\t\t\titem: {\n\t\t\t\t\ttitle: '',\n\t\t\t\t\tdescription: '',\n\t\t\t\t\tdate: '',\n\t\t\t\t\ttime: ''\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\n\t\tmethods: {\n\t\t\thandleSubmit: function handleSubmit() {\n\t\t\t\t// TODO: more advanced object validation\n\t\t\t\tif (hasEmptyField(this.item)) {\n\t\t\t\t\tthis.error = 'Form data is not complete!';\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar item = (0, _extends3.default)({}, this.item, {\n\t\t\t\t\tid: (0, _randomString2.default)(5)\n\t\t\t\t});\n\t\t\t\t(0, _store.addItem)(item);\n\t\t\t\tthis.$route.router.go('/');\n\t\t\t}\n\t\t}\n\t};\n\t// </script>\n\n\t/* generated by vue-loader */\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _stringify = __webpack_require__(3);\n\t\n\tvar _stringify2 = _interopRequireDefault(_stringify);\n\t\n\tvar _fileSaver = __webpack_require__(6);\n\t\n\tvar _store = __webpack_require__(2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// <style>\n\t// \t.page-home {\n\t// \t\tmargin-top: 10px;\n\t// \t}\n\t// \t.list {\n\t// \t\tmargin-top: 10px;\n\t// \t}\n\t// \t.item {\n\t// \t\tpadding: 10px 0;\n\t// \t\tdisplay: inline-block;\n\t// \t\twidth: 100%;\n\t// \t\tposition: relative;\n\t// \t\t&:not(:last-child) {\n\t// \t\t\tborder-bottom: 1px solid #e2e2e2;\n\t// \t\t}\n\t// \t\t&:hover {\n\t// \t\t\t& .item-meta {\n\t// \t\t\t\tvisibility: visible;\n\t// \t\t\t}\n\t// \t\t}\n\t// \t\t& .item-timer {\n\t// \t\t\tfloat: left;\n\t// \t\t\tbackground-color: #e2e2e2;\n\t// \t\t\tborder: 2px solid #ccc;\n\t// \t\t\tpadding: 10px;\n\t// \t\t\twidth: 120px;\n\t// \t\t\tfont-size: 22px;\n\t// \t\t}\n\t// \t\t& .item-main {\n\t// \t\t\tpadding-left: 160px;\n\t// \t\t}\n\t// \t\t& .item-title {\n\t// \t\t\tline-height: 1.4;\n\t// \t\t\tfont-weight: 400;\n\t// \t\t\tfont-size: 18px;\n\t// \t\t}\n\t// \t\t& .item-description {\n\t// \t\t\tfont-size: 13px;\n\t// \t\t\tcolor: #999;\n\t// \t\t}\n\t// \t\t& .item-meta {\n\t// \t\t\tfont-size: 13px;\n\t// \t\t\tcolor: #999;\n\t// \t\t\tvisibility: hidden;\n\t// \t\t\t& span {\n\t// \t\t\t\tcursor: pointer;\n\t// \t\t\t\t&:hover {\n\t// \t\t\t\t\ttext-decoration: underline;\n\t// \t\t\t\t}\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\t// \t@media screen and (min-width: 768px) {\n\t// \t\t.item {\n\t// \t\t\t& .item-timer {\n\t// \t\t\t\tposition: absolute;\n\t// \t\t\t\twidth: auto;\n\t// \t\t\t\tleft: 0;\n\t// \t\t\t\ttransform: translateX(-100%);\n\t// \t\t\t}\n\t// \t\t\t& .item-main {\n\t// \t\t\t\tpadding-left: 10px;\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\t// </style>\n\t//\n\t// <template>\n\t// \t<div class=\"page-home\">\n\t// \t\t<a class=\"pure-button pure-button-primary\" v-link=\"{path: '/add'}\">Add A Tok</a>\n\t// \t\t<button @click=\"exportAsJSON\" class=\"pure-button pure-button-success\">Export As JSON</button>\n\t// \t\t<div class=\"list\">\n\t// \t\t\t<div class=\"item\" v-for=\"item in list\">\n\t// \t\t\t\t<div class=\"item-timer\">\n\t// \t\t\t\t\t{{ item | timer }} days\n\t// \t\t\t\t</div>\n\t// \t\t\t\t<div class=\"item-main\">\n\t// \t\t\t\t\t<h2 class=\"item-title\">{{ item.title }}</h2>\n\t// \t\t\t\t\t<div class=\"item-description\">{{ item.description }}</div>\n\t// \t\t\t\t\t<div class=\"item-meta\">\n\t// \t\t\t\t\t\t<span class=\"item-remove\" @click=\"removeItem(item.id)\">Remove</span>\n\t// \t\t\t\t\t</div>\n\t// \t\t\t\t</div>\n\t// \t\t\t</div>\n\t// \t\t</div>\n\t// \t</div>\n\t// </template>\n\t//\n\t// <script>\n\texports.default = {\n\t\tdata: function data() {\n\t\t\treturn {\n\t\t\t\tlist: (0, _store.getAll)().reverse()\n\t\t\t};\n\t\t},\n\t\n\t\tmethods: {\n\t\t\tremoveItem: function removeItem(id) {\n\t\t\t\tthis.list = this.list.filter(function (item) {\n\t\t\t\t\treturn item.id !== id;\n\t\t\t\t});\n\t\t\t\t(0, _store.override)(this.list);\n\t\t\t},\n\t\t\texportAsJSON: function exportAsJSON() {\n\t\t\t\tvar content = new Blob([(0, _stringify2.default)(this.list, null, 2)], {\n\t\t\t\t\ttype: 'application/json;charset=utf-8'\n\t\t\t\t});\n\t\t\t\t(0, _fileSaver.saveAs)(content, 'tiktok-' + new Date() + '.json');\n\t\t\t}\n\t\t},\n\t\tfilters: {\n\t\t\ttimer: function timer(item) {\n\t\t\t\tvar time = new Date(item.date + ' ' + item.time).getTime();\n\t\t\t\tvar now = Date.now();\n\t\t\t\tvar duration = (now - time) / 1000 / 86400;\n\t\n\t\t\t\treturn Math.floor(duration);\n\t\t\t}\n\t\t}\n\t};\n\t// </script>\n\n\t/* generated by vue-loader */\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(14), __esModule: true };\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _Object$assign = __webpack_require__(11)[\"default\"];\n\t\n\texports[\"default\"] = _Object$assign || function (target) {\n\t  for (var i = 1; i < arguments.length; i++) {\n\t    var source = arguments[i];\n\t\n\t    for (var key in source) {\n\t      if (Object.prototype.hasOwnProperty.call(source, key)) {\n\t        target[key] = source[key];\n\t      }\n\t    }\n\t  }\n\t\n\t  return target;\n\t};\n\t\n\texports.__esModule = true;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar core = __webpack_require__(1);\n\tmodule.exports = function stringify(it){ // eslint-disable-line no-unused-vars\n\t  return (core.JSON && core.JSON.stringify || JSON.stringify).apply(JSON, arguments);\n\t};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(26);\n\tmodule.exports = __webpack_require__(1).Object.assign;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(it){\n\t  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n\t  return it;\n\t};\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\tvar toString = {}.toString;\n\t\n\tmodule.exports = function(it){\n\t  return toString.call(it).slice(8, -1);\n\t};\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// optional / simple context binding\n\tvar aFunction = __webpack_require__(15);\n\tmodule.exports = function(fn, that, length){\n\t  aFunction(fn);\n\t  if(that === undefined)return fn;\n\t  switch(length){\n\t    case 1: return function(a){\n\t      return fn.call(that, a);\n\t    };\n\t    case 2: return function(a, b){\n\t      return fn.call(that, a, b);\n\t    };\n\t    case 3: return function(a, b, c){\n\t      return fn.call(that, a, b, c);\n\t    };\n\t  }\n\t  return function(/* ...args */){\n\t    return fn.apply(that, arguments);\n\t  };\n\t};\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t// 7.2.1 RequireObjectCoercible(argument)\n\tmodule.exports = function(it){\n\t  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n\t  return it;\n\t};\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar global    = __webpack_require__(21)\n\t  , core      = __webpack_require__(1)\n\t  , ctx       = __webpack_require__(17)\n\t  , PROTOTYPE = 'prototype';\n\t\n\tvar $export = function(type, name, source){\n\t  var IS_FORCED = type & $export.F\n\t    , IS_GLOBAL = type & $export.G\n\t    , IS_STATIC = type & $export.S\n\t    , IS_PROTO  = type & $export.P\n\t    , IS_BIND   = type & $export.B\n\t    , IS_WRAP   = type & $export.W\n\t    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n\t    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n\t    , key, own, out;\n\t  if(IS_GLOBAL)source = name;\n\t  for(key in source){\n\t    // contains in native\n\t    own = !IS_FORCED && target && key in target;\n\t    if(own && key in exports)continue;\n\t    // export native or passed\n\t    out = own ? target[key] : source[key];\n\t    // prevent global pollution for namespaces\n\t    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n\t    // bind timers to global for call from export context\n\t    : IS_BIND && own ? ctx(out, global)\n\t    // wrap global constructors for prevent change them in library\n\t    : IS_WRAP && target[key] == out ? (function(C){\n\t      var F = function(param){\n\t        return this instanceof C ? new C(param) : C(param);\n\t      };\n\t      F[PROTOTYPE] = C[PROTOTYPE];\n\t      return F;\n\t    // make static versions for prototype methods\n\t    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n\t    if(IS_PROTO)(exports[PROTOTYPE] || (exports[PROTOTYPE] = {}))[key] = out;\n\t  }\n\t};\n\t// type bitmap\n\t$export.F = 1;  // forced\n\t$export.G = 2;  // global\n\t$export.S = 4;  // static\n\t$export.P = 8;  // proto\n\t$export.B = 16; // bind\n\t$export.W = 32; // wrap\n\tmodule.exports = $export;\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(exec){\n\t  try {\n\t    return !!exec();\n\t  } catch(e){\n\t    return true;\n\t  }\n\t};\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n\tvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n\t  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\n\tif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// fallback for non-array-like ES3 and non-enumerable old V8 strings\n\tvar cof = __webpack_require__(16);\n\tmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n\t  return cof(it) == 'String' ? it.split('') : Object(it);\n\t};\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\tvar $Object = Object;\n\tmodule.exports = {\n\t  create:     $Object.create,\n\t  getProto:   $Object.getPrototypeOf,\n\t  isEnum:     {}.propertyIsEnumerable,\n\t  getDesc:    $Object.getOwnPropertyDescriptor,\n\t  setDesc:    $Object.defineProperty,\n\t  setDescs:   $Object.defineProperties,\n\t  getKeys:    $Object.keys,\n\t  getNames:   $Object.getOwnPropertyNames,\n\t  getSymbols: $Object.getOwnPropertySymbols,\n\t  each:       [].forEach\n\t};\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.1 Object.assign(target, source, ...)\n\tvar $        = __webpack_require__(23)\n\t  , toObject = __webpack_require__(25)\n\t  , IObject  = __webpack_require__(22);\n\t\n\t// should work with symbols and should have deterministic property order (V8 bug)\n\tmodule.exports = __webpack_require__(20)(function(){\n\t  var a = Object.assign\n\t    , A = {}\n\t    , B = {}\n\t    , S = Symbol()\n\t    , K = 'abcdefghijklmnopqrst';\n\t  A[S] = 7;\n\t  K.split('').forEach(function(k){ B[k] = k; });\n\t  return a({}, A)[S] != 7 || Object.keys(a({}, B)).join('') != K;\n\t}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n\t  var T     = toObject(target)\n\t    , $$    = arguments\n\t    , $$len = $$.length\n\t    , index = 1\n\t    , getKeys    = $.getKeys\n\t    , getSymbols = $.getSymbols\n\t    , isEnum     = $.isEnum;\n\t  while($$len > index){\n\t    var S      = IObject($$[index++])\n\t      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n\t      , length = keys.length\n\t      , j      = 0\n\t      , key;\n\t    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n\t  }\n\t  return T;\n\t} : Object.assign;\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 7.1.13 ToObject(argument)\n\tvar defined = __webpack_require__(18);\n\tmodule.exports = function(it){\n\t  return Object(defined(it));\n\t};\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.3.1 Object.assign(target, source)\n\tvar $export = __webpack_require__(19);\n\t\n\t$export($export.S + $export.F, 'Object', {assign: __webpack_require__(24)});\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 30 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 31 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 32 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<github></github> <div class=container> <h2 class=site-name> <a v-link=\\\"{path: '/'}\\\">Tik Tok</a> </h2> <router-view></router-view> <div class=footer> &copy; {{ year }} Tik Tok ❤️ By <a href=https://github.com/egoist>EGOIST</a>. </div> </div>\";\n\n/***/ },\n/* 33 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<a href=https://github.com/egoist/tiktok class=github-corner><svg width=80 height=80 viewBox=\\\"0 0 250 250\\\" style=fill:#70B7FD;color:#fff;position:absolute;top:0;border:0;right:0><path d=\\\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\\\"></path><path d=\\\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\\\" fill=currentColor style=\\\"transform-origin:130px 106px\\\" class=octo-arm></path><path d=\\\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\\\" fill=currentColor class=octo-body></path></svg></a><style>.github-corner:hover .octo-arm{animation:octocat-wave 560ms ease-in-out}@keyframes octocat-wave{0%,100%{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@media (max-width:500px){.github-corner:hover .octo-arm{animation:none}.github-corner .octo-arm{animation:octocat-wave 560ms ease-in-out}}</style>\";\n\n/***/ },\n/* 34 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=page-add> <form class=\\\"pure-form pure-form-stacked\\\" @submit.prevent=handleSubmit> <fieldset> <label for=title>Title</label> <input id=title type=text class=pure-input-1 v-model=item.title> <label for=description>Description</label> <textarea id=description rows=3 class=pure-input-1 v-model=item.description></textarea> <div class=pure-g> <div class=pure-u-1-2> <label for=date>Date</label> <input id=date type=date class=pure-u-23-24 v-model=item.date> </div> <div class=pure-u-1-2> <label for=time>Time</label> <input id=time type=time class=pure-u-23-24 v-model=item.time> </div> </div> <div class=error v-if=error>{{ error }}</div> <div class=pure-controls> <button type=submit class=\\\"pure-u-1-3 pure-button pure-button-primary button-large\\\">Add</button> </div> </fieldset> </form> <div class=about> <h2 class=title>What is a <code>Tik Tok</code>?</h2> <div class=content> A <code>Tik Tok</code> is the time since you last did something. <hr> 一个 <code>Tik Tok</code> 是距离你上次做一件事经历的时间。 </div> </div> </div>\";\n\n/***/ },\n/* 35 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=page-home> <a class=\\\"pure-button pure-button-primary\\\" v-link=\\\"{path: '/add'}\\\">Add A Tok</a> <button @click=exportAsJSON class=\\\"pure-button pure-button-success\\\">Export As JSON</button> <div class=list> <div class=item v-for=\\\"item in list\\\"> <div class=item-timer> {{ item | timer }} days </div> <div class=item-main> <h2 class=item-title>{{ item.title }}</h2> <div class=item-description>{{ item.description }}</div> <div class=item-meta> <span class=item-remove @click=removeItem(item.id)>Remove</span> </div> </div> </div> </div> </div>\";\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(28)\n\t__webpack_require__(27)\n\t__webpack_require__(29)\n\t__vue_script__ = __webpack_require__(8)\n\t__vue_template__ = __webpack_require__(32)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_template__ = __webpack_require__(33)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(30)\n\t__vue_script__ = __webpack_require__(9)\n\t__vue_template__ = __webpack_require__(34)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(31)\n\t__vue_script__ = __webpack_require__(10)\n\t__vue_template__ = __webpack_require__(35)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * Vue.js v1.0.18\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined') {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t  if (this.size === this.limit) {\n\t    removed = this.shift();\n\t  }\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} str\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '(.+?)' + unsafeClose + '|' + open + '(.+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  text = text.replace(/\\n/g, '');\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: (\"production\") !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t    warn = function (msg, e) {\n\t      if (hasConsole && (!config.silent || config.debug)) {\n\t        console.warn('[Vue warn]: ' + msg);\n\t        /* istanbul ignore if */\n\t        if (config.debug) {\n\t          if (e) {\n\t            throw e;\n\t          } else {\n\t            console.warn(new Error('Warning Stack Trace').stack);\n\t          }\n\t        }\n\t      }\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  var doc = document.documentElement;\n\t  var parent = node && node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if ((isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} doNotObserve\n\t */\n\t\n\tfunction defineReactive(obj, key, val, doNotObserve) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  // if doNotObserve is true, only use the child value observer\n\t  // if it already exists, and do not attempt to create it.\n\t  // this allows freezing a large object from the root and\n\t  // avoid unnecessary observation inside v-for fragments.\n\t  var childOb = doNotObserve ? isObject(val) && val.__ob__ : observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = doNotObserve ? isObject(newVal) && newVal.__ob__ : observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif (false) {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        !/^(data|time|rtc|rb)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el) {\n\t  // dynamic syntax\n\t  var exp = getAttr(el, 'is');\n\t  if (exp != null) {\n\t    return { id: exp };\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  var key = prop.path;\n\t  value = coerceProp(prop, value);\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop.options);\n\t  }\n\t  if (assertProp(prop, value)) {\n\t    defineReactive(vm, key, value, true /* doNotObserve */);\n\t  }\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, options) {\n\t  // no default, return undefined\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Object/Array as default prop values will be shared ' + 'across multiple instances. Use a factory function ' + 'to return the default value instead.');\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction assertProp(prop, value) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = true;\n\t  var expectedType;\n\t  if (type) {\n\t    if (type === String) {\n\t      expectedType = 'string';\n\t      valid = typeof value === expectedType;\n\t    } else if (type === Number) {\n\t      expectedType = 'number';\n\t      valid = typeof value === 'number';\n\t    } else if (type === Boolean) {\n\t      expectedType = 'boolean';\n\t      valid = typeof value === 'boolean';\n\t    } else if (type === Function) {\n\t      expectedType = 'function';\n\t      valid = typeof value === 'function';\n\t    } else if (type === Object) {\n\t      expectedType = 'object';\n\t      valid = isPlainObject(value);\n\t    } else if (type === Array) {\n\t      expectedType = 'array';\n\t      valid = isArray(value);\n\t    } else {\n\t      valid = value instanceof type;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    (\"production\") !== 'production' && warn('Invalid prop: type check failed for ' + prop.path + '=\"' + prop.raw + '\".' + ' Expected ' + formatType(expectedType) + ', got ' + formatValue(value) + '.');\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for ' + prop.path + '=\"' + prop.raw + '\"');\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  // coerce is a function\n\t  return coerce(value);\n\t}\n\t\n\tfunction formatType(val) {\n\t  return val ? val.charAt(0).toUpperCase() + val.slice(1) : 'custom type';\n\t}\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * 0.11 deprecation warning\n\t */\n\t\n\tstrats.paramAttributes = function () {\n\t  /* istanbul ignore next */\n\t  (\"production\") !== 'production' && warn('\"paramAttributes\" option has been deprecated in 0.12. ' + 'Use \"props\" instead.');\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (false) {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (false) {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  var options = {};\n\t  var key;\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      parent = mergeOptions(parent, child.mixins[i], vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  return assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t}\n\t\n\t/**\n\t * Assert asset exists\n\t */\n\t\n\tfunction assertAsset(val, type, id) {\n\t  if (!val) {\n\t    (\"production\") !== 'production' && warn('Failed to resolve ' + type + ': ' + id);\n\t  }\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tassertAsset: assertAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tinitProp: initProp,\n\t\tassertProp: assertProp,\n\t\tcoerceProp: coerceProp,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initScope().\n\t    this._data = {};\n\t\n\t    // save raw constructor data before merge\n\t    // so that we know which properties are provided at\n\t    // instantiation.\n\t    this._runtimeData = options.data;\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.');\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar booleanLiteralRE = /^(?:true|false)$/;\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here becaue the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    (\"production\") !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat true/false as paths\n\t  !booleanLiteralRE.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queueIndex;\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\tvar internalQueueDepleted = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue = [];\n\t  userQueue = [];\n\t  has = {};\n\t  circular = {};\n\t  waiting = internalQueueDepleted = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  runBatcherQueue(queue);\n\t  internalQueueDepleted = true;\n\t  runBatcherQueue(userQueue);\n\t  // dev tool hook\n\t  /* istanbul ignore if */\n\t  if (devtools && config.devtools) {\n\t    devtools.emit('flush');\n\t  }\n\t  resetBatcherState();\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (queueIndex = 0; queueIndex < queue.length; queueIndex++) {\n\t    var watcher = queue[queueIndex];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        queue.splice(has[id], 1);\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression: ' + watcher.expression);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    if (internalQueueDepleted && !watcher.user) {\n\t      // an internal watcher triggered by a user watcher...\n\t      // let's run it immediately after current user watcher is done.\n\t      userQueue.splice(queueIndex + 1, 0, watcher);\n\t    } else {\n\t      // push watcher into appropriate queue\n\t      var q = watcher.user ? userQueue : queue;\n\t      has[id] = q.length;\n\t      q.push(watcher);\n\t      // queue the flush\n\t      if (!waiting) {\n\t        waiting = true;\n\t        nextTick(flushBatcherQueue);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String} expression\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = Object.create(null);\n\t  this.newDepIds = null;\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression \"' + this.expression + '\". ' + (config.debug ? '' : 'Turn on debug mode to see stack trace.'), e);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter \"' + this.expression + '\"', e);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.');\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t  this.newDepIds = Object.create(null);\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds[id]) {\n\t    this.newDepIds[id] = true;\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds[id]) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds[dep.id]) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  this.depIds = this.newDepIds;\n\t  var tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tfunction traverse(val) {\n\t  var i, keys;\n\t  if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) traverse(val[i]);\n\t  } else if (isObject(val)) {\n\t    keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) traverse(val[keys[i]]);\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment.\n\t  if (isRealTemplate(node)) {\n\t    trimNode(node.content);\n\t    return node.content;\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el)) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar FOR = 2000;\n\tvar IF = 2000;\n\tvar SLOT = 2100;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Alias is required in v-for.');\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          frag.scope[alias] = value;\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    defineReactive(scope, alias, value, true /* do not observe */);\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.before(prevEl.nextSibling);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else {\n\t        def(value, id, frag);\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * wathcer's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.');\n\t  };\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.');\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.value = _toString(value);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', this.forceUpdate);\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model. You might want to use a two-way filter ' + 'to ensure correct behavior.');\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        value = value.replace(importantRE, '').trim();\n\t      }\n\t      this.el.style.setProperty(prop, value, isImportant);\n\t    } else {\n\t      this.el.style.removeProperty(prop);\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return prefixes[i] + prop;\n\t    }\n\t  }\n\t  if (camel in testEl.style) {\n\t    return prop;\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.');\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.');\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.');\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.');\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (value && typeof value === 'string') {\n\t      this.handleObject(stringToObject(value));\n\t    } else if (isPlainObject(value)) {\n\t      this.handleObject(value);\n\t    } else if (isArray(value)) {\n\t      this.handleArray(value);\n\t    } else {\n\t      this.cleanup();\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    this.cleanup(value);\n\t    var keys = this.prevKeys = Object.keys(value);\n\t    for (var i = 0, l = keys.length; i < l; i++) {\n\t      var key = keys[i];\n\t      if (value[key]) {\n\t        addClass(this.el, key);\n\t      } else {\n\t        removeClass(this.el, key);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleArray: function handleArray(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      if (value[i]) {\n\t        addClass(this.el, value[i]);\n\t      }\n\t    }\n\t    this.prevKeys = value.slice();\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    if (this.prevKeys) {\n\t      var i = this.prevKeys.length;\n\t      while (i--) {\n\t        var key = this.prevKeys[i];\n\t        if (key && (!value || !contains(value, key))) {\n\t          removeClass(this.el, key);\n\t        }\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tfunction stringToObject(value) {\n\t  var res = {};\n\t  var keys = value.trim().split(/\\s+/);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    res[keys[i]] = true;\n\t  }\n\t  return res;\n\t}\n\t\n\tfunction contains(value, key) {\n\t  return isArray(value) ? value.indexOf(key) > -1 : hasOwn(value, key);\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(id, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || id;\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(id, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      this.waitingFor.$destroy();\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      val = coerceProp(prop, val);\n\t      if (assertProp(prop, val)) {\n\t        child[childKey] = val;\n\t      }\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  // Important hack:\n\t  // in Chrome, if a just-entered element is applied the\n\t  // leave class while its interpolated property still has\n\t  // a very small value (within one frame), Chrome will\n\t  // skip the leave transition entirely and not firing the\n\t  // transtionend event. Therefore we need to protected\n\t  // against such cases using a one-frame timeout.\n\t  this.justEntered = true;\n\t  var self = this;\n\t  setTimeout(function () {\n\t    self.justEntered = false;\n\t  }, 17);\n\t\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    if (oldId) {\n\t      removeClass(el, oldId + '-transition');\n\t    }\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.');\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.');\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.');\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (false) {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.');\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value\n\t        value = options.type === Boolean && raw === '' ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// terminal directives\n\tvar terminalDirectives = ['for', 'if'];\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (true) {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (false) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && node.tagName !== 'SCRIPT') {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(el.attributes, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = value;\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t  var value, dirName;\n\t  for (var i = 0, l = terminalDirectives.length; i < l; i++) {\n\t    dirName = terminalDirectives[i];\n\t    value = el.getAttribute('v-' + dirName);\n\t    if (value != null) {\n\t      return makeTerminalNodeLinkFn(el, dirName, value, options);\n\t    }\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} [def]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    // either an element directive, or if/for\n\t    // #2366 or custom terminal directive\n\t    def: def || resolveAsset(options, 'directives', dirName)\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.');\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName);\n\t\n\t              if (false) {\n\t                assertAsset(dirDef, 'directive', dirName);\n\t              }\n\t\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value)) {\n\t      value.trim().split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\tterminalDirectives: terminalDirectives,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.');\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    var props = this._props;\n\t    var runtimeData = this._runtimeData ? typeof this._runtimeData === 'function' ? this._runtimeData() : this._runtimeData : null;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key) || runtimeData && hasOwn(runtimeData, key) && props[key].raw === null) {\n\t        this._proxy(key);\n\t      } else if (false) {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. Use prop default value instead.');\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n\t        if (typeof handler === 'function') {\n\t          handler._fromParent = true;\n\t          vm.$on(name.replace(eventRE), handler);\n\t        } else if (false) {\n\t          warn('v-on:' + name + '=\"' + attrs[i].value + '\"' + (vm.$options.name ? ' on component <' + vm.$options.name + '>' : '') + ' expects a function value, got ' + handler);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".');\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {String} name\n\t * @param {Node} el\n\t * @param {Vue} vm\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} raw\n\t * @param {Object} def - directive definition object\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t *\n\t * @param {Object} def\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = params[i];\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {String} name - directive name\n\t   * @param {Node} node   - target node\n\t   * @param {Object} desc - parsed directive descriptor\n\t   * @param {Object} def  - directive definition object\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name);\n\t      if (false) {\n\t        assertAsset(fn, 'filter', filter.name);\n\t      }\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String} id\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (id, cb) {\n\t    var factory = resolveAsset(this.$options, 'components', id);\n\t    if (false) {\n\t      assertAsset(factory, 'component', id);\n\t    }\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component: ' + id + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement && !isSimplePath(exp)) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.');\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id);\n\t    if (false) {\n\t      assertAsset(partial, 'partial', id);\n\t    }\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = toArray(arguments, n).reduce(function (prev, cur) {\n\t    return prev.concat(cur);\n\t  }, []);\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains$1(item.$key, search) || contains$1(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains$1(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} sortKey\n\t * @param {String} reverse\n\t */\n\t\n\tfunction orderBy(arr, sortKey, reverse) {\n\t  arr = convertArray(arr);\n\t  if (!sortKey) {\n\t    return arr;\n\t  }\n\t  var order = reverse && reverse < 0 ? -1 : 1;\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(function (a, b) {\n\t    if (sortKey !== '$key') {\n\t      if (isObject(a) && '$value' in a) a = a.$value;\n\t      if (isObject(b) && '$value' in b) b = b.$value;\n\t    }\n\t    a = isObject(a) ? getPath(a, sortKey) : a;\n\t    b = isObject(b) ? getPath(b, sortKey) : b;\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  });\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains$1(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains$1(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains$1(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   */\n\t\n\t  currency: function currency(value, _currency) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    var stringified = Math.abs(value).toFixed(2);\n\t    var _int = stringified.slice(0, -3);\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = stringified.slice(-3);\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          definition.name = id;\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.18';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tif (config.devtools) {\n\t  if (devtools) {\n\t    devtools.emit('init', Vue);\n\t  } else if (false) {\n\t    console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t  }\n\t}\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 41 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function() { throw new Error(\"define cannot be used indirect\"); };\r\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {module.exports = __webpack_amd_options__;\r\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, {}))\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.db5efb9869dd78b12c92.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 6f0f3c97d792a0c6dbcd\n **/","import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport app from './app'\nimport routes from './routes'\n\nVue.use(VueRouter)\n\nconst router = new VueRouter()\nrouter.map(routes)\n\nrouter.start(app, 'app')\n\n\n\n/** WEBPACK FOOTER **\n ** ./index.js\n **/","var core = module.exports = {version: '1.2.6'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.core.js\n ** module id = 1\n ** module chunks = 0\n **/","export function addItem(item) {\n\tconst items = getAll()\n\titems.push(item)\n\tlocalStorage.setItem('tiktoks', JSON.stringify(items))\n}\n\nexport function getAll() {\n\treturn JSON.parse(localStorage.getItem('tiktoks')) || []\n}\n\nexport function override(items) {\n\tlocalStorage.setItem('tiktoks', JSON.stringify(items))\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./store.js\n **/","module.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/babel-runtime/core-js/json/stringify.js\n ** module id = 3\n ** module chunks = 0\n **/","/*\n * random-string\n * https://github.com/valiton/node-random-string\n *\n * Copyright (c) 2013 Valiton GmbH, Bastian 'hereandnow' Behrens\n * Licensed under the MIT license.\n */\n\n'use strict';\n\nvar numbers = '0123456789',\n    letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz',\n    specials = '!$%^&*()_+|~-=`{}[]:;<>?,./';\n\n\nfunction _defaults (opts) {\n  opts || (opts = {});\n  return {\n    length: opts.length || 8,\n    numeric: typeof opts.numeric === 'boolean' ? opts.numeric : true,\n    letters: typeof opts.letters === 'boolean' ? opts.letters : true,\n    special: typeof opts.special === 'boolean' ? opts.special : false\n  };\n}\n\nfunction _buildChars (opts) {\n  var chars = '';\n  if (opts.numeric) { chars += numbers; }\n  if (opts.letters) { chars += letters; }\n  if (opts.special) { chars += specials; }\n  return chars;\n}\n\nmodule.exports = function randomString(opts) {\n  opts = _defaults(opts);\n  var i, rn,\n      rnd = '',\n      len = opts.length,\n      randomChars = _buildChars(opts);\n  for (i = 1; i <= len; i++) {\n    rnd += randomChars.substring(rn = Math.floor(Math.random() * randomChars.length), rn + 1);\n  }\n  return rnd;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/random-string/lib/random-string.js\n ** module id = 4\n ** module chunks = 0\n **/","/*!\n * vue-router v0.7.13\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.VueRouter = factory();\n}(this, function () { 'use strict';\n\n  var babelHelpers = {};\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n  function Target(path, matcher, delegate) {\n    this.path = path;\n    this.matcher = matcher;\n    this.delegate = delegate;\n  }\n\n  Target.prototype = {\n    to: function to(target, callback) {\n      var delegate = this.delegate;\n\n      if (delegate && delegate.willAddRoute) {\n        target = delegate.willAddRoute(this.matcher.target, target);\n      }\n\n      this.matcher.add(this.path, target);\n\n      if (callback) {\n        if (callback.length === 0) {\n          throw new Error(\"You must have an argument in the function passed to `to`\");\n        }\n        this.matcher.addChild(this.path, target, callback, this.delegate);\n      }\n      return this;\n    }\n  };\n\n  function Matcher(target) {\n    this.routes = {};\n    this.children = {};\n    this.target = target;\n  }\n\n  Matcher.prototype = {\n    add: function add(path, handler) {\n      this.routes[path] = handler;\n    },\n\n    addChild: function addChild(path, target, callback, delegate) {\n      var matcher = new Matcher(target);\n      this.children[path] = matcher;\n\n      var match = generateMatch(path, matcher, delegate);\n\n      if (delegate && delegate.contextEntered) {\n        delegate.contextEntered(target, match);\n      }\n\n      callback(match);\n    }\n  };\n\n  function generateMatch(startingPath, matcher, delegate) {\n    return function (path, nestedCallback) {\n      var fullPath = startingPath + path;\n\n      if (nestedCallback) {\n        nestedCallback(generateMatch(fullPath, matcher, delegate));\n      } else {\n        return new Target(startingPath + path, matcher, delegate);\n      }\n    };\n  }\n\n  function addRoute(routeArray, path, handler) {\n    var len = 0;\n    for (var i = 0, l = routeArray.length; i < l; i++) {\n      len += routeArray[i].path.length;\n    }\n\n    path = path.substr(len);\n    var route = { path: path, handler: handler };\n    routeArray.push(route);\n  }\n\n  function eachRoute(baseRoute, matcher, callback, binding) {\n    var routes = matcher.routes;\n\n    for (var path in routes) {\n      if (routes.hasOwnProperty(path)) {\n        var routeArray = baseRoute.slice();\n        addRoute(routeArray, path, routes[path]);\n\n        if (matcher.children[path]) {\n          eachRoute(routeArray, matcher.children[path], callback, binding);\n        } else {\n          callback.call(binding, routeArray);\n        }\n      }\n    }\n  }\n\n  function map (callback, addRouteCallback) {\n    var matcher = new Matcher();\n\n    callback(generateMatch(\"\", matcher, this.delegate));\n\n    eachRoute([], matcher, function (route) {\n      if (addRouteCallback) {\n        addRouteCallback(this, route);\n      } else {\n        this.add(route);\n      }\n    }, this);\n  }\n\n  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\n  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\n  var noWarning = false;\n  function warn(msg) {\n    if (!noWarning && typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  function tryDecode(uri, asComponent) {\n    try {\n      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);\n    } catch (e) {\n      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);\n    }\n  }\n\n  function isArray(test) {\n    return Object.prototype.toString.call(test) === \"[object Array]\";\n  }\n\n  // A Segment represents a segment in the original route description.\n  // Each Segment type provides an `eachChar` and `regex` method.\n  //\n  // The `eachChar` method invokes the callback with one or more character\n  // specifications. A character specification consumes one or more input\n  // characters.\n  //\n  // The `regex` method returns a regex fragment for the segment. If the\n  // segment is a dynamic of star segment, the regex fragment also includes\n  // a capture.\n  //\n  // A character specification contains:\n  //\n  // * `validChars`: a String with a list of all valid characters, or\n  // * `invalidChars`: a String with a list of all invalid characters\n  // * `repeat`: true if the character specification can repeat\n\n  function StaticSegment(string) {\n    this.string = string;\n  }\n  StaticSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      var string = this.string,\n          ch;\n\n      for (var i = 0, l = string.length; i < l; i++) {\n        ch = string.charAt(i);\n        callback({ validChars: ch });\n      }\n    },\n\n    regex: function regex() {\n      return this.string.replace(escapeRegex, '\\\\$1');\n    },\n\n    generate: function generate() {\n      return this.string;\n    }\n  };\n\n  function DynamicSegment(name) {\n    this.name = name;\n  }\n  DynamicSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"/\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"([^/]+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function StarSegment(name) {\n    this.name = name;\n  }\n  StarSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"(.+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function EpsilonSegment() {}\n  EpsilonSegment.prototype = {\n    eachChar: function eachChar() {},\n    regex: function regex() {\n      return \"\";\n    },\n    generate: function generate() {\n      return \"\";\n    }\n  };\n\n  function parse(route, names, specificity) {\n    // normalize route as not starting with a \"/\". Recognition will\n    // also normalize.\n    if (route.charAt(0) === \"/\") {\n      route = route.substr(1);\n    }\n\n    var segments = route.split(\"/\"),\n        results = [];\n\n    // A routes has specificity determined by the order that its different segments\n    // appear in. This system mirrors how the magnitude of numbers written as strings\n    // works.\n    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n    // leading symbol, \"1\".\n    // The rule is that symbols to the left carry more weight than symbols to the right\n    // when a number is written out as a string. In the above strings, the leading digit\n    // represents how many 100's are in the number, and it carries more weight than the middle\n    // number which represents how many 10's are in the number.\n    // This system of number magnitude works well for route specificity, too. A route written as\n    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n    // `x`, irrespective of the other parts.\n    // Because of this similarity, we assign each type of segment a number value written as a\n    // string. We can find the specificity of compound routes by concatenating these strings\n    // together, from left to right. After we have looped through all of the segments,\n    // we convert the string to a number.\n    specificity.val = '';\n\n    for (var i = 0, l = segments.length; i < l; i++) {\n      var segment = segments[i],\n          match;\n\n      if (match = segment.match(/^:([^\\/]+)$/)) {\n        results.push(new DynamicSegment(match[1]));\n        names.push(match[1]);\n        specificity.val += '3';\n      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n        results.push(new StarSegment(match[1]));\n        specificity.val += '2';\n        names.push(match[1]);\n      } else if (segment === \"\") {\n        results.push(new EpsilonSegment());\n        specificity.val += '1';\n      } else {\n        results.push(new StaticSegment(segment));\n        specificity.val += '4';\n      }\n    }\n\n    specificity.val = +specificity.val;\n\n    return results;\n  }\n\n  // A State has a character specification and (`charSpec`) and a list of possible\n  // subsequent states (`nextStates`).\n  //\n  // If a State is an accepting state, it will also have several additional\n  // properties:\n  //\n  // * `regex`: A regular expression that is used to extract parameters from paths\n  //   that reached this accepting state.\n  // * `handlers`: Information on how to convert the list of captures into calls\n  //   to registered handlers with the specified parameters\n  // * `types`: How many static, dynamic or star segments in this route. Used to\n  //   decide which route to use if multiple registered routes match a path.\n  //\n  // Currently, State is implemented naively by looping over `nextStates` and\n  // comparing a character specification against a character. A more efficient\n  // implementation would use a hash of keys pointing at one or more next states.\n\n  function State(charSpec) {\n    this.charSpec = charSpec;\n    this.nextStates = [];\n  }\n\n  State.prototype = {\n    get: function get(charSpec) {\n      var nextStates = this.nextStates;\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        var child = nextStates[i];\n\n        var isEqual = child.charSpec.validChars === charSpec.validChars;\n        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\n        if (isEqual) {\n          return child;\n        }\n      }\n    },\n\n    put: function put(charSpec) {\n      var state;\n\n      // If the character specification already exists in a child of the current\n      // state, just return that state.\n      if (state = this.get(charSpec)) {\n        return state;\n      }\n\n      // Make a new state for the character spec\n      state = new State(charSpec);\n\n      // Insert the new state as a child of the current state\n      this.nextStates.push(state);\n\n      // If this character specification repeats, insert the new state as a child\n      // of itself. Note that this will not trigger an infinite loop because each\n      // transition during recognition consumes a character.\n      if (charSpec.repeat) {\n        state.nextStates.push(state);\n      }\n\n      // Return the new state\n      return state;\n    },\n\n    // Find a list of child states matching the next character\n    match: function match(ch) {\n      // DEBUG \"Processing `\" + ch + \"`:\"\n      var nextStates = this.nextStates,\n          child,\n          charSpec,\n          chars;\n\n      // DEBUG \"  \" + debugState(this)\n      var returned = [];\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        child = nextStates[i];\n\n        charSpec = child.charSpec;\n\n        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n          if (chars.indexOf(ch) !== -1) {\n            returned.push(child);\n          }\n        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n          if (chars.indexOf(ch) === -1) {\n            returned.push(child);\n          }\n        }\n      }\n\n      return returned;\n    }\n\n    /** IF DEBUG\n    , debug: function() {\n      var charSpec = this.charSpec,\n          debug = \"[\",\n          chars = charSpec.validChars || charSpec.invalidChars;\n       if (charSpec.invalidChars) { debug += \"^\"; }\n      debug += chars;\n      debug += \"]\";\n       if (charSpec.repeat) { debug += \"+\"; }\n       return debug;\n    }\n    END IF **/\n  };\n\n  /** IF DEBUG\n  function debug(log) {\n    console.log(log);\n  }\n\n  function debugState(state) {\n    return state.nextStates.map(function(n) {\n      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n    }).join(\", \")\n  }\n  END IF **/\n\n  // Sort the routes by specificity\n  function sortSolutions(states) {\n    return states.sort(function (a, b) {\n      return b.specificity.val - a.specificity.val;\n    });\n  }\n\n  function recognizeChar(states, ch) {\n    var nextStates = [];\n\n    for (var i = 0, l = states.length; i < l; i++) {\n      var state = states[i];\n\n      nextStates = nextStates.concat(state.match(ch));\n    }\n\n    return nextStates;\n  }\n\n  var oCreate = Object.create || function (proto) {\n    function F() {}\n    F.prototype = proto;\n    return new F();\n  };\n\n  function RecognizeResults(queryParams) {\n    this.queryParams = queryParams || {};\n  }\n  RecognizeResults.prototype = oCreate({\n    splice: Array.prototype.splice,\n    slice: Array.prototype.slice,\n    push: Array.prototype.push,\n    length: 0,\n    queryParams: null\n  });\n\n  function findHandler(state, path, queryParams) {\n    var handlers = state.handlers,\n        regex = state.regex;\n    var captures = path.match(regex),\n        currentCapture = 1;\n    var result = new RecognizeResults(queryParams);\n\n    for (var i = 0, l = handlers.length; i < l; i++) {\n      var handler = handlers[i],\n          names = handler.names,\n          params = {};\n\n      for (var j = 0, m = names.length; j < m; j++) {\n        params[names[j]] = captures[currentCapture++];\n      }\n\n      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n    }\n\n    return result;\n  }\n\n  function addSegment(currentState, segment) {\n    segment.eachChar(function (ch) {\n      var state;\n\n      currentState = currentState.put(ch);\n    });\n\n    return currentState;\n  }\n\n  function decodeQueryParamPart(part) {\n    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n    part = part.replace(/\\+/gm, '%20');\n    return tryDecode(part, true);\n  }\n\n  // The main interface\n\n  var RouteRecognizer = function RouteRecognizer() {\n    this.rootState = new State();\n    this.names = {};\n  };\n\n  RouteRecognizer.prototype = {\n    add: function add(routes, options) {\n      var currentState = this.rootState,\n          regex = \"^\",\n          specificity = {},\n          handlers = [],\n          allSegments = [],\n          name;\n\n      var isEmpty = true;\n\n      for (var i = 0, l = routes.length; i < l; i++) {\n        var route = routes[i],\n            names = [];\n\n        var segments = parse(route.path, names, specificity);\n\n        allSegments = allSegments.concat(segments);\n\n        for (var j = 0, m = segments.length; j < m; j++) {\n          var segment = segments[j];\n\n          if (segment instanceof EpsilonSegment) {\n            continue;\n          }\n\n          isEmpty = false;\n\n          // Add a \"/\" for the new segment\n          currentState = currentState.put({ validChars: \"/\" });\n          regex += \"/\";\n\n          // Add a representation of the segment to the NFA and regex\n          currentState = addSegment(currentState, segment);\n          regex += segment.regex();\n        }\n\n        var handler = { handler: route.handler, names: names };\n        handlers.push(handler);\n      }\n\n      if (isEmpty) {\n        currentState = currentState.put({ validChars: \"/\" });\n        regex += \"/\";\n      }\n\n      currentState.handlers = handlers;\n      currentState.regex = new RegExp(regex + \"$\");\n      currentState.specificity = specificity;\n\n      if (name = options && options.as) {\n        this.names[name] = {\n          segments: allSegments,\n          handlers: handlers\n        };\n      }\n    },\n\n    handlersFor: function handlersFor(name) {\n      var route = this.names[name],\n          result = [];\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      for (var i = 0, l = route.handlers.length; i < l; i++) {\n        result.push(route.handlers[i]);\n      }\n\n      return result;\n    },\n\n    hasRoute: function hasRoute(name) {\n      return !!this.names[name];\n    },\n\n    generate: function generate(name, params) {\n      var route = this.names[name],\n          output = \"\";\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      var segments = route.segments;\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        var segment = segments[i];\n\n        if (segment instanceof EpsilonSegment) {\n          continue;\n        }\n\n        output += \"/\";\n        output += segment.generate(params);\n      }\n\n      if (output.charAt(0) !== '/') {\n        output = '/' + output;\n      }\n\n      if (params && params.queryParams) {\n        output += this.generateQueryString(params.queryParams);\n      }\n\n      return output;\n    },\n\n    generateQueryString: function generateQueryString(params) {\n      var pairs = [];\n      var keys = [];\n      for (var key in params) {\n        if (params.hasOwnProperty(key)) {\n          keys.push(key);\n        }\n      }\n      keys.sort();\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        var value = params[key];\n        if (value == null) {\n          continue;\n        }\n        var pair = encodeURIComponent(key);\n        if (isArray(value)) {\n          for (var j = 0, l = value.length; j < l; j++) {\n            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n            pairs.push(arrayPair);\n          }\n        } else {\n          pair += \"=\" + encodeURIComponent(value);\n          pairs.push(pair);\n        }\n      }\n\n      if (pairs.length === 0) {\n        return '';\n      }\n\n      return \"?\" + pairs.join(\"&\");\n    },\n\n    parseQueryString: function parseQueryString(queryString) {\n      var pairs = queryString.split(\"&\"),\n          queryParams = {};\n      for (var i = 0; i < pairs.length; i++) {\n        var pair = pairs[i].split('='),\n            key = decodeQueryParamPart(pair[0]),\n            keyLength = key.length,\n            isArray = false,\n            value;\n        if (pair.length === 1) {\n          value = 'true';\n        } else {\n          //Handle arrays\n          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n            isArray = true;\n            key = key.slice(0, keyLength - 2);\n            if (!queryParams[key]) {\n              queryParams[key] = [];\n            }\n          }\n          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n        }\n        if (isArray) {\n          queryParams[key].push(value);\n        } else {\n          queryParams[key] = value;\n        }\n      }\n      return queryParams;\n    },\n\n    recognize: function recognize(path, silent) {\n      noWarning = silent;\n      var states = [this.rootState],\n          pathLen,\n          i,\n          l,\n          queryStart,\n          queryParams = {},\n          isSlashDropped = false;\n\n      queryStart = path.indexOf('?');\n      if (queryStart !== -1) {\n        var queryString = path.substr(queryStart + 1, path.length);\n        path = path.substr(0, queryStart);\n        if (queryString) {\n          queryParams = this.parseQueryString(queryString);\n        }\n      }\n\n      path = tryDecode(path);\n      if (!path) return;\n\n      // DEBUG GROUP path\n\n      if (path.charAt(0) !== \"/\") {\n        path = \"/\" + path;\n      }\n\n      pathLen = path.length;\n      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n        path = path.substr(0, pathLen - 1);\n        isSlashDropped = true;\n      }\n\n      for (i = 0, l = path.length; i < l; i++) {\n        states = recognizeChar(states, path.charAt(i));\n        if (!states.length) {\n          break;\n        }\n      }\n\n      // END DEBUG GROUP\n\n      var solutions = [];\n      for (i = 0, l = states.length; i < l; i++) {\n        if (states[i].handlers) {\n          solutions.push(states[i]);\n        }\n      }\n\n      states = sortSolutions(solutions);\n\n      var state = solutions[0];\n\n      if (state && state.handlers) {\n        // if a trailing slash was dropped and a star segment is the last segment\n        // specified, put the trailing slash back\n        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n          path = path + \"/\";\n        }\n        return findHandler(state, path, queryParams);\n      }\n    }\n  };\n\n  RouteRecognizer.prototype.map = map;\n\n  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\n  // export default for holding the Vue reference\n  var exports$1 = {};\n  /**\n   * Warn stuff.\n   *\n   * @param {String} msg\n   */\n\n  function warn$1(msg) {\n    /* istanbul ignore next */\n    if (typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  /**\n   * Resolve a relative path.\n   *\n   * @param {String} base\n   * @param {String} relative\n   * @param {Boolean} append\n   * @return {String}\n   */\n\n  function resolvePath(base, relative, append) {\n    var query = base.match(/(\\?.*)$/);\n    if (query) {\n      query = query[1];\n      base = base.slice(0, -query.length);\n    }\n    // a query!\n    if (relative.charAt(0) === '?') {\n      return base + relative;\n    }\n    var stack = base.split('/');\n    // remove trailing segment if:\n    // - not appending\n    // - appending to trailing slash (last segment is empty)\n    if (!append || !stack[stack.length - 1]) {\n      stack.pop();\n    }\n    // resolve relative path\n    var segments = relative.replace(/^\\//, '').split('/');\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n      if (segment === '.') {\n        continue;\n      } else if (segment === '..') {\n        stack.pop();\n      } else {\n        stack.push(segment);\n      }\n    }\n    // ensure leading slash\n    if (stack[0] !== '') {\n      stack.unshift('');\n    }\n    return stack.join('/');\n  }\n\n  /**\n   * Forgiving check for a promise\n   *\n   * @param {Object} p\n   * @return {Boolean}\n   */\n\n  function isPromise(p) {\n    return p && typeof p.then === 'function';\n  }\n\n  /**\n   * Retrive a route config field from a component instance\n   * OR a component contructor.\n   *\n   * @param {Function|Vue} component\n   * @param {String} name\n   * @return {*}\n   */\n\n  function getRouteConfig(component, name) {\n    var options = component && (component.$options || component.options);\n    return options && options.route && options.route[name];\n  }\n\n  /**\n   * Resolve an async component factory. Have to do a dirty\n   * mock here because of Vue core's internal API depends on\n   * an ID check.\n   *\n   * @param {Object} handler\n   * @param {Function} cb\n   */\n\n  var resolver = undefined;\n\n  function resolveAsyncComponent(handler, cb) {\n    if (!resolver) {\n      resolver = {\n        resolve: exports$1.Vue.prototype._resolveComponent,\n        $options: {\n          components: {\n            _: handler.component\n          }\n        }\n      };\n    } else {\n      resolver.$options.components._ = handler.component;\n    }\n    resolver.resolve('_', function (Component) {\n      handler.component = Component;\n      cb(Component);\n    });\n  }\n\n  /**\n   * Map the dynamic segments in a path to params.\n   *\n   * @param {String} path\n   * @param {Object} params\n   * @param {Object} query\n   */\n\n  function mapParams(path, params, query) {\n    if (params === undefined) params = {};\n\n    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n      var val = params[key];\n      /* istanbul ignore if */\n      if (!val) {\n        warn$1('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n      }\n      return val || '';\n    });\n    if (query) {\n      path += genQuery(query);\n    }\n    return path;\n  }\n\n  var hashRE = /#.*$/;\n\n  var HTML5History = (function () {\n    function HTML5History(_ref) {\n      var root = _ref.root;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HTML5History);\n\n      if (root && root !== '/') {\n        // make sure there's the starting slash\n        if (root.charAt(0) !== '/') {\n          root = '/' + root;\n        }\n        // remove trailing slash\n        this.root = root.replace(/\\/$/, '');\n        this.rootRE = new RegExp('^\\\\' + this.root);\n      } else {\n        this.root = null;\n      }\n      this.onChange = onChange;\n      // check base tag\n      var baseEl = document.querySelector('base');\n      this.base = baseEl && baseEl.getAttribute('href');\n    }\n\n    HTML5History.prototype.start = function start() {\n      var _this = this;\n\n      this.listener = function (e) {\n        var url = location.pathname + location.search;\n        if (_this.root) {\n          url = url.replace(_this.rootRE, '');\n        }\n        _this.onChange(url, e && e.state, location.hash);\n      };\n      window.addEventListener('popstate', this.listener);\n      this.listener();\n    };\n\n    HTML5History.prototype.stop = function stop() {\n      window.removeEventListener('popstate', this.listener);\n    };\n\n    HTML5History.prototype.go = function go(path, replace, append) {\n      var url = this.formatPath(path, append);\n      if (replace) {\n        history.replaceState({}, '', url);\n      } else {\n        // record scroll position by replacing current state\n        history.replaceState({\n          pos: {\n            x: window.pageXOffset,\n            y: window.pageYOffset\n          }\n        }, '', location.href);\n        // then push new state\n        history.pushState({}, '', url);\n      }\n      var hashMatch = path.match(hashRE);\n      var hash = hashMatch && hashMatch[0];\n      path = url\n      // strip hash so it doesn't mess up params\n      .replace(hashRE, '')\n      // remove root before matching\n      .replace(this.rootRE, '');\n      this.onChange(path, null, hash);\n    };\n\n    HTML5History.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/'\n      // absolute path\n      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n    };\n\n    return HTML5History;\n  })();\n\n  var HashHistory = (function () {\n    function HashHistory(_ref) {\n      var hashbang = _ref.hashbang;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HashHistory);\n\n      this.hashbang = hashbang;\n      this.onChange = onChange;\n    }\n\n    HashHistory.prototype.start = function start() {\n      var self = this;\n      this.listener = function () {\n        var path = location.hash;\n        var raw = path.replace(/^#!?/, '');\n        // always\n        if (raw.charAt(0) !== '/') {\n          raw = '/' + raw;\n        }\n        var formattedPath = self.formatPath(raw);\n        if (formattedPath !== path) {\n          location.replace(formattedPath);\n          return;\n        }\n        // determine query\n        // note it's possible to have queries in both the actual URL\n        // and the hash fragment itself.\n        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n        self.onChange(path.replace(/^#!?/, '') + query);\n      };\n      window.addEventListener('hashchange', this.listener);\n      this.listener();\n    };\n\n    HashHistory.prototype.stop = function stop() {\n      window.removeEventListener('hashchange', this.listener);\n    };\n\n    HashHistory.prototype.go = function go(path, replace, append) {\n      path = this.formatPath(path, append);\n      if (replace) {\n        location.replace(path);\n      } else {\n        location.hash = path;\n      }\n    };\n\n    HashHistory.prototype.formatPath = function formatPath(path, append) {\n      var isAbsoloute = path.charAt(0) === '/';\n      var prefix = '#' + (this.hashbang ? '!' : '');\n      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n    };\n\n    return HashHistory;\n  })();\n\n  var AbstractHistory = (function () {\n    function AbstractHistory(_ref) {\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, AbstractHistory);\n\n      this.onChange = onChange;\n      this.currentPath = '/';\n    }\n\n    AbstractHistory.prototype.start = function start() {\n      this.onChange('/');\n    };\n\n    AbstractHistory.prototype.stop = function stop() {\n      // noop\n    };\n\n    AbstractHistory.prototype.go = function go(path, replace, append) {\n      path = this.currentPath = this.formatPath(path, append);\n      this.onChange(path);\n    };\n\n    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n    };\n\n    return AbstractHistory;\n  })();\n\n  /**\n   * Determine the reusability of an existing router view.\n   *\n   * @param {Directive} view\n   * @param {Object} handler\n   * @param {Transition} transition\n   */\n\n  function canReuse(view, handler, transition) {\n    var component = view.childVM;\n    if (!component || !handler) {\n      return false;\n    }\n    // important: check view.Component here because it may\n    // have been changed in activate hook\n    if (view.Component !== handler.component) {\n      return false;\n    }\n    var canReuseFn = getRouteConfig(component, 'canReuse');\n    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n      to: transition.to,\n      from: transition.from\n    }) : true; // defaults to true\n  }\n\n  /**\n   * Check if a component can deactivate.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canDeactivate(view, transition, next) {\n    var fromComponent = view.childVM;\n    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHook(hook, fromComponent, next, {\n        expectBoolean: true\n      });\n    }\n  }\n\n  /**\n   * Check if a component can activate.\n   *\n   * @param {Object} handler\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canActivate(handler, transition, next) {\n    resolveAsyncComponent(handler, function (Component) {\n      // have to check due to async-ness\n      if (transition.aborted) {\n        return;\n      }\n      // determine if this component can be activated\n      var hook = getRouteConfig(Component, 'canActivate');\n      if (!hook) {\n        next();\n      } else {\n        transition.callHook(hook, null, next, {\n          expectBoolean: true\n        });\n      }\n    });\n  }\n\n  /**\n   * Call deactivate hooks for existing router-views.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function deactivate(view, transition, next) {\n    var component = view.childVM;\n    var hook = getRouteConfig(component, 'deactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHooks(hook, component, next);\n    }\n  }\n\n  /**\n   * Activate / switch component for a router-view.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Number} depth\n   * @param {Function} [cb]\n   */\n\n  function activate(view, transition, depth, cb, reuse) {\n    var handler = transition.activateQueue[depth];\n    if (!handler) {\n      saveChildView(view);\n      if (view._bound) {\n        view.setComponent(null);\n      }\n      cb && cb();\n      return;\n    }\n\n    var Component = view.Component = handler.component;\n    var activateHook = getRouteConfig(Component, 'activate');\n    var dataHook = getRouteConfig(Component, 'data');\n    var waitForData = getRouteConfig(Component, 'waitForData');\n\n    view.depth = depth;\n    view.activated = false;\n\n    var component = undefined;\n    var loading = !!(dataHook && !waitForData);\n\n    // \"reuse\" is a flag passed down when the parent view is\n    // either reused via keep-alive or as a child of a kept-alive view.\n    // of course we can only reuse if the current kept-alive instance\n    // is of the correct type.\n    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\n    if (reuse) {\n      // just reuse\n      component = view.childVM;\n      component.$loadingRouteData = loading;\n    } else {\n      saveChildView(view);\n\n      // unbuild current component. this step also destroys\n      // and removes all nested child views.\n      view.unbuild(true);\n\n      // build the new component. this will also create the\n      // direct child view of the current one. it will register\n      // itself as view.childView.\n      component = view.build({\n        _meta: {\n          $loadingRouteData: loading\n        },\n        created: function created() {\n          this._routerView = view;\n        }\n      });\n\n      // handle keep-alive.\n      // when a kept-alive child vm is restored, we need to\n      // add its cached child views into the router's view list,\n      // and also properly update current view's child view.\n      if (view.keepAlive) {\n        component.$loadingRouteData = loading;\n        var cachedChildView = component._keepAliveRouterView;\n        if (cachedChildView) {\n          view.childView = cachedChildView;\n          component._keepAliveRouterView = null;\n        }\n      }\n    }\n\n    // cleanup the component in case the transition is aborted\n    // before the component is ever inserted.\n    var cleanup = function cleanup() {\n      component.$destroy();\n    };\n\n    // actually insert the component and trigger transition\n    var insert = function insert() {\n      if (reuse) {\n        cb && cb();\n        return;\n      }\n      var router = transition.router;\n      if (router._rendered || router._transitionOnLoad) {\n        view.transition(component);\n      } else {\n        // no transition on first render, manual transition\n        /* istanbul ignore if */\n        if (view.setCurrent) {\n          // 0.12 compat\n          view.setCurrent(component);\n        } else {\n          // 1.0\n          view.childVM = component;\n        }\n        component.$before(view.anchor, null, false);\n      }\n      cb && cb();\n    };\n\n    var afterData = function afterData() {\n      // activate the child view\n      if (view.childView) {\n        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n      }\n      insert();\n    };\n\n    // called after activation hook is resolved\n    var afterActivate = function afterActivate() {\n      view.activated = true;\n      if (dataHook && waitForData) {\n        // wait until data loaded to insert\n        loadData(component, transition, dataHook, afterData, cleanup);\n      } else {\n        // load data and insert at the same time\n        if (dataHook) {\n          loadData(component, transition, dataHook);\n        }\n        afterData();\n      }\n    };\n\n    if (activateHook) {\n      transition.callHooks(activateHook, component, afterActivate, {\n        cleanup: cleanup,\n        postActivate: true\n      });\n    } else {\n      afterActivate();\n    }\n  }\n\n  /**\n   * Reuse a view, just reload data if necessary.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   */\n\n  function reuse(view, transition) {\n    var component = view.childVM;\n    var dataHook = getRouteConfig(component, 'data');\n    if (dataHook) {\n      loadData(component, transition, dataHook);\n    }\n  }\n\n  /**\n   * Asynchronously load and apply data to component.\n   *\n   * @param {Vue} component\n   * @param {Transition} transition\n   * @param {Function} hook\n   * @param {Function} cb\n   * @param {Function} cleanup\n   */\n\n  function loadData(component, transition, hook, cb, cleanup) {\n    component.$loadingRouteData = true;\n    transition.callHooks(hook, component, function () {\n      component.$loadingRouteData = false;\n      component.$emit('route-data-loaded', component);\n      cb && cb();\n    }, {\n      cleanup: cleanup,\n      postActivate: true,\n      processData: function processData(data) {\n        // handle promise sugar syntax\n        var promises = [];\n        if (isPlainObject(data)) {\n          Object.keys(data).forEach(function (key) {\n            var val = data[key];\n            if (isPromise(val)) {\n              promises.push(val.then(function (resolvedVal) {\n                component.$set(key, resolvedVal);\n              }));\n            } else {\n              component.$set(key, val);\n            }\n          });\n        }\n        if (promises.length) {\n          return promises[0].constructor.all(promises);\n        }\n      }\n    });\n  }\n\n  /**\n   * Save the child view for a kept-alive view so that\n   * we can restore it when it is switched back to.\n   *\n   * @param {Directive} view\n   */\n\n  function saveChildView(view) {\n    if (view.keepAlive && view.childVM && view.childView) {\n      view.childVM._keepAliveRouterView = view.childView;\n    }\n    view.childView = null;\n  }\n\n  /**\n   * Check plain object.\n   *\n   * @param {*} val\n   */\n\n  function isPlainObject(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  /**\n   * A RouteTransition object manages the pipeline of a\n   * router-view switching process. This is also the object\n   * passed into user route hooks.\n   *\n   * @param {Router} router\n   * @param {Route} to\n   * @param {Route} from\n   */\n\n  var RouteTransition = (function () {\n    function RouteTransition(router, to, from) {\n      babelHelpers.classCallCheck(this, RouteTransition);\n\n      this.router = router;\n      this.to = to;\n      this.from = from;\n      this.next = null;\n      this.aborted = false;\n      this.done = false;\n    }\n\n    /**\n     * Abort current transition and return to previous location.\n     */\n\n    RouteTransition.prototype.abort = function abort() {\n      if (!this.aborted) {\n        this.aborted = true;\n        // if the root path throws an error during validation\n        // on initial load, it gets caught in an infinite loop.\n        var abortingOnLoad = !this.from.path && this.to.path === '/';\n        if (!abortingOnLoad) {\n          this.router.replace(this.from.path || '/');\n        }\n      }\n    };\n\n    /**\n     * Abort current transition and redirect to a new location.\n     *\n     * @param {String} path\n     */\n\n    RouteTransition.prototype.redirect = function redirect(path) {\n      if (!this.aborted) {\n        this.aborted = true;\n        if (typeof path === 'string') {\n          path = mapParams(path, this.to.params, this.to.query);\n        } else {\n          path.params = path.params || this.to.params;\n          path.query = path.query || this.to.query;\n        }\n        this.router.replace(path);\n      }\n    };\n\n    /**\n     * A router view transition's pipeline can be described as\n     * follows, assuming we are transitioning from an existing\n     * <router-view> chain [Component A, Component B] to a new\n     * chain [Component A, Component C]:\n     *\n     *  A    A\n     *  | => |\n     *  B    C\n     *\n     * 1. Reusablity phase:\n     *   -> canReuse(A, A)\n     *   -> canReuse(B, C)\n     *   -> determine new queues:\n     *      - deactivation: [B]\n     *      - activation: [C]\n     *\n     * 2. Validation phase:\n     *   -> canDeactivate(B)\n     *   -> canActivate(C)\n     *\n     * 3. Activation phase:\n     *   -> deactivate(B)\n     *   -> activate(C)\n     *\n     * Each of these steps can be asynchronous, and any\n     * step can potentially abort the transition.\n     *\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.start = function start(cb) {\n      var transition = this;\n\n      // determine the queue of views to deactivate\n      var deactivateQueue = [];\n      var view = this.router._rootView;\n      while (view) {\n        deactivateQueue.unshift(view);\n        view = view.childView;\n      }\n      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\n      // determine the queue of route handlers to activate\n      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n        return match.handler;\n      });\n\n      // 1. Reusability phase\n      var i = undefined,\n          reuseQueue = undefined;\n      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n          break;\n        }\n      }\n      if (i > 0) {\n        reuseQueue = reverseDeactivateQueue.slice(0, i);\n        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n        activateQueue = activateQueue.slice(i);\n      }\n\n      // 2. Validation phase\n      transition.runQueue(deactivateQueue, canDeactivate, function () {\n        transition.runQueue(activateQueue, canActivate, function () {\n          transition.runQueue(deactivateQueue, deactivate, function () {\n            // 3. Activation phase\n\n            // Update router current route\n            transition.router._onTransitionValidated(transition);\n\n            // trigger reuse for all reused views\n            reuseQueue && reuseQueue.forEach(function (view) {\n              return reuse(view, transition);\n            });\n\n            // the root of the chain that needs to be replaced\n            // is the top-most non-reusable view.\n            if (deactivateQueue.length) {\n              var _view = deactivateQueue[deactivateQueue.length - 1];\n              var depth = reuseQueue ? reuseQueue.length : 0;\n              activate(_view, transition, depth, cb);\n            } else {\n              cb();\n            }\n          });\n        });\n      });\n    };\n\n    /**\n     * Asynchronously and sequentially apply a function to a\n     * queue.\n     *\n     * @param {Array} queue\n     * @param {Function} fn\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n      var transition = this;\n      step(0);\n      function step(index) {\n        if (index >= queue.length) {\n          cb();\n        } else {\n          fn(queue[index], transition, function () {\n            step(index + 1);\n          });\n        }\n      }\n    };\n\n    /**\n     * Call a user provided route transition hook and handle\n     * the response (e.g. if the user returns a promise).\n     *\n     * If the user neither expects an argument nor returns a\n     * promise, the hook is assumed to be synchronous.\n     *\n     * @param {Function} hook\n     * @param {*} [context]\n     * @param {Function} [cb]\n     * @param {Object} [options]\n     *                 - {Boolean} expectBoolean\n     *                 - {Boolean} postActive\n     *                 - {Function} processData\n     *                 - {Function} cleanup\n     */\n\n    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\n      var _ref$expectBoolean = _ref.expectBoolean;\n      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n      var _ref$postActivate = _ref.postActivate;\n      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n      var processData = _ref.processData;\n      var cleanup = _ref.cleanup;\n\n      var transition = this;\n      var nextCalled = false;\n\n      // abort the transition\n      var abort = function abort() {\n        cleanup && cleanup();\n        transition.abort();\n      };\n\n      // handle errors\n      var onError = function onError(err) {\n        postActivate ? next() : abort();\n        if (err && !transition.router._suppress) {\n          warn$1('Uncaught error during transition: ');\n          throw err instanceof Error ? err : new Error(err);\n        }\n      };\n\n      // since promise swallows errors, we have to\n      // throw it in the next tick...\n      var onPromiseError = function onPromiseError(err) {\n        try {\n          onError(err);\n        } catch (e) {\n          setTimeout(function () {\n            throw e;\n          }, 0);\n        }\n      };\n\n      // advance the transition to the next step\n      var next = function next() {\n        if (nextCalled) {\n          warn$1('transition.next() should be called only once.');\n          return;\n        }\n        nextCalled = true;\n        if (transition.aborted) {\n          cleanup && cleanup();\n          return;\n        }\n        cb && cb();\n      };\n\n      var nextWithBoolean = function nextWithBoolean(res) {\n        if (typeof res === 'boolean') {\n          res ? next() : abort();\n        } else if (isPromise(res)) {\n          res.then(function (ok) {\n            ok ? next() : abort();\n          }, onPromiseError);\n        } else if (!hook.length) {\n          next();\n        }\n      };\n\n      var nextWithData = function nextWithData(data) {\n        var res = undefined;\n        try {\n          res = processData(data);\n        } catch (err) {\n          return onError(err);\n        }\n        if (isPromise(res)) {\n          res.then(next, onPromiseError);\n        } else {\n          next();\n        }\n      };\n\n      // expose a clone of the transition object, so that each\n      // hook gets a clean copy and prevent the user from\n      // messing with the internals.\n      var exposed = {\n        to: transition.to,\n        from: transition.from,\n        abort: abort,\n        next: processData ? nextWithData : next,\n        redirect: function redirect() {\n          transition.redirect.apply(transition, arguments);\n        }\n      };\n\n      // actually call the hook\n      var res = undefined;\n      try {\n        res = hook.call(context, exposed);\n      } catch (err) {\n        return onError(err);\n      }\n\n      if (expectBoolean) {\n        // boolean hooks\n        nextWithBoolean(res);\n      } else if (isPromise(res)) {\n        // promise\n        if (processData) {\n          res.then(nextWithData, onPromiseError);\n        } else {\n          res.then(next, onPromiseError);\n        }\n      } else if (processData && isPlainOjbect(res)) {\n        // data promise sugar\n        nextWithData(res);\n      } else if (!hook.length) {\n        next();\n      }\n    };\n\n    /**\n     * Call a single hook or an array of async hooks in series.\n     *\n     * @param {Array} hooks\n     * @param {*} context\n     * @param {Function} cb\n     * @param {Object} [options]\n     */\n\n    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n      var _this = this;\n\n      if (Array.isArray(hooks)) {\n        this.runQueue(hooks, function (hook, _, next) {\n          if (!_this.aborted) {\n            _this.callHook(hook, context, next, options);\n          }\n        }, cb);\n      } else {\n        this.callHook(hooks, context, cb, options);\n      }\n    };\n\n    return RouteTransition;\n  })();\n\n  function isPlainOjbect(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  function toArray(val) {\n    return val ? Array.prototype.slice.call(val) : [];\n  }\n\n  var internalKeysRE = /^(component|subRoutes|fullPath)$/;\n\n  /**\n   * Route Context Object\n   *\n   * @param {String} path\n   * @param {Router} router\n   */\n\n  var Route = function Route(path, router) {\n    var _this = this;\n\n    babelHelpers.classCallCheck(this, Route);\n\n    var matched = router._recognizer.recognize(path);\n    if (matched) {\n      // copy all custom fields from route configs\n      [].forEach.call(matched, function (match) {\n        for (var key in match.handler) {\n          if (!internalKeysRE.test(key)) {\n            _this[key] = match.handler[key];\n          }\n        }\n      });\n      // set query and params\n      this.query = matched.queryParams;\n      this.params = [].reduce.call(matched, function (prev, cur) {\n        if (cur.params) {\n          for (var key in cur.params) {\n            prev[key] = cur.params[key];\n          }\n        }\n        return prev;\n      }, {});\n    }\n    // expose path and router\n    this.path = path;\n    // for internal use\n    this.matched = matched || router._notFoundHandler;\n    // internal reference to router\n    Object.defineProperty(this, 'router', {\n      enumerable: false,\n      value: router\n    });\n    // Important: freeze self to prevent observation\n    Object.freeze(this);\n  };\n\n  function applyOverride (Vue) {\n    var _Vue$util = Vue.util;\n    var extend = _Vue$util.extend;\n    var isArray = _Vue$util.isArray;\n    var defineReactive = _Vue$util.defineReactive;\n\n    // override Vue's init and destroy process to keep track of router instances\n    var init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      options = options || {};\n      var root = options._parent || options.parent || this;\n      var router = root.$router;\n      var route = root.$route;\n      if (router) {\n        // expose router\n        this.$router = router;\n        router._children.push(this);\n        /* istanbul ignore if */\n        if (this._defineMeta) {\n          // 0.12\n          this._defineMeta('$route', route);\n        } else {\n          // 1.0\n          defineReactive(this, '$route', route);\n        }\n      }\n      init.call(this, options);\n    };\n\n    var destroy = Vue.prototype._destroy;\n    Vue.prototype._destroy = function () {\n      if (!this._isBeingDestroyed && this.$router) {\n        this.$router._children.$remove(this);\n      }\n      destroy.apply(this, arguments);\n    };\n\n    // 1.0 only: enable route mixins\n    var strats = Vue.config.optionMergeStrategies;\n    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\n    if (strats) {\n      strats.route = function (parentVal, childVal) {\n        if (!childVal) return parentVal;\n        if (!parentVal) return childVal;\n        var ret = {};\n        extend(ret, parentVal);\n        for (var key in childVal) {\n          var a = ret[key];\n          var b = childVal[key];\n          // for data, activate and deactivate, we need to merge them into\n          // arrays similar to lifecycle hooks.\n          if (a && hooksToMergeRE.test(key)) {\n            ret[key] = (isArray(a) ? a : [a]).concat(b);\n          } else {\n            ret[key] = b;\n          }\n        }\n        return ret;\n      };\n    }\n  }\n\n  function View (Vue) {\n\n    var _ = Vue.util;\n    var componentDef =\n    // 0.12\n    Vue.directive('_component') ||\n    // 1.0\n    Vue.internalDirectives.component;\n    // <router-view> extends the internal component directive\n    var viewDef = _.extend({}, componentDef);\n\n    // with some overrides\n    _.extend(viewDef, {\n\n      _isRouterView: true,\n\n      bind: function bind() {\n        var route = this.vm.$route;\n        /* istanbul ignore if */\n        if (!route) {\n          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');\n          return;\n        }\n        // force dynamic directive so v-component doesn't\n        // attempt to build right now\n        this._isDynamicLiteral = true;\n        // finally, init by delegating to v-component\n        componentDef.bind.call(this);\n\n        // locate the parent view\n        var parentView = undefined;\n        var parent = this.vm;\n        while (parent) {\n          if (parent._routerView) {\n            parentView = parent._routerView;\n            break;\n          }\n          parent = parent.$parent;\n        }\n        if (parentView) {\n          // register self as a child of the parent view,\n          // instead of activating now. This is so that the\n          // child's activate hook is called after the\n          // parent's has resolved.\n          this.parentView = parentView;\n          parentView.childView = this;\n        } else {\n          // this is the root view!\n          var router = route.router;\n          router._rootView = this;\n        }\n\n        // handle late-rendered view\n        // two possibilities:\n        // 1. root view rendered after transition has been\n        //    validated;\n        // 2. child view rendered after parent view has been\n        //    activated.\n        var transition = route.router._currentTransition;\n        if (!parentView && transition.done || parentView && parentView.activated) {\n          var depth = parentView ? parentView.depth + 1 : 0;\n          activate(this, transition, depth);\n        }\n      },\n\n      unbind: function unbind() {\n        if (this.parentView) {\n          this.parentView.childView = null;\n        }\n        componentDef.unbind.call(this);\n      }\n    });\n\n    Vue.elementDirective('router-view', viewDef);\n  }\n\n  var trailingSlashRE = /\\/$/;\n  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n  var queryStringRE = /\\?.*$/;\n\n  // install v-link, which provides navigation support for\n  // HTML5 history mode\n  function Link (Vue) {\n    var _Vue$util = Vue.util;\n    var _bind = _Vue$util.bind;\n    var isObject = _Vue$util.isObject;\n    var addClass = _Vue$util.addClass;\n    var removeClass = _Vue$util.removeClass;\n\n    var onPriority = Vue.directive('on').priority;\n    var LINK_UPDATE = '__vue-router-link-update__';\n\n    var activeId = 0;\n\n    Vue.directive('link-active', {\n      priority: 9999,\n      bind: function bind() {\n        var _this = this;\n\n        var id = String(activeId++);\n        // collect v-links contained within this element.\n        // we need do this here before the parent-child relationship\n        // gets messed up by terminal directives (if, for, components)\n        var childLinks = this.el.querySelectorAll('[v-link]');\n        for (var i = 0, l = childLinks.length; i < l; i++) {\n          var link = childLinks[i];\n          var existingId = link.getAttribute(LINK_UPDATE);\n          var value = existingId ? existingId + ',' + id : id;\n          // leave a mark on the link element which can be persisted\n          // through fragment clones.\n          link.setAttribute(LINK_UPDATE, value);\n        }\n        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {\n          if (link.activeIds.indexOf(id) > -1) {\n            link.updateClasses(path, _this.el);\n          }\n        });\n      },\n      unbind: function unbind() {\n        this.vm.$off(LINK_UPDATE, this.cb);\n      }\n    });\n\n    Vue.directive('link', {\n      priority: onPriority - 2,\n\n      bind: function bind() {\n        var vm = this.vm;\n        /* istanbul ignore if */\n        if (!vm.$route) {\n          warn$1('v-link can only be used inside a router-enabled app.');\n          return;\n        }\n        this.router = vm.$route.router;\n        // update things when the route changes\n        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n        // check v-link-active ids\n        var activeIds = this.el.getAttribute(LINK_UPDATE);\n        if (activeIds) {\n          this.el.removeAttribute(LINK_UPDATE);\n          this.activeIds = activeIds.split(',');\n        }\n        // no need to handle click if link expects to be opened\n        // in a new window/tab.\n        /* istanbul ignore if */\n        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n          return;\n        }\n        // handle click\n        this.handler = _bind(this.onClick, this);\n        this.el.addEventListener('click', this.handler);\n      },\n\n      update: function update(target) {\n        this.target = target;\n        if (isObject(target)) {\n          this.append = target.append;\n          this.exact = target.exact;\n          this.prevActiveClass = this.activeClass;\n          this.activeClass = target.activeClass;\n        }\n        this.onRouteUpdate(this.vm.$route);\n      },\n\n      onClick: function onClick(e) {\n        // don't redirect with control keys\n        /* istanbul ignore if */\n        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n        // don't redirect when preventDefault called\n        /* istanbul ignore if */\n        if (e.defaultPrevented) return;\n        // don't redirect on right click\n        /* istanbul ignore if */\n        if (e.button !== 0) return;\n\n        var target = this.target;\n        if (target) {\n          // v-link with expression, just go\n          e.preventDefault();\n          this.router.go(target);\n        } else {\n          // no expression, delegate for an <a> inside\n          var el = e.target;\n          while (el.tagName !== 'A' && el !== this.el) {\n            el = el.parentNode;\n          }\n          if (el.tagName === 'A' && sameOrigin(el)) {\n            e.preventDefault();\n            var path = el.pathname;\n            if (this.router.history.root) {\n              path = path.replace(this.router.history.rootRE, '');\n            }\n            this.router.go({\n              path: path,\n              replace: target && target.replace,\n              append: target && target.append\n            });\n          }\n        }\n      },\n\n      onRouteUpdate: function onRouteUpdate(route) {\n        // router.stringifyPath is dependent on current route\n        // and needs to be called again whenver route changes.\n        var newPath = this.router.stringifyPath(this.target);\n        if (this.path !== newPath) {\n          this.path = newPath;\n          this.updateActiveMatch();\n          this.updateHref();\n        }\n        if (this.activeIds) {\n          this.vm.$emit(LINK_UPDATE, this, route.path);\n        } else {\n          this.updateClasses(route.path, this.el);\n        }\n      },\n\n      updateActiveMatch: function updateActiveMatch() {\n        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n      },\n\n      updateHref: function updateHref() {\n        if (this.el.tagName !== 'A') {\n          return;\n        }\n        var path = this.path;\n        var router = this.router;\n        var isAbsolute = path.charAt(0) === '/';\n        // do not format non-hash relative paths\n        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n        if (href) {\n          this.el.href = href;\n        } else {\n          this.el.removeAttribute('href');\n        }\n      },\n\n      updateClasses: function updateClasses(path, el) {\n        var activeClass = this.activeClass || this.router._linkActiveClass;\n        // clear old class\n        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {\n          toggleClasses(el, this.prevActiveClass, removeClass);\n        }\n        // remove query string before matching\n        var dest = this.path.replace(queryStringRE, '');\n        path = path.replace(queryStringRE, '');\n        // add new class\n        if (this.exact) {\n          if (dest === path ||\n          // also allow additional trailing slash\n          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        } else {\n          if (this.activeRE && this.activeRE.test(path)) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        }\n      },\n\n      unbind: function unbind() {\n        this.el.removeEventListener('click', this.handler);\n        this.unwatch && this.unwatch();\n      }\n    });\n\n    function sameOrigin(link) {\n      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n    }\n\n    // this function is copied from v-bind:class implementation until\n    // we properly expose it...\n    function toggleClasses(el, key, fn) {\n      key = key.trim();\n      if (key.indexOf(' ') === -1) {\n        fn(el, key);\n        return;\n      }\n      var keys = key.split(/\\s+/);\n      for (var i = 0, l = keys.length; i < l; i++) {\n        fn(el, keys[i]);\n      }\n    }\n  }\n\n  var historyBackends = {\n    abstract: AbstractHistory,\n    hash: HashHistory,\n    html5: HTML5History\n  };\n\n  // late bind during install\n  var Vue = undefined;\n\n  /**\n   * Router constructor\n   *\n   * @param {Object} [options]\n   */\n\n  var Router = (function () {\n    function Router() {\n      var _this = this;\n\n      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref$hashbang = _ref.hashbang;\n      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n      var _ref$abstract = _ref.abstract;\n      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n      var _ref$history = _ref.history;\n      var history = _ref$history === undefined ? false : _ref$history;\n      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n      var _ref$root = _ref.root;\n      var root = _ref$root === undefined ? null : _ref$root;\n      var _ref$linkActiveClass = _ref.linkActiveClass;\n      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n      babelHelpers.classCallCheck(this, Router);\n\n      /* istanbul ignore if */\n      if (!Router.installed) {\n        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n      }\n\n      // Vue instances\n      this.app = null;\n      this._children = [];\n\n      // route recognizer\n      this._recognizer = new RouteRecognizer();\n      this._guardRecognizer = new RouteRecognizer();\n\n      // state\n      this._started = false;\n      this._startCb = null;\n      this._currentRoute = {};\n      this._currentTransition = null;\n      this._previousTransition = null;\n      this._notFoundHandler = null;\n      this._notFoundRedirect = null;\n      this._beforeEachHooks = [];\n      this._afterEachHooks = [];\n\n      // trigger transition on initial render?\n      this._rendered = false;\n      this._transitionOnLoad = transitionOnLoad;\n\n      // history mode\n      this._root = root;\n      this._abstract = abstract;\n      this._hashbang = hashbang;\n\n      // check if HTML5 history is available\n      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n      this._history = history && hasPushState;\n      this._historyFallback = history && !hasPushState;\n\n      // create history object\n      var inBrowser = Vue.util.inBrowser;\n      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\n      var History = historyBackends[this.mode];\n      this.history = new History({\n        root: root,\n        hashbang: this._hashbang,\n        onChange: function onChange(path, state, anchor) {\n          _this._match(path, state, anchor);\n        }\n      });\n\n      // other options\n      this._saveScrollPosition = saveScrollPosition;\n      this._linkActiveClass = linkActiveClass;\n      this._suppress = suppressTransitionError;\n    }\n\n    /**\n     * Allow directly passing components to a route\n     * definition.\n     *\n     * @param {String} path\n     * @param {Object} handler\n     */\n\n    // API ===================================================\n\n    /**\n    * Register a map of top-level paths.\n    *\n    * @param {Object} map\n    */\n\n    Router.prototype.map = function map(_map) {\n      for (var route in _map) {\n        this.on(route, _map[route]);\n      }\n      return this;\n    };\n\n    /**\n     * Register a single root-level path\n     *\n     * @param {String} rootPath\n     * @param {Object} handler\n     *                 - {String} component\n     *                 - {Object} [subRoutes]\n     *                 - {Boolean} [forceRefresh]\n     *                 - {Function} [before]\n     *                 - {Function} [after]\n     */\n\n    Router.prototype.on = function on(rootPath, handler) {\n      if (rootPath === '*') {\n        this._notFound(handler);\n      } else {\n        this._addRoute(rootPath, handler, []);\n      }\n      return this;\n    };\n\n    /**\n     * Set redirects.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.redirect = function redirect(map) {\n      for (var path in map) {\n        this._addRedirect(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set aliases.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.alias = function alias(map) {\n      for (var path in map) {\n        this._addAlias(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set global before hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.beforeEach = function beforeEach(fn) {\n      this._beforeEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Set global after hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.afterEach = function afterEach(fn) {\n      this._afterEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Navigate to a given path.\n     * The path can be an object describing a named path in\n     * the format of { name: '...', params: {}, query: {}}\n     * The path is assumed to be already decoded, and will\n     * be resolved against root (if provided)\n     *\n     * @param {String|Object} path\n     * @param {Boolean} [replace]\n     */\n\n    Router.prototype.go = function go(path) {\n      var replace = false;\n      var append = false;\n      if (Vue.util.isObject(path)) {\n        replace = path.replace;\n        append = path.append;\n      }\n      path = this.stringifyPath(path);\n      if (path) {\n        this.history.go(path, replace, append);\n      }\n    };\n\n    /**\n     * Short hand for replacing current path\n     *\n     * @param {String} path\n     */\n\n    Router.prototype.replace = function replace(path) {\n      if (typeof path === 'string') {\n        path = { path: path };\n      }\n      path.replace = true;\n      this.go(path);\n    };\n\n    /**\n     * Start the router.\n     *\n     * @param {VueConstructor} App\n     * @param {String|Element} container\n     * @param {Function} [cb]\n     */\n\n    Router.prototype.start = function start(App, container, cb) {\n      /* istanbul ignore if */\n      if (this._started) {\n        warn$1('already started.');\n        return;\n      }\n      this._started = true;\n      this._startCb = cb;\n      if (!this.app) {\n        /* istanbul ignore if */\n        if (!App || !container) {\n          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n        }\n        /* istanbul ignore if */\n        if (App instanceof Vue) {\n          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n        }\n        this._appContainer = container;\n        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n        // give it a name for better debugging\n        Ctor.options.name = Ctor.options.name || 'RouterApp';\n      }\n\n      // handle history fallback in browsers that do not\n      // support HTML5 history API\n      if (this._historyFallback) {\n        var _location = window.location;\n        var _history = new HTML5History({ root: this._root });\n        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n        if (path && path !== '/') {\n          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n          return;\n        }\n      }\n\n      this.history.start();\n    };\n\n    /**\n     * Stop listening to route changes.\n     */\n\n    Router.prototype.stop = function stop() {\n      this.history.stop();\n      this._started = false;\n    };\n\n    /**\n     * Normalize named route object / string paths into\n     * a string.\n     *\n     * @param {Object|String|Number} path\n     * @return {String}\n     */\n\n    Router.prototype.stringifyPath = function stringifyPath(path) {\n      var generatedPath = '';\n      if (path && typeof path === 'object') {\n        if (path.name) {\n          var extend = Vue.util.extend;\n          var currentParams = this._currentTransition && this._currentTransition.to.params;\n          var targetParams = path.params || {};\n          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n          generatedPath = encodeURI(this._recognizer.generate(path.name, params));\n        } else if (path.path) {\n          generatedPath = encodeURI(path.path);\n        }\n        if (path.query) {\n          // note: the generated query string is pre-URL-encoded by the recognizer\n          var query = this._recognizer.generateQueryString(path.query);\n          if (generatedPath.indexOf('?') > -1) {\n            generatedPath += '&' + query.slice(1);\n          } else {\n            generatedPath += query;\n          }\n        }\n      } else {\n        generatedPath = encodeURI(path ? path + '' : '');\n      }\n      return generatedPath;\n    };\n\n    // Internal methods ======================================\n\n    /**\n    * Add a route containing a list of segments to the internal\n    * route recognizer. Will be called recursively to add all\n    * possible sub-routes.\n    *\n    * @param {String} path\n    * @param {Object} handler\n    * @param {Array} segments\n    */\n\n    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n      guardComponent(path, handler);\n      handler.path = path;\n      handler.fullPath = (segments.reduce(function (path, segment) {\n        return path + segment.path;\n      }, '') + path).replace('//', '/');\n      segments.push({\n        path: path,\n        handler: handler\n      });\n      this._recognizer.add(segments, {\n        as: handler.name\n      });\n      // add sub routes\n      if (handler.subRoutes) {\n        for (var subPath in handler.subRoutes) {\n          // recursively walk all sub routes\n          this._addRoute(subPath, handler.subRoutes[subPath],\n          // pass a copy in recursion to avoid mutating\n          // across branches\n          segments.slice());\n        }\n      }\n    };\n\n    /**\n     * Set the notFound route handler.\n     *\n     * @param {Object} handler\n     */\n\n    Router.prototype._notFound = function _notFound(handler) {\n      guardComponent('*', handler);\n      this._notFoundHandler = [{ handler: handler }];\n    };\n\n    /**\n     * Add a redirect record.\n     *\n     * @param {String} path\n     * @param {String} redirectPath\n     */\n\n    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n      if (path === '*') {\n        this._notFoundRedirect = redirectPath;\n      } else {\n        this._addGuard(path, redirectPath, this.replace);\n      }\n    };\n\n    /**\n     * Add an alias record.\n     *\n     * @param {String} path\n     * @param {String} aliasPath\n     */\n\n    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n      this._addGuard(path, aliasPath, this._match);\n    };\n\n    /**\n     * Add a path guard.\n     *\n     * @param {String} path\n     * @param {String} mappedPath\n     * @param {Function} handler\n     */\n\n    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n      var _this2 = this;\n\n      this._guardRecognizer.add([{\n        path: path,\n        handler: function handler(match, query) {\n          var realPath = mapParams(mappedPath, match.params, query);\n          _handler.call(_this2, realPath);\n        }\n      }]);\n    };\n\n    /**\n     * Check if a path matches any redirect records.\n     *\n     * @param {String} path\n     * @return {Boolean} - if true, will skip normal match.\n     */\n\n    Router.prototype._checkGuard = function _checkGuard(path) {\n      var matched = this._guardRecognizer.recognize(path, true);\n      if (matched) {\n        matched[0].handler(matched[0], matched.queryParams);\n        return true;\n      } else if (this._notFoundRedirect) {\n        matched = this._recognizer.recognize(path);\n        if (!matched) {\n          this.replace(this._notFoundRedirect);\n          return true;\n        }\n      }\n    };\n\n    /**\n     * Match a URL path and set the route context on vm,\n     * triggering view updates.\n     *\n     * @param {String} path\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._match = function _match(path, state, anchor) {\n      var _this3 = this;\n\n      if (this._checkGuard(path)) {\n        return;\n      }\n\n      var currentRoute = this._currentRoute;\n      var currentTransition = this._currentTransition;\n\n      if (currentTransition) {\n        if (currentTransition.to.path === path) {\n          // do nothing if we have an active transition going to the same path\n          return;\n        } else if (currentRoute.path === path) {\n          // We are going to the same path, but we also have an ongoing but\n          // not-yet-validated transition. Abort that transition and reset to\n          // prev transition.\n          currentTransition.aborted = true;\n          this._currentTransition = this._prevTransition;\n          return;\n        } else {\n          // going to a totally different path. abort ongoing transition.\n          currentTransition.aborted = true;\n        }\n      }\n\n      // construct new route and transition context\n      var route = new Route(path, this);\n      var transition = new RouteTransition(this, route, currentRoute);\n\n      // current transition is updated right now.\n      // however, current route will only be updated after the transition has\n      // been validated.\n      this._prevTransition = currentTransition;\n      this._currentTransition = transition;\n\n      if (!this.app) {\n        (function () {\n          // initial render\n          var router = _this3;\n          _this3.app = new _this3._appConstructor({\n            el: _this3._appContainer,\n            created: function created() {\n              this.$router = router;\n            },\n            _meta: {\n              $route: route\n            }\n          });\n        })();\n      }\n\n      // check global before hook\n      var beforeHooks = this._beforeEachHooks;\n      var startTransition = function startTransition() {\n        transition.start(function () {\n          _this3._postTransition(route, state, anchor);\n        });\n      };\n\n      if (beforeHooks.length) {\n        transition.runQueue(beforeHooks, function (hook, _, next) {\n          if (transition === _this3._currentTransition) {\n            transition.callHook(hook, null, next, {\n              expectBoolean: true\n            });\n          }\n        }, startTransition);\n      } else {\n        startTransition();\n      }\n\n      if (!this._rendered && this._startCb) {\n        this._startCb.call(null);\n      }\n\n      // HACK:\n      // set rendered to true after the transition start, so\n      // that components that are acitvated synchronously know\n      // whether it is the initial render.\n      this._rendered = true;\n    };\n\n    /**\n     * Set current to the new transition.\n     * This is called by the transition object when the\n     * validation of a route has succeeded.\n     *\n     * @param {Transition} transition\n     */\n\n    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n      // set current route\n      var route = this._currentRoute = transition.to;\n      // update route context for all children\n      if (this.app.$route !== route) {\n        this.app.$route = route;\n        this._children.forEach(function (child) {\n          child.$route = route;\n        });\n      }\n      // call global after hook\n      if (this._afterEachHooks.length) {\n        this._afterEachHooks.forEach(function (hook) {\n          return hook.call(null, {\n            to: transition.to,\n            from: transition.from\n          });\n        });\n      }\n      this._currentTransition.done = true;\n    };\n\n    /**\n     * Handle stuff after the transition.\n     *\n     * @param {Route} route\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n      // handle scroll positions\n      // saved scroll positions take priority\n      // then we check if the path has an anchor\n      var pos = state && state.pos;\n      if (pos && this._saveScrollPosition) {\n        Vue.nextTick(function () {\n          window.scrollTo(pos.x, pos.y);\n        });\n      } else if (anchor) {\n        Vue.nextTick(function () {\n          var el = document.getElementById(anchor.slice(1));\n          if (el) {\n            window.scrollTo(window.scrollX, el.offsetTop);\n          }\n        });\n      }\n    };\n\n    return Router;\n  })();\n\n  function guardComponent(path, handler) {\n    var comp = handler.component;\n    if (Vue.util.isPlainObject(comp)) {\n      comp = handler.component = Vue.extend(comp);\n    }\n    /* istanbul ignore if */\n    if (typeof comp !== 'function') {\n      handler.component = null;\n      warn$1('invalid component for route \"' + path + '\".');\n    }\n  }\n\n  /* Installation */\n\n  Router.installed = false;\n\n  /**\n   * Installation interface.\n   * Install the necessary directives.\n   */\n\n  Router.install = function (externalVue) {\n    /* istanbul ignore if */\n    if (Router.installed) {\n      warn$1('already installed.');\n      return;\n    }\n    Vue = externalVue;\n    applyOverride(Vue);\n    View(Vue);\n    Link(Vue);\n    exports$1.Vue = Vue;\n    Router.installed = true;\n  };\n\n  // auto install\n  /* istanbul ignore if */\n  if (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(Router);\n  }\n\n  return Router;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-router/dist/vue-router.js\n ** module id = 5\n ** module chunks = 0\n **/","/* FileSaver.js\n * A saveAs() FileSaver implementation.\n * 1.1.20160328\n *\n * By Eli Grey, http://eligrey.com\n * License: MIT\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = saveAs || (function(view) {\n\t\"use strict\";\n\t// IE <10 is explicitly unsupported\n\tif (typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\tvar\n\t\t  doc = view.document\n\t\t  // only get URL when necessary in case Blob.js hasn't overridden it yet\n\t\t, get_URL = function() {\n\t\t\treturn view.URL || view.webkitURL || view;\n\t\t}\n\t\t, save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t, can_use_save_link = \"download\" in save_link\n\t\t, click = function(node) {\n\t\t\tvar event = new MouseEvent(\"click\");\n\t\t\tnode.dispatchEvent(event);\n\t\t}\n\t\t, is_safari = /Version\\/[\\d\\.]+.*Safari/.test(navigator.userAgent)\n\t\t, webkit_req_fs = view.webkitRequestFileSystem\n\t\t, req_fs = view.requestFileSystem || webkit_req_fs || view.mozRequestFileSystem\n\t\t, throw_outside = function(ex) {\n\t\t\t(view.setImmediate || view.setTimeout)(function() {\n\t\t\t\tthrow ex;\n\t\t\t}, 0);\n\t\t}\n\t\t, force_saveable_type = \"application/octet-stream\"\n\t\t, fs_min_size = 0\n\t\t// the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\n\t\t, arbitrary_revoke_timeout = 1000 * 40 // in ms\n\t\t, revoke = function(file) {\n\t\t\tvar revoker = function() {\n\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t} else { // file is a File\n\t\t\t\t\tfile.remove();\n\t\t\t\t}\n\t\t\t};\n\t\t\t/* // Take note W3C:\n\t\t\tvar\n\t\t\t  uri = typeof file === \"string\" ? file : file.toURL()\n\t\t\t, revoker = function(evt) {\n\t\t\t\t// idealy DownloadFinishedEvent.data would be the URL requested\n\t\t\t\tif (evt.data === uri) {\n\t\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t\t} else { // file is a File\n\t\t\t\t\t\tfile.remove();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t;\n\t\t\tview.addEventListener(\"downloadfinished\", revoker);\n\t\t\t*/\n\t\t\tsetTimeout(revoker, arbitrary_revoke_timeout);\n\t\t}\n\t\t, dispatch = function(filesaver, event_types, event) {\n\t\t\tevent_types = [].concat(event_types);\n\t\t\tvar i = event_types.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t, auto_bom = function(blob) {\n\t\t\t// prepend BOM for UTF-8 XML and text/* types (including HTML)\n\t\t\tif (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n\t\t\t\treturn new Blob([\"\\ufeff\", blob], {type: blob.type});\n\t\t\t}\n\t\t\treturn blob;\n\t\t}\n\t\t, FileSaver = function(blob, name, no_auto_bom) {\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\tvar\n\t\t\t\t  filesaver = this\n\t\t\t\t, type = blob.type\n\t\t\t\t, blob_changed = false\n\t\t\t\t, object_url\n\t\t\t\t, target_view\n\t\t\t\t, dispatch_all = function() {\n\t\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t\t\t}\n\t\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t\t, fs_error = function() {\n\t\t\t\t\tif (target_view && is_safari && typeof FileReader !== \"undefined\") {\n\t\t\t\t\t\t// Safari doesn't allow downloading of blob urls\n\t\t\t\t\t\tvar reader = new FileReader();\n\t\t\t\t\t\treader.onloadend = function() {\n\t\t\t\t\t\t\tvar base64Data = reader.result;\n\t\t\t\t\t\t\ttarget_view.location.href = \"data:attachment/file\" + base64Data.slice(base64Data.search(/[,;]/));\n\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\tdispatch_all();\n\t\t\t\t\t\t};\n\t\t\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// don't create more object URLs than needed\n\t\t\t\t\tif (blob_changed || !object_url) {\n\t\t\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\t\t}\n\t\t\t\t\tif (target_view) {\n\t\t\t\t\t\ttarget_view.location.href = object_url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar new_tab = view.open(object_url, \"_blank\");\n\t\t\t\t\t\tif (new_tab === undefined && is_safari) {\n\t\t\t\t\t\t\t//Apple do not allow window.open, see http://bit.ly/1kZffRI\n\t\t\t\t\t\t\tview.location.href = object_url\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t}\n\t\t\t\t, abortable = function(func) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif (filesaver.readyState !== filesaver.DONE) {\n\t\t\t\t\t\t\treturn func.apply(this, arguments);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t, create_if_not_found = {create: true, exclusive: false}\n\t\t\t\t, slice\n\t\t\t;\n\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\tif (!name) {\n\t\t\t\tname = \"download\";\n\t\t\t}\n\t\t\tif (can_use_save_link) {\n\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tsave_link.href = object_url;\n\t\t\t\t\tsave_link.download = name;\n\t\t\t\t\tclick(save_link);\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Object and web filesystem URLs have a problem saving in Google Chrome when\n\t\t\t// viewed in a tab, so I force save with application/octet-stream\n\t\t\t// http://code.google.com/p/chromium/issues/detail?id=91158\n\t\t\t// Update: Google errantly closed 91158, I submitted it again:\n\t\t\t// https://code.google.com/p/chromium/issues/detail?id=389642\n\t\t\tif (view.chrome && type && type !== force_saveable_type) {\n\t\t\t\tslice = blob.slice || blob.webkitSlice;\n\t\t\t\tblob = slice.call(blob, 0, blob.size, force_saveable_type);\n\t\t\t\tblob_changed = true;\n\t\t\t}\n\t\t\t// Since I can't be sure that the guessed media type will trigger a download\n\t\t\t// in WebKit, I append .download to the filename.\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=65440\n\t\t\tif (webkit_req_fs && name !== \"download\") {\n\t\t\t\tname += \".download\";\n\t\t\t}\n\t\t\tif (type === force_saveable_type || webkit_req_fs) {\n\t\t\t\ttarget_view = view;\n\t\t\t}\n\t\t\tif (!req_fs) {\n\t\t\t\tfs_error();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfs_min_size += blob.size;\n\t\t\treq_fs(view.TEMPORARY, fs_min_size, abortable(function(fs) {\n\t\t\t\tfs.root.getDirectory(\"saved\", create_if_not_found, abortable(function(dir) {\n\t\t\t\t\tvar save = function() {\n\t\t\t\t\t\tdir.getFile(name, create_if_not_found, abortable(function(file) {\n\t\t\t\t\t\t\tfile.createWriter(abortable(function(writer) {\n\t\t\t\t\t\t\t\twriter.onwriteend = function(event) {\n\t\t\t\t\t\t\t\t\ttarget_view.location.href = file.toURL();\n\t\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\t\t\tdispatch(filesaver, \"writeend\", event);\n\t\t\t\t\t\t\t\t\trevoke(file);\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\twriter.onerror = function() {\n\t\t\t\t\t\t\t\t\tvar error = writer.error;\n\t\t\t\t\t\t\t\t\tif (error.code !== error.ABORT_ERR) {\n\t\t\t\t\t\t\t\t\t\tfs_error();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\"writestart progress write abort\".split(\" \").forEach(function(event) {\n\t\t\t\t\t\t\t\t\twriter[\"on\" + event] = filesaver[\"on\" + event];\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\twriter.write(blob);\n\t\t\t\t\t\t\t\tfilesaver.abort = function() {\n\t\t\t\t\t\t\t\t\twriter.abort();\n\t\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.WRITING;\n\t\t\t\t\t\t\t}), fs_error);\n\t\t\t\t\t\t}), fs_error);\n\t\t\t\t\t};\n\t\t\t\t\tdir.getFile(name, {create: false}, abortable(function(file) {\n\t\t\t\t\t\t// delete file if it already exists\n\t\t\t\t\t\tfile.remove();\n\t\t\t\t\t\tsave();\n\t\t\t\t\t}), abortable(function(ex) {\n\t\t\t\t\t\tif (ex.code === ex.NOT_FOUND_ERR) {\n\t\t\t\t\t\t\tsave();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfs_error();\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t}), fs_error);\n\t\t\t}), fs_error);\n\t\t}\n\t\t, FS_proto = FileSaver.prototype\n\t\t, saveAs = function(blob, name, no_auto_bom) {\n\t\t\treturn new FileSaver(blob, name, no_auto_bom);\n\t\t}\n\t;\n\t// IE 10+ (native saveAs)\n\tif (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n\t\treturn function(blob, name, no_auto_bom) {\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\treturn navigator.msSaveOrOpenBlob(blob, name || \"download\");\n\t\t};\n\t}\n\n\tFS_proto.abort = function() {\n\t\tvar filesaver = this;\n\t\tfilesaver.readyState = filesaver.DONE;\n\t\tdispatch(filesaver, \"abort\");\n\t};\n\tFS_proto.readyState = FS_proto.INIT = 0;\n\tFS_proto.WRITING = 1;\n\tFS_proto.DONE = 2;\n\n\tFS_proto.error =\n\tFS_proto.onwritestart =\n\tFS_proto.onprogress =\n\tFS_proto.onwrite =\n\tFS_proto.onabort =\n\tFS_proto.onerror =\n\tFS_proto.onwriteend =\n\t\tnull;\n\n\treturn saveAs;\n}(\n\t   typeof self !== \"undefined\" && self\n\t|| typeof window !== \"undefined\" && window\n\t|| this.content\n));\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports.saveAs = saveAs;\n} else if ((typeof define !== \"undefined\" && define !== null) && (define.amd !== null)) {\n  define([], function() {\n    return saveAs;\n  });\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./modules/file-saver.js\n **/","export default {\n\t'/': {\n\t\tcomponent: require('./views/home')\n\t},\n\t'/add': {\n\t\tcomponent: require('./views/add')\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./routes.js\n **/","<style src=\"purecss/build/pure.css\"></style>\n<style>\n\tbody {\n\t\tfont: 16px/1.7 \"lucida grande\",\"lucida sans unicode\",lucida,\"Helvetica Neue\",helvetica,\"Hiragino Sans GB\",\"Microsoft YaHei\",\"WenQuanYi Micro Hei\",sans-serif;\n\t}\n\t.container {\n\t\tmax-width: 600px;\n\t\tmargin: 0 auto;\n\t\tpadding: 20px 10px;\n\t}\n\th1, h2, h3, h4, h5 {\n\t\tmargin: 0;\n\t}\n\ta {\n\t\tcolor: #333;\n\t\ttext-decoration: none;\n\t}\n\t.footer {\n\t\tpadding: 20px 0;\n\t\tborder-top: 1px solid #e2e2e2;\n\t\tmargin-top: 20px;\n\t}\n\t.error {\n\t\tpadding: 5px 0;\n\t\tcolor: #BF3F3F;\n\t}\n\thr {\n\t\tborder: none;\n\t\tbackground-color: #ccc;\n\t\theight: 1px;\n\t\tmargin: 10px 0;\n\t}\n\tcode {\n\t\tbackground-color: #f0f0f0;\n\t\tpadding: 5px;\n\t\tborder-radius: 2px;\n\t}\n\t.about {\n\t\tbackground-color: #f9f9f9;\n\t\tpadding: 10px 20px;\n\t\tmargin-top: 10px;\n\t\tfont-size: 13px;\n\t\t& .title {\n\t\t\tfont-weight: 400;\n\t\t\tfont-size: 22px;\n\t\t\tmargin-bottom: 10px;\n\t\t}\n\t}\n</style>\n<style src=\"./css/button\"></style>\n\n<template>\n\t<github></github>\n\t<div class=\"container\">\n\t\t<h2 class=\"site-name\">\n\t\t\t<a v-link=\"{path: '/'}\">Tik Tok</a>\n\t\t</h2>\n\t\t<router-view></router-view>\n\t\t<div class=\"footer\">\n\t\t\t&copy; {{ year }} Tik Tok ❤️ By <a href=\"https://github.com/egoist\">EGOIST</a>.\n\t\t</div>\n\t</div>\n</template>\n\n\n<script>\n\timport github from './components/github'\n\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tyear: new Date().getFullYear()\n\t\t\t}\n\t\t},\n\t\tcomponents: {github}\n\t}\n</script>\n\n\n\n/** WEBPACK FOOTER **\n ** app.vue?1c252dd8\n **/","<style>\n\t.pure-controls {\n\t\tmargin-top: 10px;\n\t}\n</style>\n\n<template>\n\t<div class=\"page-add\">\n\t\t<form class=\"pure-form pure-form-stacked\" @submit.prevent=\"handleSubmit\">\n\t\t\t<fieldset>\n\t\t\t\t<label for=\"title\">Title</label>\n\t\t\t\t<input id=\"title\" type=\"text\" class=\"pure-input-1\" v-model=\"item.title\">\n\n\t\t\t\t<label for=\"description\">Description</label>\n\t\t\t\t<textarea id=\"description\" rows=\"3\" class=\"pure-input-1\" v-model=\"item.description\"></textarea>\n\n\t\t\t\t<div class=\"pure-g\">\n\t\t\t\t\t<div class=\"pure-u-1-2\">\n\t\t\t\t\t\t<label for=\"date\">Date</label>\n\t\t\t\t\t\t<input id=\"date\" type=\"date\" class=\"pure-u-23-24\" v-model=\"item.date\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"pure-u-1-2\">\n\t\t\t\t\t\t<label for=\"time\">Time</label>\n\t\t\t\t\t\t<input id=\"time\" type=\"time\" class=\"pure-u-23-24\" v-model=\"item.time\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"error\" v-if=\"error\">{{ error }}</div>\n\n\t\t\t\t<div class=\"pure-controls\">\n\t\t\t\t\t<button type=\"submit\" class=\"pure-u-1-3 pure-button pure-button-primary button-large\">Add</button>\n\t\t\t\t</div>\n\n\t\t\t</fieldset>\n\t\t</form>\n\t\t<div class=\"about\">\n\t\t\t<h2 class=\"title\">What is a <code>Tik Tok</code>?</h2>\n\t\t\t<div class=\"content\">\n\t\t\t\tA <code>Tik Tok</code> is the time since you last did something.\n\t\t\t\t<hr>\n\t\t\t\t一个 <code>Tik Tok</code> 是距离你上次做一件事经历的时间。\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n\timport randomString from 'random-string'\n\timport {addItem} from '../store'\n\n\tfunction hasEmptyField(obj) {\n\t\tfor (const key in obj) {\n\t\t\tif (!obj[key]) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t\treturn false\n\t}\n\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\terror: '',\n\t\t\t\titem: {\n\t\t\t\t\ttitle: '',\n\t\t\t\t\tdescription: '',\n\t\t\t\t\tdate: '',\n\t\t\t\t\ttime: ''\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tmethods: {\n\t\t\thandleSubmit() {\n\t\t\t\t// TODO: more advanced object validation\n\t\t\t\tif (hasEmptyField(this.item)) {\n\t\t\t\t\tthis.error = 'Form data is not complete!'\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tconst item = {\n\t\t\t\t\t...this.item,\n\t\t\t\t\tid: randomString(5)\n\t\t\t\t}\n\t\t\t\taddItem(item)\n\t\t\t\tthis.$route.router.go('/')\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n\n\n/** WEBPACK FOOTER **\n ** add.vue?368c0480\n **/","<style>\n\t.page-home {\n\t\tmargin-top: 10px;\n\t}\n\t.list {\n\t\tmargin-top: 10px;\n\t}\n\t.item {\n\t\tpadding: 10px 0;\n\t\tdisplay: inline-block;\n\t\twidth: 100%;\n\t\tposition: relative;\n\t\t&:not(:last-child) {\n\t\t\tborder-bottom: 1px solid #e2e2e2;\n\t\t}\n\t\t&:hover {\n\t\t\t& .item-meta {\n\t\t\t\tvisibility: visible;\n\t\t\t}\n\t\t}\n\t\t& .item-timer {\n\t\t\tfloat: left;\n\t\t\tbackground-color: #e2e2e2;\n\t\t\tborder: 2px solid #ccc;\n\t\t\tpadding: 10px;\n\t\t\twidth: 120px;\n\t\t\tfont-size: 22px;\n\t\t}\n\t\t& .item-main {\n\t\t\tpadding-left: 160px;\n\t\t}\n\t\t& .item-title {\n\t\t\tline-height: 1.4;\n\t\t\tfont-weight: 400;\n\t\t\tfont-size: 18px;\n\t\t}\n\t\t& .item-description {\n\t\t\tfont-size: 13px;\n\t\t\tcolor: #999;\n\t\t}\n\t\t& .item-meta {\n\t\t\tfont-size: 13px;\n\t\t\tcolor: #999;\n\t\t\tvisibility: hidden;\n\t\t\t& span {\n\t\t\t\tcursor: pointer;\n\t\t\t\t&:hover {\n\t\t\t\t\ttext-decoration: underline;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t@media screen and (min-width: 768px) {\n\t\t.item {\n\t\t\t& .item-timer {\n\t\t\t\tposition: absolute;\n\t\t\t\twidth: auto;\n\t\t\t\tleft: 0;\n\t\t\t\ttransform: translateX(-100%);\n\t\t\t}\n\t\t\t& .item-main {\n\t\t\t\tpadding-left: 10px;\n\t\t\t}\n\t\t}\n\t}\n</style>\n\n<template>\n\t<div class=\"page-home\">\n\t\t<a class=\"pure-button pure-button-primary\" v-link=\"{path: '/add'}\">Add A Tok</a>\n\t\t<button @click=\"exportAsJSON\" class=\"pure-button pure-button-success\">Export As JSON</button>\n\t\t<div class=\"list\">\n\t\t\t<div class=\"item\" v-for=\"item in list\">\n\t\t\t\t<div class=\"item-timer\">\n\t\t\t\t\t{{ item | timer }} days\n\t\t\t\t</div>\n\t\t\t\t<div class=\"item-main\">\n\t\t\t\t\t<h2 class=\"item-title\">{{ item.title }}</h2>\n\t\t\t\t\t<div class=\"item-description\">{{ item.description }}</div>\n\t\t\t\t\t<div class=\"item-meta\">\n\t\t\t\t\t\t<span class=\"item-remove\" @click=\"removeItem(item.id)\">Remove</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n\timport {saveAs} from '../modules/file-saver'\n\timport {getAll, override} from '../store'\n\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tlist: getAll().reverse()\n\t\t\t}\n\t\t},\n\t\tmethods: {\n\t\t\tremoveItem(id) {\n\t\t\t\tthis.list = this.list.filter(item => item.id !== id)\n\t\t\t\toverride(this.list)\n\t\t\t},\n\t\t\texportAsJSON() {\n\t\t\t\tconst content = new Blob([JSON.stringify(this.list, null, 2)], {\n\t\t\t\t\ttype: 'application/json;charset=utf-8'\n\t\t\t\t})\n\t\t\t\tsaveAs(content, `tiktok-${new Date()}.json`)\n\t\t\t}\n\t\t},\n\t\tfilters: {\n\t\t\ttimer(item) {\n\t\t\t\tconst time = new Date(`${item.date} ${item.time}`).getTime()\n\t\t\t\tconst now = Date.now()\n\t\t\t\tconst duration = (now - time) / 1000 / 86400\n\n\t\t\t\treturn Math.floor(duration)\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n\n\n/** WEBPACK FOOTER **\n ** home.vue?474b0d78\n **/","module.exports = { \"default\": require(\"core-js/library/fn/object/assign\"), __esModule: true };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/babel-runtime/core-js/object/assign.js\n ** module id = 11\n ** module chunks = 0\n **/","\"use strict\";\n\nvar _Object$assign = require(\"babel-runtime/core-js/object/assign\")[\"default\"];\n\nexports[\"default\"] = _Object$assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.__esModule = true;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/babel-runtime/helpers/extends.js\n ** module id = 12\n ** module chunks = 0\n **/","var core = require('../../modules/$.core');\nmodule.exports = function stringify(it){ // eslint-disable-line no-unused-vars\n  return (core.JSON && core.JSON.stringify || JSON.stringify).apply(JSON, arguments);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/fn/json/stringify.js\n ** module id = 13\n ** module chunks = 0\n **/","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/$.core').Object.assign;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/fn/object/assign.js\n ** module id = 14\n ** module chunks = 0\n **/","module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.a-function.js\n ** module id = 15\n ** module chunks = 0\n **/","var toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.cof.js\n ** module id = 16\n ** module chunks = 0\n **/","// optional / simple context binding\nvar aFunction = require('./$.a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.ctx.js\n ** module id = 17\n ** module chunks = 0\n **/","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.defined.js\n ** module id = 18\n ** module chunks = 0\n **/","var global    = require('./$.global')\n  , core      = require('./$.core')\n  , ctx       = require('./$.ctx')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && key in target;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(param){\n        return this instanceof C ? new C(param) : C(param);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    if(IS_PROTO)(exports[PROTOTYPE] || (exports[PROTOTYPE] = {}))[key] = out;\n  }\n};\n// type bitmap\n$export.F = 1;  // forced\n$export.G = 2;  // global\n$export.S = 4;  // static\n$export.P = 8;  // proto\n$export.B = 16; // bind\n$export.W = 32; // wrap\nmodule.exports = $export;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.export.js\n ** module id = 19\n ** module chunks = 0\n **/","module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.fails.js\n ** module id = 20\n ** module chunks = 0\n **/","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.global.js\n ** module id = 21\n ** module chunks = 0\n **/","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./$.cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.iobject.js\n ** module id = 22\n ** module chunks = 0\n **/","var $Object = Object;\nmodule.exports = {\n  create:     $Object.create,\n  getProto:   $Object.getPrototypeOf,\n  isEnum:     {}.propertyIsEnumerable,\n  getDesc:    $Object.getOwnPropertyDescriptor,\n  setDesc:    $Object.defineProperty,\n  setDescs:   $Object.defineProperties,\n  getKeys:    $Object.keys,\n  getNames:   $Object.getOwnPropertyNames,\n  getSymbols: $Object.getOwnPropertySymbols,\n  each:       [].forEach\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.js\n ** module id = 23\n ** module chunks = 0\n **/","// 19.1.2.1 Object.assign(target, source, ...)\nvar $        = require('./$')\n  , toObject = require('./$.to-object')\n  , IObject  = require('./$.iobject');\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = require('./$.fails')(function(){\n  var a = Object.assign\n    , A = {}\n    , B = {}\n    , S = Symbol()\n    , K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function(k){ B[k] = k; });\n  return a({}, A)[S] != 7 || Object.keys(a({}, B)).join('') != K;\n}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n  var T     = toObject(target)\n    , $$    = arguments\n    , $$len = $$.length\n    , index = 1\n    , getKeys    = $.getKeys\n    , getSymbols = $.getSymbols\n    , isEnum     = $.isEnum;\n  while($$len > index){\n    var S      = IObject($$[index++])\n      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n      , length = keys.length\n      , j      = 0\n      , key;\n    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n  }\n  return T;\n} : Object.assign;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.object-assign.js\n ** module id = 24\n ** module chunks = 0\n **/","// 7.1.13 ToObject(argument)\nvar defined = require('./$.defined');\nmodule.exports = function(it){\n  return Object(defined(it));\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.to-object.js\n ** module id = 25\n ** module chunks = 0\n **/","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./$.export');\n\n$export($export.S + $export.F, 'Object', {assign: require('./$.object-assign')});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/es6.object.assign.js\n ** module id = 26\n ** module chunks = 0\n **/","module.exports = \"<github></github> <div class=container> <h2 class=site-name> <a v-link=\\\"{path: '/'}\\\">Tik Tok</a> </h2> <router-view></router-view> <div class=footer> &copy; {{ year }} Tik Tok ❤️ By <a href=https://github.com/egoist>EGOIST</a>. </div> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/vue-html-loader!../tooling/~/vue-loader/lib/selector.js?type=template&index=0!./app.vue\n ** module id = 32\n ** module chunks = 0\n **/","module.exports = \"<a href=https://github.com/egoist/tiktok class=github-corner><svg width=80 height=80 viewBox=\\\"0 0 250 250\\\" style=fill:#70B7FD;color:#fff;position:absolute;top:0;border:0;right:0><path d=\\\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\\\"></path><path d=\\\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\\\" fill=currentColor style=\\\"transform-origin:130px 106px\\\" class=octo-arm></path><path d=\\\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\\\" fill=currentColor class=octo-body></path></svg></a><style>.github-corner:hover .octo-arm{animation:octocat-wave 560ms ease-in-out}@keyframes octocat-wave{0%,100%{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@media (max-width:500px){.github-corner:hover .octo-arm{animation:none}.github-corner .octo-arm{animation:octocat-wave 560ms ease-in-out}}</style>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/vue-html-loader!../tooling/~/vue-loader/lib/selector.js?type=template&index=0!./components/github.vue\n ** module id = 33\n ** module chunks = 0\n **/","module.exports = \"<div class=page-add> <form class=\\\"pure-form pure-form-stacked\\\" @submit.prevent=handleSubmit> <fieldset> <label for=title>Title</label> <input id=title type=text class=pure-input-1 v-model=item.title> <label for=description>Description</label> <textarea id=description rows=3 class=pure-input-1 v-model=item.description></textarea> <div class=pure-g> <div class=pure-u-1-2> <label for=date>Date</label> <input id=date type=date class=pure-u-23-24 v-model=item.date> </div> <div class=pure-u-1-2> <label for=time>Time</label> <input id=time type=time class=pure-u-23-24 v-model=item.time> </div> </div> <div class=error v-if=error>{{ error }}</div> <div class=pure-controls> <button type=submit class=\\\"pure-u-1-3 pure-button pure-button-primary button-large\\\">Add</button> </div> </fieldset> </form> <div class=about> <h2 class=title>What is a <code>Tik Tok</code>?</h2> <div class=content> A <code>Tik Tok</code> is the time since you last did something. <hr> 一个 <code>Tik Tok</code> 是距离你上次做一件事经历的时间。 </div> </div> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/vue-html-loader!../tooling/~/vue-loader/lib/selector.js?type=template&index=0!./views/add.vue\n ** module id = 34\n ** module chunks = 0\n **/","module.exports = \"<div class=page-home> <a class=\\\"pure-button pure-button-primary\\\" v-link=\\\"{path: '/add'}\\\">Add A Tok</a> <button @click=exportAsJSON class=\\\"pure-button pure-button-success\\\">Export As JSON</button> <div class=list> <div class=item v-for=\\\"item in list\\\"> <div class=item-timer> {{ item | timer }} days </div> <div class=item-main> <h2 class=item-title>{{ item.title }}</h2> <div class=item-description>{{ item.description }}</div> <div class=item-meta> <span class=item-remove @click=removeItem(item.id)>Remove</span> </div> </div> </div> </div> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/vue-html-loader!../tooling/~/vue-loader/lib/selector.js?type=template&index=0!./views/home.vue\n ** module id = 35\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../tooling/node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!style-loader!css-loader!./../tooling/node_modules/vue-loader/lib/style-rewriter.js!postcss-loader!purecss/build/pure.css\")\nrequire(\"!!./../tooling/node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!style-loader!css-loader!./../tooling/node_modules/vue-loader/lib/style-rewriter.js!postcss-loader!./css/button\")\nrequire(\"!!./../tooling/node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!style-loader!css-loader!./../tooling/node_modules/vue-loader/lib/style-rewriter.js!postcss-loader!./../tooling/node_modules/vue-loader/lib/selector.js?type=style&index=0!./app.vue\")\n__vue_script__ = require(\"!!babel-loader!./../tooling/node_modules/vue-loader/lib/selector.js?type=script&index=0!./app.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../tooling/node_modules/vue-loader/lib/selector.js?type=template&index=0!./app.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app.vue\n ** module id = 36\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_template__ = require(\"!!vue-html-loader!./../../tooling/node_modules/vue-loader/lib/selector.js?type=template&index=0!./github.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./components/github.vue\n ** module id = 37\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../tooling/node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!style-loader!css-loader!./../../tooling/node_modules/vue-loader/lib/style-rewriter.js!postcss-loader!./../../tooling/node_modules/vue-loader/lib/selector.js?type=style&index=0!./add.vue\")\n__vue_script__ = require(\"!!babel-loader!./../../tooling/node_modules/vue-loader/lib/selector.js?type=script&index=0!./add.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../tooling/node_modules/vue-loader/lib/selector.js?type=template&index=0!./add.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./views/add.vue\n ** module id = 38\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../tooling/node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!style-loader!css-loader!./../../tooling/node_modules/vue-loader/lib/style-rewriter.js!postcss-loader!./../../tooling/node_modules/vue-loader/lib/selector.js?type=style&index=0!./home.vue\")\n__vue_script__ = require(\"!!babel-loader!./../../tooling/node_modules/vue-loader/lib/selector.js?type=script&index=0!./home.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../tooling/node_modules/vue-loader/lib/selector.js?type=template&index=0!./home.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./views/home.vue\n ** module id = 39\n ** module chunks = 0\n **/","/*!\n * Vue.js v1.0.18\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined') {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n  if (this.size === this.limit) {\n    removed = this.shift();\n  }\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} str\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '(.+?)' + unsafeClose + '|' + open + '(.+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  text = text.replace(/\\n/g, '');\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n    warn = function (msg, e) {\n      if (hasConsole && (!config.silent || config.debug)) {\n        console.warn('[Vue warn]: ' + msg);\n        /* istanbul ignore if */\n        if (config.debug) {\n          if (e) {\n            throw e;\n          } else {\n            console.warn(new Error('Warning Stack Trace').stack);\n          }\n        }\n      }\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  var doc = document.documentElement;\n  var parent = node && node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index.\n *\n * @param {Number} index\n * @param {*} val\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if ((isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} doNotObserve\n */\n\nfunction defineReactive(obj, key, val, doNotObserve) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  // if doNotObserve is true, only use the child value observer\n  // if it already exists, and do not attempt to create it.\n  // this allows freezing a large object from the root and\n  // avoid unnecessary observation inside v-for fragments.\n  var childOb = doNotObserve ? isObject(val) && val.__ob__ : observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = doNotObserve ? isObject(newVal) && newVal.__ob__ : observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        !/^(data|time|rtc|rb)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el) {\n  // dynamic syntax\n  var exp = getAttr(el, 'is');\n  if (exp != null) {\n    return { id: exp };\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  var key = prop.path;\n  value = coerceProp(prop, value);\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop.options);\n  }\n  if (assertProp(prop, value)) {\n    defineReactive(vm, key, value, true /* doNotObserve */);\n  }\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} options\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, options) {\n  // no default, return undefined\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Object/Array as default prop values will be shared ' + 'across multiple instances. Use a factory function ' + 'to return the default value instead.');\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction assertProp(prop, value) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = true;\n  var expectedType;\n  if (type) {\n    if (type === String) {\n      expectedType = 'string';\n      valid = typeof value === expectedType;\n    } else if (type === Number) {\n      expectedType = 'number';\n      valid = typeof value === 'number';\n    } else if (type === Boolean) {\n      expectedType = 'boolean';\n      valid = typeof value === 'boolean';\n    } else if (type === Function) {\n      expectedType = 'function';\n      valid = typeof value === 'function';\n    } else if (type === Object) {\n      expectedType = 'object';\n      valid = isPlainObject(value);\n    } else if (type === Array) {\n      expectedType = 'array';\n      valid = isArray(value);\n    } else {\n      valid = value instanceof type;\n    }\n  }\n  if (!valid) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid prop: type check failed for ' + prop.path + '=\"' + prop.raw + '\".' + ' Expected ' + formatType(expectedType) + ', got ' + formatValue(value) + '.');\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for ' + prop.path + '=\"' + prop.raw + '\"');\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  // coerce is a function\n  return coerce(value);\n}\n\nfunction formatType(val) {\n  return val ? val.charAt(0).toUpperCase() + val.slice(1) : 'custom type';\n}\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * 0.11 deprecation warning\n */\n\nstrats.paramAttributes = function () {\n  /* istanbul ignore next */\n  process.env.NODE_ENV !== 'production' && warn('\"paramAttributes\" option has been deprecated in 0.12. ' + 'Use \"props\" instead.');\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  var options = {};\n  var key;\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  return assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n}\n\n/**\n * Assert asset exists\n */\n\nfunction assertAsset(val, type, id) {\n  if (!val) {\n    process.env.NODE_ENV !== 'production' && warn('Failed to resolve ' + type + ': ' + id);\n  }\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tassertAsset: assertAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tinitProp: initProp,\n\tassertProp: assertProp,\n\tcoerceProp: coerceProp,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initScope().\n    this._data = {};\n\n    // save raw constructor data before merge\n    // so that we know which properties are provided at\n    // instantiation.\n    this._runtimeData = options.data;\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.');\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar booleanLiteralRE = /^(?:true|false)$/;\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here becaue the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat true/false as paths\n  !booleanLiteralRE.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queueIndex;\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar internalQueueDepleted = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue = [];\n  userQueue = [];\n  has = {};\n  circular = {};\n  waiting = internalQueueDepleted = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  runBatcherQueue(queue);\n  internalQueueDepleted = true;\n  runBatcherQueue(userQueue);\n  // dev tool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n  resetBatcherState();\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (queueIndex = 0; queueIndex < queue.length; queueIndex++) {\n    var watcher = queue[queueIndex];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        queue.splice(has[id], 1);\n        warn('You may have an infinite update loop for watcher ' + 'with expression: ' + watcher.expression);\n      }\n    }\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    if (internalQueueDepleted && !watcher.user) {\n      // an internal watcher triggered by a user watcher...\n      // let's run it immediately after current user watcher is done.\n      userQueue.splice(queueIndex + 1, 0, watcher);\n    } else {\n      // push watcher into appropriate queue\n      var q = watcher.user ? userQueue : queue;\n      has[id] = q.length;\n      q.push(watcher);\n      // queue the flush\n      if (!waiting) {\n        waiting = true;\n        nextTick(flushBatcherQueue);\n      }\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String} expression\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = Object.create(null);\n  this.newDepIds = null;\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression \"' + this.expression + '\". ' + (config.debug ? '' : 'Turn on debug mode to see stack trace.'), e);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter \"' + this.expression + '\"', e);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.');\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n  this.newDepIds = Object.create(null);\n  this.newDeps.length = 0;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds[id]) {\n    this.newDepIds[id] = true;\n    this.newDeps.push(dep);\n    if (!this.depIds[id]) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds[dep.id]) {\n      dep.removeSub(this);\n    }\n  }\n  this.depIds = this.newDepIds;\n  var tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nfunction traverse(val) {\n  var i, keys;\n  if (isArray(val)) {\n    i = val.length;\n    while (i--) traverse(val[i]);\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) traverse(val[keys[i]]);\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n\n  if (!tagMatch && !entityMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment.\n  if (isRealTemplate(node)) {\n    trimNode(node.content);\n    return node.content;\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el)) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar FOR = 2000;\nvar IF = 2000;\nvar SLOT = 2100;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Alias is required in v-for.');\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          frag.scope[alias] = value;\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    defineReactive(scope, alias, value, true /* do not observe */);\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.before(prevEl.nextSibling);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else {\n        def(value, id, frag);\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * wathcer's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.');\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.');\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.value = _toString(value);\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', this.forceUpdate);\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model. You might want to use a two-way filter ' + 'to ensure correct behavior.');\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        value = value.replace(importantRE, '').trim();\n      }\n      this.el.style.setProperty(prop, value, isImportant);\n    } else {\n      this.el.style.removeProperty(prop);\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixes[i] + prop;\n    }\n  }\n  if (camel in testEl.style) {\n    return prop;\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.');\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.');\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.');\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.');\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (value && typeof value === 'string') {\n      this.handleObject(stringToObject(value));\n    } else if (isPlainObject(value)) {\n      this.handleObject(value);\n    } else if (isArray(value)) {\n      this.handleArray(value);\n    } else {\n      this.cleanup();\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    this.cleanup(value);\n    var keys = this.prevKeys = Object.keys(value);\n    for (var i = 0, l = keys.length; i < l; i++) {\n      var key = keys[i];\n      if (value[key]) {\n        addClass(this.el, key);\n      } else {\n        removeClass(this.el, key);\n      }\n    }\n  },\n\n  handleArray: function handleArray(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (value[i]) {\n        addClass(this.el, value[i]);\n      }\n    }\n    this.prevKeys = value.slice();\n  },\n\n  cleanup: function cleanup(value) {\n    if (this.prevKeys) {\n      var i = this.prevKeys.length;\n      while (i--) {\n        var key = this.prevKeys[i];\n        if (key && (!value || !contains(value, key))) {\n          removeClass(this.el, key);\n        }\n      }\n    }\n  }\n};\n\nfunction stringToObject(value) {\n  var res = {};\n  var keys = value.trim().split(/\\s+/);\n  var i = keys.length;\n  while (i--) {\n    res[keys[i]] = true;\n  }\n  return res;\n}\n\nfunction contains(value, key) {\n  return isArray(value) ? value.indexOf(key) > -1 : hasOwn(value, key);\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   */\n\n  resolveComponent: function resolveComponent(id, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || id;\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(id, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      this.waitingFor.$destroy();\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      val = coerceProp(prop, val);\n      if (assertProp(prop, val)) {\n        child[childKey] = val;\n      }\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  // Important hack:\n  // in Chrome, if a just-entered element is applied the\n  // leave class while its interpolated property still has\n  // a very small value (within one frame), Chrome will\n  // skip the leave transition entirely and not firing the\n  // transtionend event. Therefore we need to protected\n  // against such cases using a one-frame timeout.\n  this.justEntered = true;\n  var self = this;\n  setTimeout(function () {\n    self.justEntered = false;\n  }, 17);\n\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    if (oldId) {\n      removeClass(el, oldId + '-transition');\n    }\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.');\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.');\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.');\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.');\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value\n        value = options.type === Boolean && raw === '' ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// terminal directives\nvar terminalDirectives = ['for', 'if'];\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && node.tagName !== 'SCRIPT') {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(el.attributes, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = value;\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n  var value, dirName;\n  for (var i = 0, l = terminalDirectives.length; i < l; i++) {\n    dirName = terminalDirectives[i];\n    value = el.getAttribute('v-' + dirName);\n    if (value != null) {\n      return makeTerminalNodeLinkFn(el, dirName, value, options);\n    }\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} [def]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    // either an element directive, or if/for\n    // #2366 or custom terminal directive\n    def: def || resolveAsset(options, 'directives', dirName)\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.');\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName);\n\n              if (process.env.NODE_ENV !== 'production') {\n                assertAsset(dirDef, 'directive', dirName);\n              }\n\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value)) {\n      value.trim().split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\tterminalDirectives: terminalDirectives,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.');\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    var props = this._props;\n    var runtimeData = this._runtimeData ? typeof this._runtimeData === 'function' ? this._runtimeData() : this._runtimeData : null;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key) || runtimeData && hasOwn(runtimeData, key) && props[key].raw === null) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. Use prop default value instead.');\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n        if (typeof handler === 'function') {\n          handler._fromParent = true;\n          vm.$on(name.replace(eventRE), handler);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn('v-on:' + name + '=\"' + attrs[i].value + '\"' + (vm.$options.name ? ' on component <' + vm.$options.name + '>' : '') + ' expects a function value, got ' + handler);\n        }\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".');\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {String} name\n * @param {Node} el\n * @param {Vue} vm\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} raw\n * @param {Object} def - directive definition object\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n *\n * @param {Object} def\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = params[i];\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {String} name - directive name\n   * @param {Node} node   - target node\n   * @param {Object} desc - parsed directive descriptor\n   * @param {Object} def  - directive definition object\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[i];\n      fn = resolveAsset(this.$options, 'filters', filter.name);\n      if (process.env.NODE_ENV !== 'production') {\n        assertAsset(fn, 'filter', filter.name);\n      }\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String} id\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (id, cb) {\n    var factory = resolveAsset(this.$options, 'components', id);\n    if (process.env.NODE_ENV !== 'production') {\n      assertAsset(factory, 'component', id);\n    }\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component: ' + id + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement && !isSimplePath(exp)) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.');\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id);\n    if (process.env.NODE_ENV !== 'production') {\n      assertAsset(partial, 'partial', id);\n    }\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = toArray(arguments, n).reduce(function (prev, cur) {\n    return prev.concat(cur);\n  }, []);\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains$1(item.$key, search) || contains$1(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains$1(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} sortKey\n * @param {String} reverse\n */\n\nfunction orderBy(arr, sortKey, reverse) {\n  arr = convertArray(arr);\n  if (!sortKey) {\n    return arr;\n  }\n  var order = reverse && reverse < 0 ? -1 : 1;\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(function (a, b) {\n    if (sortKey !== '$key') {\n      if (isObject(a) && '$value' in a) a = a.$value;\n      if (isObject(b) && '$value' in b) b = b.$value;\n    }\n    a = isObject(a) ? getPath(a, sortKey) : a;\n    b = isObject(b) ? getPath(b, sortKey) : b;\n    return a === b ? 0 : a > b ? order : -order;\n  });\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains$1(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains$1(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains$1(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   */\n\n  currency: function currency(value, _currency) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    var stringified = Math.abs(value).toFixed(2);\n    var _int = stringified.slice(0, -3);\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = stringified.slice(-3);\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = id;\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.18';\n\n// devtools global hook\n/* istanbul ignore next */\nif (config.devtools) {\n  if (devtools) {\n    devtools.emit('init', Vue);\n  } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n    console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n  }\n}\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/vue/dist/vue.common.js\n ** module id = 40\n ** module chunks = 0\n **/","module.exports = function() { throw new Error(\"define cannot be used indirect\"); };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/webpack/buildin/amd-define.js\n ** module id = 41\n ** module chunks = 0\n **/","module.exports = __webpack_amd_options__;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/webpack/buildin/amd-options.js\n ** module id = 42\n ** module chunks = 0\n **/"],"sourceRoot":""}